[
  {
    "objectID": "lectures/lecture_02/02_01_lecture_powerpoint_html.html",
    "href": "lectures/lecture_02/02_01_lecture_powerpoint_html.html",
    "title": "Lecture 2: Project Design & Data Visualization",
    "section": "",
    "text": "Covered\n\nInductive vs deductive reasoning\nFormulating research questions\nAccuracy vs precision\nData types and classifications\nSetting up R projects\nInstalling and loading libraries\nReading files into R\nCreating basic graphs"
  },
  {
    "objectID": "lectures/lecture_02/02_01_lecture_powerpoint_html.html#the-objectives",
    "href": "lectures/lecture_02/02_01_lecture_powerpoint_html.html#the-objectives",
    "title": "Lecture 2: Project Design & Data Visualization",
    "section": "The objectives:",
    "text": "The objectives:\n\nDesign a well-organized project\nImplement good naming conventions\n\nControlled vocabulary\nIncluding units in names\n\nCreate and use metadata effectively\nBuild tidy, well-structured spreadsheets\nUnderstand data repositories\nCreate effective visualizations with ggplot2"
  },
  {
    "objectID": "lectures/lecture_02/02_01_lecture_powerpoint_html.html#why-make-plots",
    "href": "lectures/lecture_02/02_01_lecture_powerpoint_html.html#why-make-plots",
    "title": "Lecture 2: Project Design & Data Visualization",
    "section": "Why make plots?",
    "text": "Why make plots?"
  },
  {
    "objectID": "lectures/lecture_02/02_01_lecture_powerpoint_html.html#get-in-a-group-and-discuss",
    "href": "lectures/lecture_02/02_01_lecture_powerpoint_html.html#get-in-a-group-and-discuss",
    "title": "Lecture 2: Project Design & Data Visualization",
    "section": "Get in a group and discuss",
    "text": "Get in a group and discuss\n\nWhat is the purpose of a data visualization?\nWhat elements are essential in an effective plot?\nWhat characteristics define a “good” plot?\nWhat common mistakes make plots ineffective?\n\nNapoleon’s Disastrous Invasion of Russia Detailed in an 1869 Data Visualization: It’s Been Called “the Best Statistical Graphic Ever Drawn”"
  },
  {
    "objectID": "lectures/lecture_02/02_01_lecture_powerpoint_html.html#common-visualization-problems",
    "href": "lectures/lecture_02/02_01_lecture_powerpoint_html.html#common-visualization-problems",
    "title": "Lecture 2: Project Design & Data Visualization",
    "section": "Common Visualization Problems",
    "text": "Common Visualization Problems\n\nData distortion:\n\nNon-zero baselines on bar charts\n3D effects that skew perspective\nInappropriate scales\n\nExcessive “chart junk”:\n\nToo many gridlines\nUnnecessary decorative elements\nRedundant information\n\nPoor color choices:\n\nToo many colors\nNon-colorblind-friendly palettes\nColors that don’t print well in grayscale\n\nMisleading representations:\n\nPie charts with too many categories\nDual y-axes with different scales\nTruncated axes without clear indication"
  },
  {
    "objectID": "lectures/lecture_02/02_01_lecture_powerpoint_html.html#key-takeaways",
    "href": "lectures/lecture_02/02_01_lecture_powerpoint_html.html#key-takeaways",
    "title": "Lecture 2: Project Design & Data Visualization",
    "section": "Key Takeaways",
    "text": "Key Takeaways\n\nPlan your data management from the beginning\n\nConsistent naming conventions\nGood organization\nRegular backups\n\nMake your data tidy from the start\n\nOne observation per row\nOne variable per column\nOne value per cell\n\nCreate effective visualizations by:\n\nFocusing on data, not decoration\nUsing appropriate plot types\nFollowing good design principles\nCustomizing for clear communication\n\nMaster the grammar of graphics to:\n\nBuild plots layer by layer\nCommunicate patterns clearly\nTell compelling stories with data"
  },
  {
    "objectID": "lectures/lecture_02/02_01_lecture_powerpoint_html.html#next-steps",
    "href": "lectures/lecture_02/02_01_lecture_powerpoint_html.html#next-steps",
    "title": "Lecture 2: Project Design & Data Visualization",
    "section": "Next Steps",
    "text": "Next Steps\n\nPractice creating different types of plots\nLearn to combine multiple plots effectively\nExplore statistical transformations in ggplot2\nDevelop a consistent visualization style"
  },
  {
    "objectID": "lectures/lecture_03/03_03_homework_html.html",
    "href": "lectures/lecture_03/03_03_homework_html.html",
    "title": "03_Homework",
    "section": "",
    "text": "This is an assignment for you to practice coding and redo the work we do in class with a few twists on a new dataframe practicing to create new projects and writing new code. I realize you could copy the code from lecture and although you will get the code right, I urge you to retype it form scratch as it will be learned so much faster. This is a new language for you and if you dont “type” == “speak” the language you would remember it…. really and try breaking things. Dont be afraid you can download a new version or fix it… that is how we learn."
  },
  {
    "objectID": "lectures/lecture_03/03_03_homework_html.html#setup",
    "href": "lectures/lecture_03/03_03_homework_html.html#setup",
    "title": "03_Homework",
    "section": "Setup",
    "text": "Setup\nFirst, let’s load the packages we need and the dataframe:\n\n# Load required packages\nlibrary(tidyverse)\nlibrary(patchwork)\n\n# Read in the data file\nw3_df &lt;- read_csv(\"data/lake_trout.csv\") %&gt;% filter(lake %in% c(\"Island Lake\",\"NE 12\")) \n\n# Look at the first few rows\nhead(w3_df)\n\n# A tibble: 6 × 5\n  sampling_site species    length_mm mass_g lake       \n  &lt;chr&gt;         &lt;chr&gt;          &lt;dbl&gt;  &lt;dbl&gt; &lt;chr&gt;      \n1 Island Lake   lake trout       640   2600 Island Lake\n2 Island Lake   lake trout       650   2350 Island Lake\n3 Island Lake   lake trout       585   2200 Island Lake\n4 Island Lake   lake trout       720   3950 Island Lake\n5 Island Lake   lake trout       880   6800 Island Lake\n6 Island Lake   lake trout       830   3200 Island Lake\n\n\nLet’s calculate some basic statistics for mice\n\n# Calculate basic statistics \nw3_stats &lt;- w3_df %&gt;% \n  group_by(lake) %&gt;% \n  summarize(\n    mean_length = mean(length_mm, na.rm = TRUE),\n    sd_length = sd(length_mm, na.rm = TRUE),\n    n = sum(!is.na(length_mm)),\n    se_length = sd_length / sqrt(n)\n  )\n\n# Display the statistics\nw3_stats\n\n# A tibble: 2 × 5\n  lake        mean_length sd_length     n se_length\n  &lt;chr&gt;             &lt;dbl&gt;     &lt;dbl&gt; &lt;int&gt;     &lt;dbl&gt;\n1 Island Lake        698.      121.    10     38.2 \n2 NE 12              348.      127.   323      7.05"
  },
  {
    "objectID": "lectures/lecture_03/03_02_class_activity.html#in-rstudio",
    "href": "lectures/lecture_03/03_02_class_activity.html#in-rstudio",
    "title": "03_Class_Activity",
    "section": "In RStudio:",
    "text": "In RStudio:\n\nclick file - open project and select the 2025_UMD_BioStats_Student_Code.Rproj file or double click on it in the finder or data explorer.\nyour screen will now change as RStudio knows where home is\n\n\n\nNote that in the upper right you will see 2025_UMD_BioStats_Student_Code so you know you are in the right spot\nNow click File - New File - Quarto File\n\n\n\nCreate a file that starts with 02_ and then something that will help you know what is going on like 02_class_activity_in_class.qmd\nNow this file thinks this is home.\nSo I usually copy stuff for the header from another file as its just too hard to remember all this…\n\n---\ntitle: \"Title of your file\" # Title of the file\nauthor: \"Your Name\" # who you are\nformat: # this is the formats that it will render to\n  html:\n    toc: false # not table of contents\n    default: true\n    embed-resources: true # makes everything go into the html file\n    self-contained: true # also makes self contained\neditor: visual # type of editing\nproject:\n  execute-dir: project # where it will look for files\nexecute:\n  keep-md: true # retains the images when you start again\n  cache: true # also heps reatain images and code\n---"
  },
  {
    "objectID": "lectures/lecture_03/03_02_class_activity.html#the-whole-dataframe---wont-show-all",
    "href": "lectures/lecture_03/03_02_class_activity.html#the-whole-dataframe---wont-show-all",
    "title": "03_Class_Activity",
    "section": "The whole dataframe - wont show all",
    "text": "The whole dataframe - wont show all\n\np_df\n\n# A tibble: 48 × 6\n   date    group       n_s   wind  tree_no len_mm\n   &lt;chr&gt;   &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;   &lt;dbl&gt;  &lt;dbl&gt;\n 1 3/20/25 cephalopods n     lee         1     20\n 2 3/20/25 cephalopods n     lee         1     21\n 3 3/20/25 cephalopods n     lee         1     23\n 4 3/20/25 cephalopods n     lee         1     25\n 5 3/20/25 cephalopods n     lee         1     21\n 6 3/20/25 cephalopods n     lee         1     16\n 7 3/20/25 cephalopods s     wind        1     15\n 8 3/20/25 cephalopods s     wind        1     16\n 9 3/20/25 cephalopods s     wind        1     14\n10 3/20/25 cephalopods s     wind        1     17\n# ℹ 38 more rows"
  },
  {
    "objectID": "lectures/lecture_03/03_02_class_activity.html#the-top-of-the-datafame-to-see-what-it-looks-like",
    "href": "lectures/lecture_03/03_02_class_activity.html#the-top-of-the-datafame-to-see-what-it-looks-like",
    "title": "03_Class_Activity",
    "section": "The top of the datafame to see what it looks like",
    "text": "The top of the datafame to see what it looks like\n\nhead(p_df)\n\n# A tibble: 6 × 6\n  date    group       n_s   wind  tree_no len_mm\n  &lt;chr&gt;   &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;   &lt;dbl&gt;  &lt;dbl&gt;\n1 3/20/25 cephalopods n     lee         1     20\n2 3/20/25 cephalopods n     lee         1     21\n3 3/20/25 cephalopods n     lee         1     23\n4 3/20/25 cephalopods n     lee         1     25\n5 3/20/25 cephalopods n     lee         1     21\n6 3/20/25 cephalopods n     lee         1     16\n\n# tail(p_df) # the bottom"
  },
  {
    "objectID": "lectures/lecture_03/03_02_class_activity.html#how-to-look-at-one-variable",
    "href": "lectures/lecture_03/03_02_class_activity.html#how-to-look-at-one-variable",
    "title": "03_Class_Activity",
    "section": "How to look at one variable",
    "text": "How to look at one variable\n\np_df$group # name of dataframe $ varaible\n\n [1] \"cephalopods\" \"cephalopods\" \"cephalopods\" \"cephalopods\" \"cephalopods\"\n [6] \"cephalopods\" \"cephalopods\" \"cephalopods\" \"cephalopods\" \"cephalopods\"\n[11] \"cephalopods\" \"cephalopods\" \"salmon\"      \"salmon\"      \"salmon\"     \n[16] \"salmon\"      \"salmon\"      \"salmon\"      \"salmon\"      \"salmon\"     \n[21] \"salmon\"      \"salmon\"      \"salmon\"      \"salmon\"      \"crayfish\"   \n[26] \"crayfish\"    \"crayfish\"    \"crayfish\"    \"crayfish\"    \"crayfish\"   \n[31] \"crayfish\"    \"crayfish\"    \"crayfish\"    \"crayfish\"    \"crayfish\"   \n[36] \"crayfish\"    \"snail\"       \"snail\"       \"snail\"       \"snail\"      \n[41] \"snail\"       \"snail\"       \"snail\"       \"snail\"       \"snail\"      \n[46] \"snail\"       \"snail\"       \"snail\""
  },
  {
    "objectID": "lectures/lecture_03/03_02_class_activity.html#xy-plot-with-dodged-points",
    "href": "lectures/lecture_03/03_02_class_activity.html#xy-plot-with-dodged-points",
    "title": "03_Class_Activity",
    "section": "XY Plot with dodged points",
    "text": "XY Plot with dodged points\n\nknitr::opts_chunk$set(\n  comment = '', fig.width = 4, fig.height = 3)\n\nggplot(data = p_df, aes(x=wind, y=len_mm)) + \n  geom_point(position = position_dodge2(width=0.2) )\n\n\n\n\n\n\n\n# this dodges the points # position_dodge2 or can use position_dodge depending on grouping"
  },
  {
    "objectID": "lectures/lecture_03/03_02_class_activity.html#histogram-color-with-bins",
    "href": "lectures/lecture_03/03_02_class_activity.html#histogram-color-with-bins",
    "title": "03_Class_Activity",
    "section": "Histogram Color with Bins",
    "text": "Histogram Color with Bins\n\nknitr::opts_chunk$set(\n  comment = '', fig.width = 4, fig.height = 3)\n\nggplot(data = p_df, aes(x=len_mm, fill = wind)) +\n  geom_histogram( binwidth = 2, \n# sets the width in units of the bins - try different nubmers\n   position = position_dodge2(width = 0.5))"
  },
  {
    "objectID": "lectures/lecture_03/03_02_class_activity.html#box-and-whisker-plots",
    "href": "lectures/lecture_03/03_02_class_activity.html#box-and-whisker-plots",
    "title": "03_Class_Activity",
    "section": "Box and Whisker Plots",
    "text": "Box and Whisker Plots\n\nknitr::opts_chunk$set(\n  comment = '', fig.width = 4, fig.height = 3)\n\nggplot(data = p_df, aes(x=wind, y=len_mm, fill = wind)) + geom_boxplot()"
  },
  {
    "objectID": "lectures/lecture_03/03_02_class_activity.html#xy_plot-is-not-in-the-environment",
    "href": "lectures/lecture_03/03_02_class_activity.html#xy_plot-is-not-in-the-environment",
    "title": "03_Class_Activity",
    "section": "xy_plot is not in the environment",
    "text": "xy_plot is not in the environment\nwe can save this plot by typing\n\nggsave(xy_plot, # name of the plot you called it\n       file = \"figures/xy_plot.pdf\", # type of file you want - pdf is good\n       units = \"in\", # what are the units you want to measure in\n       width = 6, height = 6) # dimensions - not if large the fonts need to be adjusted\n\nThe file should be in the figures directory"
  },
  {
    "objectID": "lectures/lecture_03/03_02_class_activity.html#we-can-also-add-themes",
    "href": "lectures/lecture_03/03_02_class_activity.html#we-can-also-add-themes",
    "title": "03_Class_Activity",
    "section": "we can also add themes",
    "text": "we can also add themes\n\nxy_plot &lt;- ggplot(data = p_df, aes(x=wind, y=len_mm, color = wind, shape = wind)) + \n  geom_point(\n    size = 2,\n    position = position_dodge2(width=0.2)) +\n  labs(x=\"Wind Side\", y = \"Length (mm)\", color = \"Wind Side\", shape = \"Wind Side\") +\n  theme_classic()\nxy_plot"
  },
  {
    "objectID": "lectures/lecture_03/03_02_class_activity.html#change-the-scale-by-zooming-in",
    "href": "lectures/lecture_03/03_02_class_activity.html#change-the-scale-by-zooming-in",
    "title": "03_Class_Activity",
    "section": "change the scale by zooming in",
    "text": "change the scale by zooming in\n\nxy_plot &lt;- ggplot(data = p_df, aes(x=wind, y=len_mm, color = wind, shape = wind)) + \n  geom_point(\n    size = 2,\n    position = position_dodge2(width=0.2)) +\n  labs(x=\"Wind Side\", y = \"Length (mm)\", color = \"Wind Side\", shape = \"Wind Side\") +\n  theme_classic() +\n  coord_cartesian(ylim = c(0,30))\nxy_plot"
  },
  {
    "objectID": "lectures/lecture_03/03_02_class_activity.html#we-need-to-learn-to-pipe-things",
    "href": "lectures/lecture_03/03_02_class_activity.html#we-need-to-learn-to-pipe-things",
    "title": "03_Class_Activity",
    "section": "we need to learn to pipe things",
    "text": "we need to learn to pipe things\n\nthe dataframe –&gt; pipe command that feed the dataframe into –&gt; next command\n\n\np_df %&gt;% summarize(mean_length = mean(len_mm, na.rm = TRUE))\n\n# A tibble: 1 × 1\n  mean_length\n        &lt;dbl&gt;\n1        17.7"
  },
  {
    "objectID": "lectures/lecture_03/03_02_class_activity.html#what-is-cool-is-we-can-do-a-lot-of-different-things-now",
    "href": "lectures/lecture_03/03_02_class_activity.html#what-is-cool-is-we-can-do-a-lot-of-different-things-now",
    "title": "03_Class_Activity",
    "section": "What is cool is we can do a lot of different things now",
    "text": "What is cool is we can do a lot of different things now\n\np_df %&gt;% \n  summarize(\n    mean_length = mean(len_mm, na.rm = TRUE),\n    sd_length = sd(len_mm, na.rm = TRUE),\n    n_length = n())\n\n# A tibble: 1 × 3\n  mean_length sd_length n_length\n        &lt;dbl&gt;     &lt;dbl&gt;    &lt;int&gt;\n1        17.7      3.53       48"
  },
  {
    "objectID": "lectures/lecture_03/03_02_class_activity.html#super-cool-code-in-case-there-are-missing-values",
    "href": "lectures/lecture_03/03_02_class_activity.html#super-cool-code-in-case-there-are-missing-values",
    "title": "03_Class_Activity",
    "section": "Super cool code in case there are missing values",
    "text": "Super cool code in case there are missing values\n\np_df %&gt;% \n  summarize(\n    mean_length = mean(len_mm, na.rm = TRUE),\n    sd_length = sd(len_mm, na.rm = TRUE),\n    n_length = sum(!is.na(len_mm)))\n\n# A tibble: 1 × 3\n  mean_length sd_length n_length\n        &lt;dbl&gt;     &lt;dbl&gt;    &lt;int&gt;\n1        17.7      3.53       48"
  },
  {
    "objectID": "lectures/lecture_03/03_02_class_activity.html#what-else-do-we-want-to-know-though",
    "href": "lectures/lecture_03/03_02_class_activity.html#what-else-do-we-want-to-know-though",
    "title": "03_Class_Activity",
    "section": "what else do we want to know though",
    "text": "what else do we want to know though\n\nwe want to know the mean and such for each group of the treatments\nhow could we do this?\n\nwe need to add a command - `group_by(wind)\nbut how can we do this for this code?\n\n\n\np_df %&gt;% \n  summarize(\n    mean_length = mean(len_mm, na.rm = TRUE),\n    sd_length = sd(len_mm, na.rm = TRUE),\n    n_length = sum(!is.na(len_mm)))\n\n# A tibble: 1 × 3\n  mean_length sd_length n_length\n        &lt;dbl&gt;     &lt;dbl&gt;    &lt;int&gt;\n1        17.7      3.53       48"
  },
  {
    "objectID": "lectures/lecture_03/03_02_class_activity.html#what-if-we-wanted-to-save-this-output",
    "href": "lectures/lecture_03/03_02_class_activity.html#what-if-we-wanted-to-save-this-output",
    "title": "03_Class_Activity",
    "section": "what if we wanted to save this output",
    "text": "what if we wanted to save this output\nwhat else do we need to do to save the output"
  },
  {
    "objectID": "lectures/lecture_03/03_02_class_activity.html#given-enough-time-there-are-some-other-tweaks-to-make",
    "href": "lectures/lecture_03/03_02_class_activity.html#given-enough-time-there-are-some-other-tweaks-to-make",
    "title": "03_Class_Activity",
    "section": "given enough time there are some other tweaks to make",
    "text": "given enough time there are some other tweaks to make\nin this code we can do some piping that will be very useful later on\n\nmean_se_plot &lt;- p_df %&gt;% \n  ggplot(aes(wind, len_mm , color = wind)) +\n  stat_summary(\n    fun = mean, \n    na.rm = TRUE, \n    geom = \"point\", \n    size = 3) +\n  stat_summary(\n    fun.data = mean_se, \n    na.rm = TRUE, \n    geom = \"errorbar\", \n    width = 0.2) +\n  # annotate(\"rect\", \n  #        xmin = -Inf, xmax = Inf,  # Cover the entire x range\n  #        ymin = -Inf, ymax = Inf,  # Cover the entire y range\n  #        fill = \"white\", \n  #        alpha = 1) +\n  labs(\n    x = \"Wind Side\",\n    y = \"Length (mm)\",\n    color = \"Windy Side\"\n  ) +\n  theme_classic()\n\nmean_se_plot"
  },
  {
    "objectID": "lectures/lecture_04/04_01_lecture_powerpoint_html.html",
    "href": "lectures/lecture_04/04_01_lecture_powerpoint_html.html",
    "title": "Lecture 04",
    "section": "",
    "text": "We covered:\n\ndata wrangling and types of variable names\nmeta data\nproject design\nsummary statistics\ngraphing the mean and standard error graphs\npipes and %&gt;% or |&gt; and how to group_by\n\n\n\nOur last graph"
  },
  {
    "objectID": "lectures/lecture_04/04_01_lecture_powerpoint_html.html#introduction-to-probability-distributions",
    "href": "lectures/lecture_04/04_01_lecture_powerpoint_html.html#introduction-to-probability-distributions",
    "title": "Lecture 04",
    "section": "Introduction to probability distributions",
    "text": "Introduction to probability distributions\n\nWhat is a frequency distribution?\nWhat is a probability distribution?\nDistributions for variables and for statistics"
  },
  {
    "objectID": "lectures/lecture_04/04_01_lecture_powerpoint_html.html#estimation",
    "href": "lectures/lecture_04/04_01_lecture_powerpoint_html.html#estimation",
    "title": "Lecture 04",
    "section": "Estimation",
    "text": "Estimation\n\nPopulations and samples\nParameters and statistics\n\nwe are going to use some sculpin data that is real!"
  },
  {
    "objectID": "lectures/lecture_04/04_01_lecture_powerpoint_html.html#fy-frac1sqrt2pisigma2-e-fracy---mu22sigma2",
    "href": "lectures/lecture_04/04_01_lecture_powerpoint_html.html#fy-frac1sqrt2pisigma2-e-fracy---mu22sigma2",
    "title": "Lecture 04",
    "section": "\\(f(y) = \\frac{1}{\\sqrt{2\\pi\\sigma^2}} e^{-\\frac{(y - \\mu)^2}{2\\sigma^2}}\\)",
    "text": "\\(f(y) = \\frac{1}{\\sqrt{2\\pi\\sigma^2}} e^{-\\frac{(y - \\mu)^2}{2\\sigma^2}}\\)"
  },
  {
    "objectID": "lectures/lecture_04/04_01_lecture_powerpoint_html.html#binomial-multinomial",
    "href": "lectures/lecture_04/04_01_lecture_powerpoint_html.html#binomial-multinomial",
    "title": "Lecture 04",
    "section": "Binomial (multinomial):",
    "text": "Binomial (multinomial):\n\nprobability of event that have two outcomes (heads/ tails, dead/alive)\nDefined in terms of “successes” out of set number of trials\n\n\nIn large number of trials: approximately normal distribution"
  },
  {
    "objectID": "lectures/lecture_04/04_01_lecture_powerpoint_html.html#poisson-occurrences-of-rare-event-in-timespace",
    "href": "lectures/lecture_04/04_01_lecture_powerpoint_html.html#poisson-occurrences-of-rare-event-in-timespace",
    "title": "Lecture 04",
    "section": "Poisson: occurrences of (rare) event in time/space",
    "text": "Poisson: occurrences of (rare) event in time/space\n\nE.g., number of\n\nTaraxacum officinale - common dandelion in quadrat\ncopepod eaten per minute\ncells in field of view\n\nMeasures Probability(y= certain integer value)\n\ndefined in terms of μ or mean\nRight-skewed at small μ\nmore symmetrical at higher μ"
  },
  {
    "objectID": "lectures/lecture_04/04_01_lecture_powerpoint_html.html#also-have-distributions-of-test-statistics",
    "href": "lectures/lecture_04/04_01_lecture_powerpoint_html.html#also-have-distributions-of-test-statistics",
    "title": "Lecture 04",
    "section": "Also have distributions of test statistics",
    "text": "Also have distributions of test statistics\n\nTest statistics:\n\nsummary values calculated from data used to test hypotheses\nis your result due to chance?\n\n\n\nDifferent test statistics:\n\ndifferent, well-defined distributions\nallows estimation of probabilities associated with results\nExamples:\n\nz-distribution, student’s t-distribution, χ2-distribution, F-distribution"
  },
  {
    "objectID": "lectures/lecture_04/04_01_lecture_powerpoint_html.html#mu-fracsumlimits_i1n-y_in",
    "href": "lectures/lecture_04/04_01_lecture_powerpoint_html.html#mu-fracsumlimits_i1n-y_in",
    "title": "Lecture 04",
    "section": "\\(\\mu = \\frac{\\sum\\limits_{i=1}^{n} Y_i}{n}\\)",
    "text": "\\(\\mu = \\frac{\\sum\\limits_{i=1}^{n} Y_i}{n}\\)\nFormula for n odd"
  },
  {
    "objectID": "lectures/lecture_04/04_01_lecture_powerpoint_html.html#textmedian-y_n12",
    "href": "lectures/lecture_04/04_01_lecture_powerpoint_html.html#textmedian-y_n12",
    "title": "Lecture 04",
    "section": "\\(\\text{median = } Y\\_{(n+1)/2}\\)",
    "text": "\\(\\text{median = } Y\\_{(n+1)/2}\\)\nFormula for n even"
  },
  {
    "objectID": "lectures/lecture_04/04_01_lecture_powerpoint_html.html#textmedian-fracy_n2-y_n21-2",
    "href": "lectures/lecture_04/04_01_lecture_powerpoint_html.html#textmedian-fracy_n2-y_n21-2",
    "title": "Lecture 04",
    "section": "\\(\\text{median = }\\frac{Y_{n/2} + Y_{(n/2)+1}}{  2}\\)",
    "text": "\\(\\text{median = }\\frac{Y_{n/2} + Y_{(n/2)+1}}{  2}\\)"
  },
  {
    "objectID": "lectures/lecture_04/04_01_lecture_powerpoint_html.html#spread",
    "href": "lectures/lecture_04/04_01_lecture_powerpoint_html.html#spread",
    "title": "Lecture 04",
    "section": "Spread",
    "text": "Spread\n\nRange: from highest and lowest observation\nVariance (σ2, s2): sum of squared differences of observations from mean, divided by n-1\n\nE.g., fish lengths = 20, 30, 35, 24, 36 g"
  },
  {
    "objectID": "lectures/lecture_04/04_01_lecture_powerpoint_html.html#s2-sum_i1n-fracy_i---bary2n-1",
    "href": "lectures/lecture_04/04_01_lecture_powerpoint_html.html#s2-sum_i1n-fracy_i---bary2n-1",
    "title": "Lecture 04",
    "section": "\\(s^2 = \\sum_{i=1}^{n} \\frac{(y_i - \\bar{y})^2}{n-1}\\)",
    "text": "\\(s^2 = \\sum_{i=1}^{n} \\frac{(y_i - \\bar{y})^2}{n-1}\\)"
  },
  {
    "objectID": "lectures/lecture_04/04_01_lecture_powerpoint_html.html#spread-1",
    "href": "lectures/lecture_04/04_01_lecture_powerpoint_html.html#spread-1",
    "title": "Lecture 04",
    "section": "Spread",
    "text": "Spread\n\nStandard Deviation(σ, s): square root of variance.\n\nIn same units as observations\nIn example: √48 = 6.9 mm\n\nCoefficient of variation: SD as % of mean.\n\nUseful for comparing spread in samples with different means\nIn example: (6.9/29)*100= 23.8 %"
  },
  {
    "objectID": "lectures/lecture_04/04_01_lecture_powerpoint_html.html#s2-sqrtsum_i1n-fracy_i---bary2n-1",
    "href": "lectures/lecture_04/04_01_lecture_powerpoint_html.html#s2-sqrtsum_i1n-fracy_i---bary2n-1",
    "title": "Lecture 04",
    "section": "\\(s^2 = \\sqrt{\\sum_{i=1}^{n} \\frac{(y_i - \\bar{y})^2}{n-1}}\\)",
    "text": "\\(s^2 = \\sqrt{\\sum_{i=1}^{n} \\frac{(y_i - \\bar{y})^2}{n-1}}\\)"
  },
  {
    "objectID": "lectures/lecture_04/04_01_lecture_powerpoint_html.html#textcoefficient-of-variation-fracsbary-times-100",
    "href": "lectures/lecture_04/04_01_lecture_powerpoint_html.html#textcoefficient-of-variation-fracsbary-times-100",
    "title": "Lecture 04",
    "section": "\\(\\text{Coefficient of variation} = \\frac{S}{\\bar{Y}} \\times 100\\)",
    "text": "\\(\\text{Coefficient of variation} = \\frac{S}{\\bar{Y}} \\times 100\\)"
  },
  {
    "objectID": "lectures/lecture_05/054_01_lecture_powerpoint_html.html",
    "href": "lectures/lecture_05/054_01_lecture_powerpoint_html.html",
    "title": "Lecture 04",
    "section": "",
    "text": "Introduction to histograms or frequency distributions\nProbability Distribution Functions (PDF)\nDescriptive Statistics\n\nCenter - mean, median, mode\nSpread - range, variance, standard deviation\n\n\n\nOur last graphs\n\n\n\n\n\n\n\n\n\n\nPractice Exercise 1: Recreating Our Last Histograms\n\n\n\nLet’s recreate the basic histogram of fish lengths from our last class. Use the sculpin_df data frame that’s already loaded.\n\n# Write your code here to create a histogram of fish lengths from Toolik Lake\n# Remember to use the pipe operator %&gt;% and ggplot with geom_histogram()"
  },
  {
    "objectID": "lectures/lecture_05/054_01_lecture_powerpoint_html.html#the-objectives",
    "href": "lectures/lecture_05/054_01_lecture_powerpoint_html.html#the-objectives",
    "title": "Lecture 04",
    "section": "The objectives:",
    "text": "The objectives:\n\nIntroduction to hypothesis testing\nThe standard normal distribution\nStandard error\nConfidence intervals\nStudent’s t-distribution\nH testing sequence\np-values"
  },
  {
    "objectID": "lectures/lecture_05/054_01_lecture_powerpoint_html.html#textz-fracx_i-musigma",
    "href": "lectures/lecture_05/054_01_lecture_powerpoint_html.html#textz-fracx_i-musigma",
    "title": "Lecture 04",
    "section": "\\(\\text{Z = }\\frac{X_i-\\mu}{\\sigma}\\)",
    "text": "\\(\\text{Z = }\\frac{X_i-\\mu}{\\sigma}\\)\n\nz = z-score for observation\nxi = original observation\nµ = mean of data distribution\nσ = SD of data distribution"
  },
  {
    "objectID": "lectures/lecture_05/054_01_lecture_powerpoint_html.html#important-properties",
    "href": "lectures/lecture_05/054_01_lecture_powerpoint_html.html#important-properties",
    "title": "Lecture 04",
    "section": "3 important properties:",
    "text": "3 important properties:\n\nSampling distribution of means (SDM) from normal population will be normal\nLarge Sampling distribution of means from any population will be normal (Central Limit Theorem)\nThe mean of Sampling distribution of means will equal µ or the mean"
  },
  {
    "objectID": "lectures/lecture_05/054_01_lecture_powerpoint_html.html#text95-ci-bary-pm-z-cdot-fracsigmasqrtn",
    "href": "lectures/lecture_05/054_01_lecture_powerpoint_html.html#text95-ci-bary-pm-z-cdot-fracsigmasqrtn",
    "title": "Lecture 04",
    "section": "\\(\\text{95% CI} = \\bar{y} \\pm z \\cdot \\frac{\\sigma}{\\sqrt{n}}\\)",
    "text": "\\(\\text{95% CI} = \\bar{y} \\pm z \\cdot \\frac{\\sigma}{\\sqrt{n}}\\)\nWhere:\n\nȳ is the sample mean\n𝑛 is the sample size\nσ is the population standard deviation\nz is the z-value corresponding the probability of the CI"
  },
  {
    "objectID": "lectures/lecture_template/06_02_class_activity.html",
    "href": "lectures/lecture_template/06_02_class_activity.html",
    "title": "06_Class_Activity",
    "section": "",
    "text": "stuff here\nstuff here\nstuff here\nstuff here\n\n\n\n\n\nstuff here\nstuff here\nstuff here\n\nstuff here\nstuff here"
  },
  {
    "objectID": "lectures/lecture_template/06_02_class_activity.html#what-did-we-do-last-time-in-activity-5",
    "href": "lectures/lecture_template/06_02_class_activity.html#what-did-we-do-last-time-in-activity-5",
    "title": "06_Class_Activity",
    "section": "",
    "text": "stuff here\nstuff here\nstuff here\nstuff here"
  },
  {
    "objectID": "lectures/lecture_template/06_02_class_activity.html#todays-focus",
    "href": "lectures/lecture_template/06_02_class_activity.html#todays-focus",
    "title": "06_Class_Activity",
    "section": "",
    "text": "stuff here\nstuff here\nstuff here\n\nstuff here\nstuff here"
  },
  {
    "objectID": "lectures/lecture_template/06_02_class_activity.html#we-need-to-select-only-that-data",
    "href": "lectures/lecture_template/06_02_class_activity.html#we-need-to-select-only-that-data",
    "title": "06_Class_Activity",
    "section": "We need to select only that data",
    "text": "We need to select only that data\n\n# # Filter for Lake NE 12\n# ne12_data &lt;- df %&gt;% \n#   filter(lake == \"NE 12\") %&gt;%\n#   filter(!is.na(mass_g))  # Remove any NA values\n# \n# head(ne12_data)"
  },
  {
    "objectID": "lectures/lecture_template/06_02_class_activity.html#use-patchwork-to-combine-the-plots",
    "href": "lectures/lecture_template/06_02_class_activity.html#use-patchwork-to-combine-the-plots",
    "title": "06_Class_Activity",
    "section": "Use Patchwork to combine the plots",
    "text": "Use Patchwork to combine the plots\n\n# # Combine all plots using patchwork\n# combined_stats_plot &lt;- (ne12_histo_plot + ne12_dot_plot) / (ne12_box_plot + ne12_qq_plot) +\n#   plot_annotation(\n#     title = \"Lake NE 12 Trout Mass Distribution\",\n#     subtitle = paste(\"n =\", nrow(ne12_data), \"fish samples\"),\n#     theme = theme(plot.title = element_text(hjust = 0.5),\n#                   plot.subtitle = element_text(hjust = 0.5))\n#   )\n# \n# # Display the combined plot\n# combined_stats_plot"
  },
  {
    "objectID": "lectures/lecture_template/06_02_class_activity.html#assumptions-for-t-test",
    "href": "lectures/lecture_template/06_02_class_activity.html#assumptions-for-t-test",
    "title": "06_Class_Activity",
    "section": "Assumptions for t-test:",
    "text": "Assumptions for t-test:\n\nData is normally distributed\nObservations are independent\nNo significant outliers"
  },
  {
    "objectID": "lectures/lecture_template/06_02_class_activity.html#shapiro-wilk",
    "href": "lectures/lecture_template/06_02_class_activity.html#shapiro-wilk",
    "title": "06_Class_Activity",
    "section": "Shapiro Wilk",
    "text": "Shapiro Wilk\n\n# Shapiro-Wilk test\n# shapiro_test &lt;- shapiro.test(windward_data$len_mm)\n# print(shapiro_test)\n\n\n# Check for outliers using boxplot\n# YOUR CODE HERE"
  },
  {
    "objectID": "lectures/lecture_02/02_02_class_activity.html#recap-from-activity-1",
    "href": "lectures/lecture_02/02_02_class_activity.html#recap-from-activity-1",
    "title": "02 Class Activity",
    "section": "Recap from Activity 1",
    "text": "Recap from Activity 1\n\nCollected pine needle samples from windward and leeward sides of trees\nIdentified independent variable (wind exposure) and dependent variable (needle length)\nMeasured needle lengths and recorded data\nCreated basic visualizations\nSaved our data for further analysis"
  },
  {
    "objectID": "lectures/lecture_02/02_02_class_activity.html#todays-objectives",
    "href": "lectures/lecture_02/02_02_class_activity.html#todays-objectives",
    "title": "02 Class Activity",
    "section": "Today’s Objectives",
    "text": "Today’s Objectives\n\nImplement data pipeline best practices\nApply controlled vocabulary and naming conventions\nCreate effective tables and visualizations\nCustomize plots for publication quality\nCombine multiple plots into composite figures"
  },
  {
    "objectID": "lectures/lecture_02/02_02_class_activity.html#part-2-basic-data-visualization",
    "href": "lectures/lecture_02/02_02_class_activity.html#part-2-basic-data-visualization",
    "title": "02 Class Activity",
    "section": "Part 2: Basic Data Visualization",
    "text": "Part 2: Basic Data Visualization\nLet’s create some simple visualizations to explore our data:\n\nExercise 2: Creating a Histogram\n\n# Create a basic histogram\npine_df %&gt;%\n  ggplot(aes(x = len_mm)) +\n  geom_histogram(bins = 15) +\n  labs(title = \"Distribution of Pine Needle Lengths\",\n       x = \"Length (mm)\",\n       y = \"Count\")\n\n\n\n\n\n\n\n\n\n# Create a histogram with color grouping\npine_df %&gt;%\n  ggplot(aes(x = len_mm, fill = wind)) +\n  geom_histogram(binwidth = 2, alpha = 0.7, position = \"dodge\") +\n  labs(title = \"Distribution of Pine Needle Lengths by Wind Exposure\",\n       x = \"Length (mm)\",\n       y = \"Count\")\n\n\n\n\n\n\n\n\n\n\nKey Insights from Histograms:\nThe histogram helps us understand: - The overall distribution of needle lengths - Potential differences between windward and leeward needles - Presence of any unusual values or outliers\n\n\nExercise 3: Creating Multiple Plot Types\nLet’s explore different ways to visualize the same data:\n\n# Box plot\nbox_plot &lt;- pine_df %&gt;%\n  ggplot(aes(x = wind, y = len_mm, fill = wind)) +\n  geom_boxplot() +\n  labs(title = \"Box Plot of Needle Lengths\",\n       x = \"Tree Side\",\n       y = \"Length (mm)\")\n\n# Violin plot\nviolin_plot &lt;- pine_df %&gt;%\n  ggplot(aes(x = wind, y = len_mm, fill = wind)) +\n  geom_violin() +\n  labs(title = \"Violin Plot of Needle Lengths\",\n       x = \"Tree Side\",\n       y = \"Length (mm)\")\n\n# Dot plot\ndot_plot &lt;- pine_df %&gt;%\n  ggplot(aes(x = wind, y = len_mm, color = wind)) +\n  geom_jitter(width = 0.2, alpha = 0.7) +\n  labs(title = \"Dot Plot of Needle Lengths\",\n       x = \"Tree Side\",\n       y = \"Length (mm)\")\n\n# Display all plots using patchwork\nbox_plot | violin_plot | dot_plot\n\n\n\n\n\n\n\n\n\n\nQuestions to Consider:\n\nWhich plot type best reveals patterns in our data?\nWhat are the advantages and disadvantages of each plot type?\nHow might we combine elements from different plot types?"
  },
  {
    "objectID": "lectures/lecture_02/02_02_class_activity.html#part-3-building-complex-visualizations-layer-by-layer",
    "href": "lectures/lecture_02/02_02_class_activity.html#part-3-building-complex-visualizations-layer-by-layer",
    "title": "02 Class Activity",
    "section": "Part 3: Building Complex Visualizations Layer by Layer",
    "text": "Part 3: Building Complex Visualizations Layer by Layer\nNow let’s build more sophisticated visualizations by adding layers one at a time:\n\nExercise 4: Building a Layered Plot\n\n# Start with a basic plot\np1 &lt;- pine_df %&gt;%\n  ggplot(aes(x = wind, y = len_mm, fill = wind)) +\n  labs(title = \"Layer 1: Basic Plot Setup\",\n       x = \"Tree Side\", \n       y = \"Length (mm)\")\n\n# Add boxplot layer\np2 &lt;- p1 +\n  geom_boxplot(alpha = 0.7) +\n  labs(title = \"Layer 2: Adding Boxplot\")\n\n# Add individual data points\np3 &lt;- p2 +\n  geom_jitter(width = 0.2, alpha = 0.5, color = \"gray30\") +\n  labs(title = \"Layer 3: Adding Data Points\")\n\n# Add mean indicators\np4 &lt;- p3 +\n  stat_summary(fun = mean, geom = \"point\", shape = 23, size = 3, fill = \"white\") +\n  labs(title = \"Layer 4: Adding Mean Indicators\")\n\n# Create a 2x2 grid of the progressive plot building\n(p1 | p2) / (p3 | p4)\n\n\n\n\n\n\n\n\n\n\nDiscussion Points:\n\nHow does each layer contribute to the story our data is telling?\nWhy might we want to show individual data points alongside summary statistics?\nHow does transparency (alpha) help when overlaying multiple elements?"
  },
  {
    "objectID": "lectures/lecture_02/02_02_class_activity.html#part-4-customizing-plots-for-publication",
    "href": "lectures/lecture_02/02_02_class_activity.html#part-4-customizing-plots-for-publication",
    "title": "02 Class Activity",
    "section": "Part 4: Customizing Plots for Publication",
    "text": "Part 4: Customizing Plots for Publication\n\nExercise 5: Adding customization\n\n# Create a fully customized plot\ncolor_plot &lt;- pine_df %&gt;%\n  ggplot(aes(x = wind, y = len_mm, fill = wind)) +\n  # Add violin plots for distribution\n  geom_violin(alpha = 0.4) +\n  # Add boxplots for key statistics\n  geom_boxplot(width = 0.2, alpha = 0.7, outlier.shape = NA) +\n  # Add individual data points\n  geom_jitter(width = 0.1, alpha = 0.5, color = \"gray30\", size = 2) +\n  # Add mean points\n  labs(\n    title = \"Pine Needle Length Varies with Wind Exposure\",\n    subtitle = \"Needles on the leeward side tend to be longer\",\n    x = \"Tree Side\", \n    y = \"Needle Length (mm)\",\n    caption = \"Data collected Spring 2023\"\n  ) +\n  # Customize colors with a colorblind-friendly palette\n  scale_fill_manual(\n    values = c(\n      \"wind\" = \"#1b9e77\",\n       \"lee\" = \"#d95f02\"\n      ),\n    labels = c(\n      \"wind\" = \"Windward\", \n      \"lee\" = \"Leeward\"\n      )) +\n  # Apply a clean theme\n  theme_minimal() \n\n\n# Display the publication-ready plot\ncolor_plot\n\n\n\n\n\n\n\n\nLet’s create a publication-quality figure by customizing colors, labels, and themes:\n\n\nExercise 6: Creating a Publication-Ready Plot\n\n# Create a fully customized plot\npublication_plot &lt;- pine_df %&gt;%\n  ggplot(aes(x = wind, y = len_mm, fill = wind)) +\n  # Add violin plots for distribution\n  geom_violin(alpha = 0.4) +\n  # Add boxplots for key statistics\n  geom_boxplot(width = 0.2, alpha = 0.7, outlier.shape = NA) +\n  # Add individual data points\n  geom_jitter(width = 0.1, alpha = 0.5, color = \"gray30\", size = 2) +\n  # Add mean points\n  stat_summary(fun = mean, geom = \"point\", shape = 23, size = 3, fill = \"white\") +\n  # Add informative labels\n  labs(\n    title = \"Pine Needle Length Varies with Wind Exposure\",\n    subtitle = \"Needles on the leeward side tend to be longer\",\n    x = \"Tree Side\", \n    y = \"Needle Length (mm)\",\n    caption = \"Data collected Spring 2023\"\n  ) +\n  # Customize colors with a colorblind-friendly palette\n  scale_fill_manual(\n    values = c(\"wind\" = \"#1b9e77\", \"lee\" = \"#d95f02\"),\n    labels = c(\"wind\" = \"Windward\", \"lee\" = \"Leeward\")\n  ) +\n  # Apply a clean theme\n  theme_classic() \n  \n\n# Display the publication-ready plot\npublication_plot\n\n\n\n\n\n\n\n\n\n\nCustomization Elements:\n\nPlot Elements:\n\nViolin plots to show distribution\nBoxplots to show quartiles and median\nIndividual points for transparency\nMean indicators for central tendency\n\nVisual Design:\n\nColorblind-friendly color palette\nThoughtful use of transparency\nClear, informative title and subtitle\nProfessional typography and spacing\n\nAccessibility Considerations:\n\nSufficient contrast\nRedundant encoding (position and color)\nClear labels with units"
  },
  {
    "objectID": "lectures/lecture_02/02_02_class_activity.html#part-5-creating-complex-multi-panel-figures",
    "href": "lectures/lecture_02/02_02_class_activity.html#part-5-creating-complex-multi-panel-figures",
    "title": "02 Class Activity",
    "section": "Part 5: Creating Complex Multi-Panel Figures",
    "text": "Part 5: Creating Complex Multi-Panel Figures\nFinally, let’s create a publication-ready multi-panel figure:\n\ncolor_plot +\n  \n  publication_plot   + \n  plot_layout(ncol = 2) + \n  plot_annotation(tag_levels = \"A\", tag_suffix = \")\")\n\n\n\n\n\n\n\n\n# we can add this to remove things\n# why do this?\n# + theme(\n#     axis.text.y = element_blank(),  # Removes x-axis labels\n#     axis.title.y = element_blank()  # Removes x-axis title"
  },
  {
    "objectID": "lectures/lecture_02/02_02_class_activity.html#summary-and-key-takeaways",
    "href": "lectures/lecture_02/02_02_class_activity.html#summary-and-key-takeaways",
    "title": "02 Class Activity",
    "section": "Summary and Key Takeaways",
    "text": "Summary and Key Takeaways\nIn this activity, we’ve learned how to:\n\nLoad and examine data properly\nCreate basic visualizations to explore patterns\nBuild complex plots layer by layer using ggplot2’s grammar\nCustomize plots for clear communication and visual appeal\nAdd statistical information to support data interpretation\nCombine multiple plots into publication-ready figures\n\n\nBest Practices for Data Visualization:\n\nStart simple, then add complexity as needed\nFocus on the story your data is telling\nUse appropriate plot types for your data structure\nMinimize chart junk and maximize data-ink ratio\nCreate clear, informative labels\nUse color purposefully and with accessibility in mind\nInclude both individual data points and summary statistics when possible\nConsider your audience when designing visualizations"
  },
  {
    "objectID": "lectures/lecture_template/0X_01_lecture_powerpoint_html.html",
    "href": "lectures/lecture_template/0X_01_lecture_powerpoint_html.html",
    "title": "Lecture XX",
    "section": "",
    "text": "Covered\n\nIntroduction to hypothesis testing\nThe standard normal distribution\nStandard error\nConfidence intervals\nStudent’s t-distribution\nH testing\nOne and Two Sample T Test\np-values"
  },
  {
    "objectID": "lectures/lecture_template/0X_01_lecture_powerpoint_html.html#the-objectives",
    "href": "lectures/lecture_template/0X_01_lecture_powerpoint_html.html#the-objectives",
    "title": "Lecture XX",
    "section": "The objectives:",
    "text": "The objectives:\n\np-values\nBrief review\nH test for a single population\n1- and 2-sided tests\nHypothesis tests for two populations\nAssumptions of parametric tests"
  },
  {
    "objectID": "lectures/lecture_05/05_02_class_activity.html",
    "href": "lectures/lecture_05/05_02_class_activity.html",
    "title": "05_Class_Activity",
    "section": "",
    "text": "Created and interpreted frequency distributions with histograms\nCompared lakes using side-by-side histograms\nExplored how sample size affects our view of a population\nCreated density plots and calculated probabilities\n\n\n\n\n\nUnderstanding standard normal distributions and z-scores\nCalculating and interpreting standard error\nCreating confidence intervals\nWorking with the Student’s t-distribution"
  },
  {
    "objectID": "lectures/lecture_05/05_02_class_activity.html#what-did-we-do-last-time-in-activity-4",
    "href": "lectures/lecture_05/05_02_class_activity.html#what-did-we-do-last-time-in-activity-4",
    "title": "05_Class_Activity",
    "section": "",
    "text": "Created and interpreted frequency distributions with histograms\nCompared lakes using side-by-side histograms\nExplored how sample size affects our view of a population\nCreated density plots and calculated probabilities"
  },
  {
    "objectID": "lectures/lecture_05/05_02_class_activity.html#todays-focus",
    "href": "lectures/lecture_05/05_02_class_activity.html#todays-focus",
    "title": "05_Class_Activity",
    "section": "",
    "text": "Understanding standard normal distributions and z-scores\nCalculating and interpreting standard error\nCreating confidence intervals\nWorking with the Student’s t-distribution"
  },
  {
    "objectID": "lectures/lecture_05/05_02_class_activity.html#setup",
    "href": "lectures/lecture_05/05_02_class_activity.html#setup",
    "title": "05_Class_Activity",
    "section": "Setup",
    "text": "Setup\nFirst, let’s load the packages we need and the dataframe:\n\n# Load required packages\nlibrary(tidyverse)\nlibrary(patchwork)\n\n# Read in the data file\nsculpin_df &lt;- read_csv(\"data/sculpin.csv\")\n\n# Look at the first few rows\nhead(sculpin_df)\n\n# A tibble: 6 × 5\n   site lake  species       total_length_mm mass_g\n  &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;                   &lt;dbl&gt;  &lt;dbl&gt;\n1   146 E 01  slimy sculpin              53   1.25\n2   146 E 01  slimy sculpin              61   1.9 \n3   146 E 01  slimy sculpin              53   1.75\n4   146 E 01  slimy sculpin              77   4.25\n5   146 E 01  slimy sculpin              45   0.9 \n6   146 E 01  slimy sculpin              48   0.9 \n\n\n\n\n\n\n\n\nPractice Exercise 1: Recreating Our Last Histograms\n\n\n\nLet’s recreate the basic histogram of fish lengths from our last class. Use the sculpin_df data frame that’s already loaded.\n\n# Write your code here to create a histogram of fish lengths from Toolik Lake\n# Remember to use the pipe operator %&gt;% and ggplot with geom_histogram()\n\n\n\n\n\n\n\n\n\nPractice Exercise 2: Compare Fish Distributions from Different Lakes\n\n\n\nLet’s look at what lakes are in our dataframe:\n\n# View the unique lake names\nunique(sculpin_df$lake)\n\n[1] \"E 01\"   \"E 05\"   \"NE 12\"  \"NE 14\"  \"S 06\"   \"S 07\"   \"Toolik\"\n\n\nNow, select two lakes and create a comparison of their fish length distributions using facet_grid():\n\n# Your code here to compare fish lengths between two lakes of your choice"
  },
  {
    "objectID": "lectures/lecture_05/05_02_class_activity.html#converting-to-z-scores",
    "href": "lectures/lecture_05/05_02_class_activity.html#converting-to-z-scores",
    "title": "05_Class_Activity",
    "section": "Converting to Z-scores",
    "text": "Converting to Z-scores\nZ-scores tell us how many standard deviations a data point is from the mean. The formula is:\n\\[ Z = \\frac{X - \\mu}{\\sigma} \\]\nLet’s calculate z-scores for the Toolik Lake fish:\n\n# Add a z-score column to our Toolik Lake data\ntoolik_z &lt;- sculpin_df %&gt;%\n  filter(lake == \"Toolik\") %&gt;%\n  mutate(z_score = (total_length_mm - toolik_stats$mean_length) / toolik_stats$sd_length)\n\n# Display the first few rows with z-scores\nhead(toolik_z)\n\n# A tibble: 6 × 6\n   site lake   species       total_length_mm mass_g z_score\n  &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;                   &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;\n1   100 Toolik slimy sculpin            12.5 0.0152  -3.26 \n2   100 Toolik slimy sculpin            13   0.0104  -3.22 \n3   100 Toolik slimy sculpin            74   2.3      1.85 \n4   100 Toolik slimy sculpin            42   0.5     -0.806\n5   100 Toolik slimy sculpin            39   0.4     -1.06 \n6   100 Toolik slimy sculpin            71   3        1.61 \n\n\nNow, let’s create a histogram of the original data and the z-scores side by side:\n\n# Create histogram of original data\np1 &lt;- toolik_z %&gt;%\n  ggplot(aes(total_length_mm)) +\n  geom_histogram(binwidth = 2, fill = \"blue\", alpha = 0.7) +\n  labs(title = \"Original Scale\",\n       x = \"Length (mm)\",\n       y = \"Count\")\n\n# Create histogram of z-scores\np2 &lt;- toolik_z %&gt;%\n  ggplot(aes(z_score)) +\n  geom_histogram(binwidth = 0.2, fill = \"red\", alpha = 0.7) +\n  geom_vline(xintercept = 0, linewidth = 1) +\n  geom_vline(xintercept = c(-1, 1), color = \"black\", linetype = \"dashed\") +\n  labs(title = \"Z-Score Scale\",\n       x = \"Standard deviations from mean (z-score)\",\n       y = \"Count\")\n\n# Combine plots\np1 / p2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nActivity 1\n\n\n\nCalculate the z-score for a fish with a length of 25mm from Toolik Lake. Is this fish length common or unusual?\n\n# Calculate the z-score for a 25mm fish\nfish_length &lt;- 25\nz_score_25mm &lt;- (fish_length - toolik_stats$mean_length) / toolik_stats$sd_length\n\n# Print the result\nz_score_25mm\n\n[1] -2.220007\n\n# Determine if this is common or unusual\n# A z-score beyond -2 or 2 is generally considered unusual"
  },
  {
    "objectID": "lectures/lecture_05/05_02_class_activity.html#understanding-areas-under-the-standard-normal-curve",
    "href": "lectures/lecture_05/05_02_class_activity.html#understanding-areas-under-the-standard-normal-curve",
    "title": "05_Class_Activity",
    "section": "Understanding Areas Under the Standard Normal Curve",
    "text": "Understanding Areas Under the Standard Normal Curve\nThe standard normal distribution has known probabilities associated with z-scores. We can calculate these probabilities in R:\n\n# Calculate probability of z-score less than 1\npnorm(1)  # This gives us the area under the standard normal curve to the left of z=1\n\n[1] 0.8413447\n\n# Calculate probability of z-score between -1 and 1\npnorm(1) - pnorm(-1)  # This is approximately 68% (the 68-95-99.7 rule)\n\n[1] 0.6826895\n\n\n\n\n\n\n\n\nActivity 2\n\n\n\nUsing the pnorm() function, answer: 1. What proportion of fish in Toolik Lake are shorter than 40mm?\n\n# First, convert 40mm to a z-score\nz_score_40mm &lt;- (40 - toolik_stats$mean_length) / toolik_stats$sd_length\nz_score_40mm\n\n[1] -0.9725651\n\n# Then, find the proportion of fish shorter than 40mm\nproportion_less_than_40mm &lt;- pnorm(z_score_40mm)\nproportion_less_than_40mm\n\n[1] 0.1653847"
  },
  {
    "objectID": "lectures/lecture_05/05_02_class_activity.html#taking-multiple-samples",
    "href": "lectures/lecture_05/05_02_class_activity.html#taking-multiple-samples",
    "title": "05_Class_Activity",
    "section": "Taking Multiple Samples",
    "text": "Taking Multiple Samples\nWhen we take multiple samples from a population, each sample gives a slightly different estimate of the population mean. Let’s see this in action:\n\n# Set seed for reproducibility\nset.seed(123)\n\n# Take a small sample\nsmall_sample &lt;- sculpin_df %&gt;%\n  filter(lake == \"Toolik\") %&gt;%\n  sample_n(10)\n\n# Calculate the mean of this sample\nsmall_sample_mean &lt;- mean(small_sample$total_length_mm, na.rm = TRUE)\n\n# can see the difference using this formula\nabs(small_sample_mean - toolik_stats$mean_length)\n\n[1] 1.26614\n\n# if you ever want to get fancier you can do the following..\n# Print the result\ncat(\"Sample mean (n=10):\", small_sample_mean, \"mm\\n\")\n\nSample mean (n=10): 50.42857 mm\n\ncat(\"Population mean:\", toolik_stats$mean_length, \"mm\\n\")\n\nPopulation mean: 51.69471 mm\n\ncat(\"Difference:\", abs(small_sample_mean - toolik_stats$mean_length), \"mm\\n\")\n\nDifference: 1.26614 mm"
  },
  {
    "objectID": "lectures/lecture_05/05_02_class_activity.html#code-to-play-with-sample-size-and-replicates",
    "href": "lectures/lecture_05/05_02_class_activity.html#code-to-play-with-sample-size-and-replicates",
    "title": "05_Class_Activity",
    "section": "Code to play with sample size and replicates",
    "text": "Code to play with sample size and replicates\nLet’s take multiple small samples and see how their means vary:\n\n# Function to generate sample means with user-specified number of samples\n# this is really advanced and we will get into this more later on\n# it is a way to make your own code to run a set of tasks\n# this one takes the subsample and averages them\n# Function to generate sample means with user-specified number of samples\ngenerate_sample_means &lt;- function(num_samples, sample_size = 10) {\n  # Create a dataframe of sample means\n  sample_means_df &lt;- tibble(\n    sample_number = 1:num_samples,\n    sample_means = sapply(1:num_samples, function(x) {\n      sculpin_df %&gt;%\n        filter(lake == \"Toolik\") %&gt;%\n        sample_n(sample_size) %&gt;%\n        summarize(mean_length = mean(total_length_mm, na.rm = TRUE)) %&gt;%\n        pull(mean_length)\n    })\n  )\n  \n  # Return the dataframe\n  return(sample_means_df)\n}\n\n# Example usage\nsample_means_dataframe &lt;- generate_sample_means(num_samples = 1000, sample_size = 10)\n\n# Print the dataframe\nprint(sample_means_dataframe)\n\n# A tibble: 1,000 × 2\n   sample_number sample_means\n           &lt;int&gt;        &lt;dbl&gt;\n 1             1         48.2\n 2             2         52.9\n 3             3         50.1\n 4             4         46.3\n 5             5         49.2\n 6             6         54  \n 7             7         55.4\n 8             8         52.5\n 9             9         51  \n10            10         53.4\n# ℹ 990 more rows\n\n# Print summary statistics of the sample means\nsummary(sample_means_dataframe$sample_means)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  33.00   48.57   52.00   51.47   54.38   66.50"
  },
  {
    "objectID": "lectures/lecture_05/05_02_class_activity.html#run-this-code-to-take-the-samples",
    "href": "lectures/lecture_05/05_02_class_activity.html#run-this-code-to-take-the-samples",
    "title": "05_Class_Activity",
    "section": "Run this code to take the samples",
    "text": "Run this code to take the samples\n\n# Example usage:\nmeans_result &lt;- generate_sample_means(num_samples = 25, sample_size = 5)"
  },
  {
    "objectID": "lectures/lecture_05/05_02_class_activity.html#run-this-code-to-see-the-plot",
    "href": "lectures/lecture_05/05_02_class_activity.html#run-this-code-to-see-the-plot",
    "title": "05_Class_Activity",
    "section": "Run this code to see the plot",
    "text": "Run this code to see the plot\n\nmeans_plot &lt;- ggplot(means_result, aes(x = sample_means)) +\n    geom_histogram(bins = 10, fill = \"green\", alpha = 0.7) +\n    geom_vline(xintercept = toolik_stats$mean_length, color = \"red\", linewidth = 1) +\n    labs(title = paste(\"Distribution of Sample Means\"),\n         subtitle = paste(\"Red line = population mean =\", round(toolik_stats$mean_length, 1), \"mm\"),\n         x = \"Sample Mean (mm)\",\n         y = \"Frequency\") \nmeans_plot"
  },
  {
    "objectID": "lectures/lecture_05/05_02_class_activity.html#run-this-code-to-see-the-dataframe",
    "href": "lectures/lecture_05/05_02_class_activity.html#run-this-code-to-see-the-dataframe",
    "title": "05_Class_Activity",
    "section": "Run this code to see the dataframe",
    "text": "Run this code to see the dataframe\n\nmeans_result  # to access the dataframe of sample means\n\n# A tibble: 25 × 2\n   sample_number sample_means\n           &lt;int&gt;        &lt;dbl&gt;\n 1             1         61.5\n 2             2         54.3\n 3             3         57  \n 4             4         57.8\n 5             5         59.7\n 6             6         52.8\n 7             7         43.7\n 8             8         49.4\n 9             9         53.2\n10            10         51.7\n# ℹ 15 more rows"
  },
  {
    "objectID": "lectures/lecture_05/05_02_class_activity.html#standard-error",
    "href": "lectures/lecture_05/05_02_class_activity.html#standard-error",
    "title": "05_Class_Activity",
    "section": "Standard Error",
    "text": "Standard Error\nThe standard error of the mean tells us how much we expect sample means to vary:\n\\[ SE = \\frac{s}{\\sqrt{n}} \\]\n\n# Calculate the standard error from our samples\nsample_se &lt;- sd(means_result$sample_means)\nsample_se\n\n[1] 5.960243\n\n# Calculate the theoretical standard error\ntheoretical_se &lt;- toolik_stats$sd_length / sqrt(toolik_stats$n)\ntheoretical_se\n\n[1] 0.8337564\n\n# Display both values\ncat(\"Standard Error from samples:\", round(sample_se, 2), \"mm\\n\")\n\nStandard Error from samples: 5.96 mm\n\ncat(\"Standard Error from populaiton:\", round(theoretical_se, 2), \"mm\\n\")\n\nStandard Error from populaiton: 0.83 mm\n\n\n\n\n\n\n\n\nActivity 3\n\n\n\nLet’s see how sample size affects the standard error. Run the code below to take samples of size 5 and size 20.\n\n# Function to take multiple samples of a given size\ntake_samples &lt;- function(sample_size, n_samples) {\n  replicate(n_samples, {\n    sculpin_df %&gt;%\n      filter(lake == \"Toolik\") %&gt;%\n      sample_n(sample_size) %&gt;%\n      summarize(mean_length = mean(total_length_mm, na.rm = TRUE)) %&gt;%\n      pull(mean_length)\n  })\n}\n\n# Take 10 samples of size 5 and calculate SE\n# take_samples(size of sample, number of samples)\nsample_means_low &lt;- take_samples(5, 20)\nse_low &lt;- sd(sample_means_low)\n\n# Take samples of size 20 and calculate SE\nsample_means_high &lt;- take_samples(25, 20)\nse_high &lt;- sd(sample_means_high)\n\n# Print results\ncat(\"SE with low number and 20 replicates:\", round(se_low, 2), \"mm\\n\")\n\nSE with low number and 20 replicates: 5.56 mm\n\ncat(\"SE with high number and 20 replicates:\", round(se_high, 2), \"mm\\n\")\n\nSE with high number and 20 replicates: 1.5 mm\n\n# How does SE change as sample size increases?"
  },
  {
    "objectID": "lectures/lecture_05/05_02_class_activity.html#calculating-confidence-intervals",
    "href": "lectures/lecture_05/05_02_class_activity.html#calculating-confidence-intervals",
    "title": "05_Class_Activity",
    "section": "Calculating Confidence Intervals",
    "text": "Calculating Confidence Intervals\nA confidence interval gives us a range of values that likely contains the true population mean. For a 95% confidence interval:\n\\[ 95\\% \\text{ CI} = \\bar{x} \\pm 1.96 \\times SE \\]\nLet’s calculate the 95% confidence interval for the mean length of Toolik Lake fish:\n\n# Calculate 95% confidence interval using z (normal distribution)\nci_lower &lt;- toolik_stats$mean_length - 1.96 * toolik_stats$se_length\nci_upper &lt;- toolik_stats$mean_length + 1.96 * toolik_stats$se_length\n\n# Display the confidence interval\ncat(\"95% Confidence Interval:\", \n    round(ci_lower, 1), \"to\", round(ci_upper, 1), \"mm\\n\")\n\n95% Confidence Interval: 50.1 to 53.3 mm"
  },
  {
    "objectID": "lectures/lecture_05/05_02_class_activity.html#visualizing-confidence-intervals",
    "href": "lectures/lecture_05/05_02_class_activity.html#visualizing-confidence-intervals",
    "title": "05_Class_Activity",
    "section": "Visualizing Confidence Intervals",
    "text": "Visualizing Confidence Intervals\n\n# Create a data frame with our statistics\ntoolik_ci &lt;- data.frame(\n  lake = \"Toolik\",\n  mean = toolik_stats$mean_length,\n  lower = ci_lower,\n  upper = ci_upper\n)\n\n# Plot the mean with error bars showing the 95% CI\nggplot(toolik_ci, aes(x = lake, y = mean)) +\n  geom_point(size = 3) +\n  geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2) +\n  labs(title = \"Mean Fish Length with 95% Confidence Interval\",\n       x = NULL,\n       y = \"Mean Length (mm)\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nActivity 4\n\n\n\nCalculate and visualize the 95% confidence interval for another lake of your choice.\n\n# Choose another lake\nother_lake &lt;- \"E 01\"  # You can change this to any lake in the dataset\n\n# Calculate statistics for your chosen lake\nother_lake_stats &lt;- sculpin_df %&gt;%\n  filter(lake == other_lake) %&gt;%\n  summarize(\n    mean_length = mean(total_length_mm, na.rm = TRUE),\n    sd_length = sd(total_length_mm, na.rm = TRUE),\n    n = sum(!is.na(total_length_mm)),\n    se_length = sd_length / sqrt(n)\n  )\n\n# Display the statistics\nother_lake_stats\n\n# A tibble: 1 × 4\n  mean_length sd_length     n se_length\n        &lt;dbl&gt;     &lt;dbl&gt; &lt;int&gt;     &lt;dbl&gt;\n1        58.2      15.3    79      1.72\n\n# Calculate 95% confidence interval\nother_ci_lower &lt;- other_lake_stats$mean_length - 1.96 * other_lake_stats$se_length\nother_ci_upper &lt;- other_lake_stats$mean_length + 1.96 * other_lake_stats$se_length\n\n# Display the confidence interval\n\ncat(\"\\n95% Confidence Interval for\", other_lake, \":\", \n    round(other_ci_lower, 1), \"to\", round(other_ci_upper, 1), \"mm\\n\")\n\n\n95% Confidence Interval for E 01 : 54.8 to 61.6 mm\n\n# Create a visualization\n# Add your code here to create a similar errorbar plot"
  },
  {
    "objectID": "lectures/lecture_05/05_02_class_activity.html#two-sample-t-test",
    "href": "lectures/lecture_05/05_02_class_activity.html#two-sample-t-test",
    "title": "05_Class_Activity",
    "section": "Two-Sample t-test",
    "text": "Two-Sample t-test\nNow let’s compare fish lengths between two lakes:\n\n# Get data for Toolik and E 01 lakes\n# what is this doing?\n# look in ENV tab - it is making a vector that is running a t-test\ntoolik_fish &lt;- sculpin_df %&gt;% \n  filter(lake == \"Toolik\", !is.na(total_length_mm)) %&gt;%\n  pull(total_length_mm)\n\ne01_fish &lt;- sculpin_df %&gt;% \n  filter(lake == \"E 01\", !is.na(total_length_mm)) %&gt;%\n  pull(total_length_mm)\n\n# Perform a two-sample t-test\nt_test_result &lt;- t.test(toolik_fish, e01_fish)\n\n# Display the result\nt_test_result\n\n\n    Welch Two Sample t-test\n\ndata:  toolik_fish and e01_fish\nt = -3.4051, df = 116.36, p-value = 0.0009082\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -10.313036  -2.727921\nsample estimates:\nmean of x mean of y \n 51.69471  58.21519 \n\n# Create a boxplot comparison\nsculpin_df %&gt;%\n  filter(lake %in% c(\"Toolik\", \"E 01\"), !is.na(total_length_mm)) %&gt;%\n  ggplot(aes(x = lake, y = total_length_mm, fill = lake)) +\n  geom_boxplot() +\n  labs(title = \"Comparing Fish Lengths Between Lakes\",\n       subtitle = paste(\"t-test p-value =\", round(t_test_result$p.value, 4)),\n       x = \"Lake\",\n       y = \"Length (mm)\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nActivity 6\n\n\n\nRun a t-test to compare fish lengths between two different lakes of your choice.\n\n# Choose two lakes to compare\nlake1 &lt;- \"S 06\"  # You can change this\nlake2 &lt;- \"NE 12\"  # You can change this\n\n# Get the data for both lakes\nlake1_fish &lt;- sculpin_df %&gt;% \n  filter(lake == lake1, !is.na(total_length_mm)) %&gt;%\n  pull(total_length_mm)\n\nlake2_fish &lt;- sculpin_df %&gt;% \n  filter(lake == lake2, !is.na(total_length_mm)) %&gt;%\n  pull(total_length_mm)\n\n# Run the t-test\nmy_t_test &lt;- t.test(lake1_fish, lake2_fish)\n\n# Display the result\nmy_t_test\n\n\n    Welch Two Sample t-test\n\ndata:  lake1_fish and lake2_fish\nt = 2.8345, df = 309.86, p-value = 0.004891\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n 1.280581 7.094166\nsample estimates:\nmean of x mean of y \n 54.01515  49.82778 \n\n# Interpret your results:\n# - What is the p-value?\n# - Is there a significant difference between the lakes at α = 0.05?\n# - Which lake has longer fish on average?"
  },
  {
    "objectID": "lectures/lecture_05/05_03_homework_html.html",
    "href": "lectures/lecture_05/05_03_homework_html.html",
    "title": "05_Homework",
    "section": "",
    "text": "This is an assignment for you to practice coding and redo the work we do in class with a few twists on a new dataframe practicing to create new projects and writing new code. I realize you could copy the code from lecture and although you will get the code right, I urge you to retype it form scratch as it will be learned so much faster. This is a new language for you and if you dont “type” == “speak” the language you would remember it…. really and try breaking things. Dont be afraid you can download a new version or fix it… that is how we learn."
  },
  {
    "objectID": "lectures/lecture_05/05_03_homework_html.html#setup",
    "href": "lectures/lecture_05/05_03_homework_html.html#setup",
    "title": "05_Homework",
    "section": "Setup",
    "text": "Setup\nFirst, let’s load the packages we need and the dataset:\n\n# Load required packages\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(patchwork)\n\n# Read in the data file\nw5_df &lt;- read_csv(\"data/mice_weights.csv\")\n\nRows: 62 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): sampling_site, location\ndbl (2): date_year, mass_g\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# Look at the first few rows\nhead(w5_df)\n\n# A tibble: 6 × 4\n  sampling_site location date_year mass_g\n  &lt;chr&gt;         &lt;chr&gt;        &lt;dbl&gt;  &lt;dbl&gt;\n1 Sidney Island island        2021   26  \n2 Sidney Island island        2021   24  \n3 Sidney Island island        2021   21.5\n4 Sidney Island island        2021   23  \n5 Sidney Island island        2021   22  \n6 Sidney Island island        2021   21  \n\n\nLet’s calculate some basic statistics for mice\n\n# Calculate basic statistics \nw5_stats &lt;- w5_df %&gt;% \n  group_by(sampling_site) %&gt;% \n  summarize(\n    mean_mass = mean(mass_g, na.rm = TRUE),\n    sd_mass = sd(mass_g, na.rm = TRUE),\n    n = sum(!is.na(mass_g)),\n    se_mass = sd_mass / sqrt(n)\n  )\n\n# Display the statistics\nw5_stats\n\n# A tibble: 2 × 5\n  sampling_site mean_mass sd_mass     n se_mass\n  &lt;chr&gt;             &lt;dbl&gt;   &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt;\n1 Sidney Island      23.4    2.80    33   0.487\n2 Vancouver          20.2    1.71    28   0.324"
  },
  {
    "objectID": "lectures/lecture_04/04_02_class_activity.html",
    "href": "lectures/lecture_04/04_02_class_activity.html",
    "title": "03_Class_Activity",
    "section": "",
    "text": "Setting up a project and variable names and code names\nHow to use the pipe command %&gt;%\nHow to create descriptive statistics of a sample\n\np_df %&gt;% \n  summarize(\n    mean_length = mean(len_mm, na.rm = TRUE),\n    sd_length = sd(len_mm, na.rm = TRUE),\n    n_length = sum(!is.na(len_mm)))\n\nMore graphs…\nggplot(data = p_df, aes(x=len_mm, fill = wind)) +\n  geom_histogram( binwidth = 2, \n# sets the width in units of the bins - try different nubmers\n   position = position_dodge2(width = 0.5))\n\nWhat questions do you have and what is unclear - what did not work so far when you started the homework?"
  },
  {
    "objectID": "lectures/lecture_04/04_02_class_activity.html#what-did-we-do-last-time-in-activity-3",
    "href": "lectures/lecture_04/04_02_class_activity.html#what-did-we-do-last-time-in-activity-3",
    "title": "03_Class_Activity",
    "section": "",
    "text": "Setting up a project and variable names and code names\nHow to use the pipe command %&gt;%\nHow to create descriptive statistics of a sample\n\np_df %&gt;% \n  summarize(\n    mean_length = mean(len_mm, na.rm = TRUE),\n    sd_length = sd(len_mm, na.rm = TRUE),\n    n_length = sum(!is.na(len_mm)))\n\nMore graphs…\nggplot(data = p_df, aes(x=len_mm, fill = wind)) +\n  geom_histogram( binwidth = 2, \n# sets the width in units of the bins - try different nubmers\n   position = position_dodge2(width = 0.5))\n\nWhat questions do you have and what is unclear - what did not work so far when you started the homework?"
  },
  {
    "objectID": "lectures/lecture_04/04_02_class_activity.html#setup",
    "href": "lectures/lecture_04/04_02_class_activity.html#setup",
    "title": "03_Class_Activity",
    "section": "Setup",
    "text": "Setup\nFirst, let’s load the packages we need and the dataset:\n\n# # Install the patchwork package if needed\n\n# install.packages(\"patchwork\")\nlibrary(patchwork)\n\nlibrary(tidyverse)\n\n\n# Read in the data file\nsculpin_df &lt;- read_csv(\"data/sculpin.csv\")\n\n# Look at the first few rows\nhead(sculpin_df)\n\n# A tibble: 6 × 5\n   site lake  species       total_length_mm mass_g\n  &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;                   &lt;dbl&gt;  &lt;dbl&gt;\n1   146 E 01  slimy sculpin              53   1.25\n2   146 E 01  slimy sculpin              61   1.9 \n3   146 E 01  slimy sculpin              53   1.75\n4   146 E 01  slimy sculpin              77   4.25\n5   146 E 01  slimy sculpin              45   0.9 \n6   146 E 01  slimy sculpin              48   0.9"
  },
  {
    "objectID": "lectures/lecture_04/04_02_class_activity.html#basic-data-summary",
    "href": "lectures/lecture_04/04_02_class_activity.html#basic-data-summary",
    "title": "03_Class_Activity",
    "section": "Basic Data Summary",
    "text": "Basic Data Summary\nLet’s first check what lakes are in our dataframe:\n\n# Get a list of unique lakes\nunique(sculpin_df$lake)\n\n[1] \"E 01\"   \"E 05\"   \"NE 12\"  \"NE 14\"  \"S 06\"   \"S 07\"   \"Toolik\"\n\n\nHow many fish do we have from each lake?\n\n# Count observations by lake\nsculpin_df %&gt;%\n  group_by(lake) %&gt;% \n  summarize(sculpin_n = n())\n\n# A tibble: 7 × 2\n  lake   sculpin_n\n  &lt;chr&gt;      &lt;int&gt;\n1 E 01         268\n2 E 05          75\n3 NE 12        180\n4 NE 14         37\n5 S 06         132\n6 S 07          73\n7 Toolik       287\n\n\n\n# Count observations by lake\nsculpin_df %&gt;%\n  group_by(lake) %&gt;% \n  summarize(sculpin_n = sum(!is.na(total_length_mm)))\n\n# A tibble: 7 × 2\n  lake   sculpin_n\n  &lt;chr&gt;      &lt;int&gt;\n1 E 01          79\n2 E 05          14\n3 NE 12        180\n4 NE 14         37\n5 S 06         132\n6 S 07          73\n7 Toolik       208"
  },
  {
    "objectID": "lectures/lecture_04/04_02_class_activity.html#basic-histograms",
    "href": "lectures/lecture_04/04_02_class_activity.html#basic-histograms",
    "title": "03_Class_Activity",
    "section": "Basic Histograms",
    "text": "Basic Histograms\nA histogram shows how many observations fall into certain ranges (or “bins”).\nLet’s create a simple histogram of fish lengths from Lake E 01 :\n\n# Filter for Toolik Lake and create a histogram\nsculpin_df %&gt;%\n  filter(lake == \"E 01\") %&gt;%\n  ggplot(aes(x = total_length_mm)) +\n  geom_histogram(binwidth = 2, fill = \"blue\", alpha = 0.7) +\n  labs(title = \"Fish Lengths in Lake E 01\",\n       x = \"Length (mm)\",\n       y = \"Count\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nActivity 1\n\n\n\nTry changing the binwidth parameter to 5 and then to 1. How does the appearance of the histogram change?\n\n# Try it here"
  },
  {
    "objectID": "lectures/lecture_04/04_02_class_activity.html#comparing-lakes",
    "href": "lectures/lecture_04/04_02_class_activity.html#comparing-lakes",
    "title": "03_Class_Activity",
    "section": "Comparing Lakes",
    "text": "Comparing Lakes\nNow let’s compare two lakes\n\n# Compare histograms from Toolik and E 01 lakes\nsculpin_df %&gt;%\n  filter(lake %in% c(\"Toolik\", \"E 01\")) %&gt;%\n  ggplot(aes(x = total_length_mm, fill = lake)) +\n  geom_histogram(binwidth = 2, alpha = 0.7, \n                 position = \"identity\") +\n  labs(title = \"Fish Lengths in Different Lakes\",\n       x = \"Length (mm)\",\n       y = \"Count\")\n\n\n\n\n\n\n\n\n\n# Compare histograms from Toolik and E 01 lakes\nsculpin_df %&gt;%\n  filter(lake %in% c(\"Toolik\", \"E 01\")) %&gt;%\n  ggplot(aes(x = total_length_mm, fill = lake)) +\n  geom_histogram(binwidth = 2, alpha = 0.7, \n                 position = position_dodge2(width=1)) +\n  labs(title = \"Fish Lengths in Different Lakes\",\n       x = \"Length (mm)\",\n       y = \"Count\")\n\n\n\n\n\n\n\n\nNow let’s compare two lakes side by side:\n\n# Compare histograms from Toolik and E 01 lakes\nsculpin_df %&gt;%\n  filter(lake %in% c(\"Toolik\", \"E 01\")) %&gt;%\n  ggplot(aes(x = total_length_mm, fill = lake)) +\n  geom_histogram(binwidth = 2, alpha = 0.7, position = \"identity\") +\n  labs(title = \"Fish Lengths in Different Lakes\",\n       x = \"Length (mm)\",\n       y = \"Count\") +\n  # facet_wrap(~lake, ncol = 1) +\n  facet_grid(lake~.)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nActivity 2\n\n\n\nChoose two new lakes to compare. What differences do you notice in their distributions?\nAdd code here\n\n# enter code here"
  },
  {
    "objectID": "lectures/lecture_04/04_02_class_activity.html#small-vs.-large-samples",
    "href": "lectures/lecture_04/04_02_class_activity.html#small-vs.-large-samples",
    "title": "03_Class_Activity",
    "section": "Small vs. Large Samples",
    "text": "Small vs. Large Samples\nWe’ll randomly select different sample sizes from Toolik Lake:\n\n# Set a seed for reproducibility\nset.seed(123)\n\n# Create small sample (15 fish)\nsmall_sample &lt;- sculpin_df %&gt;%\n  filter(lake == \"Toolik\") %&gt;%\n  sample_n(15)\n\n# Create larger sample (50 fish)\nlarger_sample &lt;- sculpin_df %&gt;%\n  filter(lake == \"Toolik\") %&gt;%\n  sample_n(100)\n\n# Plot both samples\np1 &lt;- small_sample %&gt;%\n  ggplot(aes(x = total_length_mm)) +\n  geom_histogram(binwidth = 2, fill = \"red\", alpha = 0.7) +\n  # coord_cartesian(xlim = c(20,80)) +\n  labs(title = \"Small Sample (n=15)\",\n       x = \"Length (mm)\",\n       y = \"Count\") +\n  coord_cartesian(xlim = c(20,80))\n\np2 &lt;- larger_sample %&gt;%\n  ggplot(aes(x = total_length_mm)) +\n  geom_histogram(binwidth = 2, fill = \"blue\", alpha = 0.7) +\n  # coord_cartesian(xlim = c(20,80)) +\n  labs(title = \"Larger Sample (n=50)\",\n       x = \"Length (mm)\",\n       y = \"Count\")\n\n\n# Display the plots side by side\np1 + p2 +\n  plot_layout(ncol = 1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nActivity 3\n\n\n\nTry changing the sample sizes. What happens when you use very small samples (n=5)? What about larger samples (n=150)?\nadd code here\n\n# enter code here"
  },
  {
    "objectID": "lectures/lecture_04/04_02_class_activity.html#woah---what-happened-there---there-are-na-values-in-the-data",
    "href": "lectures/lecture_04/04_02_class_activity.html#woah---what-happened-there---there-are-na-values-in-the-data",
    "title": "03_Class_Activity",
    "section": "WOAH - what happened there - there are NA values in the data",
    "text": "WOAH - what happened there - there are NA values in the data\nyou need to either remove missing values or you can do that in the formulas\nWhat is the advantage to manually removing or doing it in formulas?\n\n# Calculate mean, standard deviation, and sample size by lake\nsculpin_stats_df &lt;- sculpin_df %&gt;%\n  group_by(lake) %&gt;%\n  summarize(\n    mean_length = mean(total_length_mm, na.rm = TRUE),\n    sd_length = sd(total_length_mm, na.rm = TRUE),\n    se_length = sd(total_length_mm, na.rm = TRUE)/ sum(!is.na(total_length_mm))^.5,\n    count = sum(!is.na(total_length_mm)),\n    .groups = \"drop\"\n  ) %&gt;%\n  arrange(desc(count))\nsculpin_stats_df\n\n# A tibble: 7 × 5\n  lake   mean_length sd_length se_length count\n  &lt;chr&gt;        &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt; &lt;int&gt;\n1 Toolik        51.7      12.0     0.834   208\n2 NE 12         49.8      15.2     1.13    180\n3 S 06          54.0      10.9     0.949   132\n4 E 01          58.2      15.3     1.72     79\n5 S 07          55.6      12.7     1.48     73\n6 NE 14         47.3      10.5     1.72     37\n7 E 05          47.1      10.8     2.88     14\n\n\nNow let’s visualize these statistics:\n\n# Create a bar plot of mean lengths with error bars\nsculpin_df %&gt;%  \n  ggplot(aes(lake, total_length_mm)) +\n  stat_summary(\n    fun = mean, na.rm = TRUE, \n    geom = \"bar\",\n    fill = \"skyblue\"\n    ) +\n  stat_summary(\n    fun.data = mean_se, na.rm = TRUE, \n    geom = \"errorbar\", \n    width = 0.2) +\n  labs(title = \"Mean Fish Length by Lake\",\n       x = \"Lake\",\n       y = \"Mean Length (mm)\") \n\n\n\n\n\n\n\n\nWe could also do this from the dataframe we just made\n\n# Create a bar plot of mean lengths with error bars\nsculpin_stats_df %&gt;%  \n  ggplot(aes(x = reorder(lake, mean_length), y = mean_length)) +\n  geom_bar(stat = \"identity\", \n           fill = \"skyblue\") +\n  geom_errorbar(aes(\n    ymin = mean_length - se_length, \n    ymax = mean_length + se_length),\n    width = 0.2\n    ) +\n  labs(\n    title = \"Mean Fish Length by Lake\",\n       x = \"Lake\",\n       y = \"Mean Length (mm)\") \n\n\n\n\n\n\n\n\nThe power of the pipe command is you can do this without hving to make a new dataframe\n\n# Create a bar plot of mean lengths with error bars\nsculpin_df %&gt;%\n  group_by(lake) %&gt;%\n  summarize(\n    mean_length = mean(total_length_mm, na.rm = TRUE),\n    sd_length = sd(total_length_mm, na.rm = TRUE),\n    se_length = sd_length / sqrt(n()),\n    count = n(),\n    .groups = \"drop\"\n  ) %&gt;%\n  filter(count &gt;= 10) %&gt;%  # Only include lakes with sufficient sample size\n  ggplot(aes(x = reorder(lake, mean_length), y = mean_length)) +\n  geom_bar(stat = \"identity\", fill = \"skyblue\") +\n  geom_errorbar(aes(ymin = mean_length - se_length, \n                    ymax = mean_length + se_length),\n                width = 0.2) +\n  labs(title = \"Mean Fish Length by Lake\",\n       x = \"Lake\",\n       y = \"Mean Length (mm)\") \n\n\n\n\n\n\n\n\n\n\n\n\n\n\nActivity 5\n\n\n\nBased on the mean plot and what you’ve seen in the distributions, what can you say about fish sizes in different lakes? Are there lakes with particularly large or small fish?\nWe will start to ask how different are they and is it by chance?\nThis is the inductive phase of doing research."
  },
  {
    "objectID": "lectures/lecture_03/03_01_lecture_powerpoint_html.html",
    "href": "lectures/lecture_03/03_01_lecture_powerpoint_html.html",
    "title": "Lecture 03",
    "section": "",
    "text": "We covered inductive vs deductive reasoning\nHow to begin to ask questions\nAccuracy and precision\nWhat are general types of data\nHow to set up an R project in Rstudio\nHow to install and load libraries\nHow to read a file into R\nHow to make a graph\n\n\nOur first graph"
  },
  {
    "objectID": "lectures/lecture_03/03_01_lecture_powerpoint_html.html#be-consistent",
    "href": "lectures/lecture_03/03_01_lecture_powerpoint_html.html#be-consistent",
    "title": "Lecture 03",
    "section": "Be consistent!",
    "text": "Be consistent!\n\nVariable names\n\nCodes for categorical variables\nVariable names\n\nuse snake case and lower case - nitrate_n_mgl\nalways use the same name\n\nCodes for missing values - NA or 9999 or a space - I know but I do it\nDate formats -\n\nYYYY-MM-DD HH:MM:SS\nTime begins in 1970-01-01\n\nnames of objects\n\ndataframes after import data_df\nplots - len_wt_plot\nmodels - anova_wt_model\n\nFile names\n\nuse separators - 2025_02_01_lake_x_inflow.csv\n\n\nNote format Requires considerable foresight and organization"
  },
  {
    "objectID": "lectures/lecture_03/03_01_lecture_powerpoint_html.html#variable-and-file-names-can-be-a-problem",
    "href": "lectures/lecture_03/03_01_lecture_powerpoint_html.html#variable-and-file-names-can-be-a-problem",
    "title": "Lecture 03",
    "section": "Variable and file names can be a problem",
    "text": "Variable and file names can be a problem\n\nAvoid spaces but use underscore _\nAvoid special characters @#$%^@#\nBe sure to also use a variety of separators so you can separate later\n\nor use the same number of characters across a variable name\n2025_03_04_file-site"
  },
  {
    "objectID": "lectures/lecture_03/03_01_lecture_powerpoint_html.html#excel-will-drive-you-mad",
    "href": "lectures/lecture_03/03_01_lecture_powerpoint_html.html#excel-will-drive-you-mad",
    "title": "Lecture 03",
    "section": "Excel will drive you mad",
    "text": "Excel will drive you mad\n\nit will mess up your dates\nstore data in separate columns - year - month - day\nor use a string 20250401\nalways use unambiguous format of larges to smallest - why?\n\nis 01 04 2025 the same as 04 01 2025\nwhat are the dates in english?\nor European"
  },
  {
    "objectID": "lectures/lecture_03/03_01_lecture_powerpoint_html.html#never-do-calculations-in-excel",
    "href": "lectures/lecture_03/03_01_lecture_powerpoint_html.html#never-do-calculations-in-excel",
    "title": "Lecture 03",
    "section": "Never do Calculations in Excel",
    "text": "Never do Calculations in Excel\n\nalways do calculations in R - reproducible\nnever merge cells\ncan use highlighting but it will disappear\na nice rectangular dataframe will make you happy\n\ntears will flow if not"
  },
  {
    "objectID": "lectures/lecture_03/03_01_lecture_powerpoint_html.html#meta-data",
    "href": "lectures/lecture_03/03_01_lecture_powerpoint_html.html#meta-data",
    "title": "Lecture 03",
    "section": "Meta Data",
    "text": "Meta Data\n\nThis data will love beyond you\nSomeone will need to interpret it - what do they need\n\nWhat is data about\nWho collected it\nWhen\nWhere\nFunding agency\nMethods used to collect\nVariable names\n\ndescription\nunits\nabbreviations\n\nCALCULATIONS AND WHY?"
  },
  {
    "objectID": "lectures/lecture_02/02_01_lecture_powerpoint_slides.html#the-objectives",
    "href": "lectures/lecture_02/02_01_lecture_powerpoint_slides.html#the-objectives",
    "title": "Lecture 2: Project Design & Data Visualization",
    "section": "The objectives:",
    "text": "The objectives:\n\nDesign a well-organized project\nImplement good naming conventions\n\nControlled vocabulary\nIncluding units in names\n\nCreate and use metadata effectively\nBuild tidy, well-structured spreadsheets\nUnderstand data repositories\nCreate effective visualizations with ggplot2"
  },
  {
    "objectID": "lectures/lecture_02/02_01_lecture_powerpoint_slides.html#why-make-plots",
    "href": "lectures/lecture_02/02_01_lecture_powerpoint_slides.html#why-make-plots",
    "title": "Lecture 2: Project Design & Data Visualization",
    "section": "Why make plots?",
    "text": "Why make plots?"
  },
  {
    "objectID": "lectures/lecture_02/02_01_lecture_powerpoint_slides.html#get-in-a-group-and-discuss",
    "href": "lectures/lecture_02/02_01_lecture_powerpoint_slides.html#get-in-a-group-and-discuss",
    "title": "Lecture 2: Project Design & Data Visualization",
    "section": "Get in a group and discuss",
    "text": "Get in a group and discuss\n\nWhat is the purpose of a data visualization?\nWhat elements are essential in an effective plot?\nWhat characteristics define a “good” plot?\nWhat common mistakes make plots ineffective?\n\nNapoleon’s Disastrous Invasion of Russia Detailed in an 1869 Data Visualization: It’s Been Called “the Best Statistical Graphic Ever Drawn”"
  },
  {
    "objectID": "lectures/lecture_02/02_01_lecture_powerpoint_slides.html#common-visualization-problems",
    "href": "lectures/lecture_02/02_01_lecture_powerpoint_slides.html#common-visualization-problems",
    "title": "Lecture 2: Project Design & Data Visualization",
    "section": "Common Visualization Problems",
    "text": "Common Visualization Problems\n\nData distortion:\n\nNon-zero baselines on bar charts\n3D effects that skew perspective\nInappropriate scales\n\nExcessive “chart junk”:\n\nToo many gridlines\nUnnecessary decorative elements\nRedundant information\n\nPoor color choices:\n\nToo many colors\nNon-colorblind-friendly palettes\nColors that don’t print well in grayscale\n\nMisleading representations:\n\nPie charts with too many categories\nDual y-axes with different scales\nTruncated axes without clear indication"
  },
  {
    "objectID": "lectures/lecture_02/02_01_lecture_powerpoint_slides.html#key-takeaways",
    "href": "lectures/lecture_02/02_01_lecture_powerpoint_slides.html#key-takeaways",
    "title": "Lecture 2: Project Design & Data Visualization",
    "section": "Key Takeaways",
    "text": "Key Takeaways\n\nPlan your data management from the beginning\n\nConsistent naming conventions\nGood organization\nRegular backups\n\nMake your data tidy from the start\n\nOne observation per row\nOne variable per column\nOne value per cell\n\nCreate effective visualizations by:\n\nFocusing on data, not decoration\nUsing appropriate plot types\nFollowing good design principles\nCustomizing for clear communication\n\nMaster the grammar of graphics to:\n\nBuild plots layer by layer\nCommunicate patterns clearly\nTell compelling stories with data"
  },
  {
    "objectID": "lectures/lecture_02/02_01_lecture_powerpoint_slides.html#next-steps",
    "href": "lectures/lecture_02/02_01_lecture_powerpoint_slides.html#next-steps",
    "title": "Lecture 2: Project Design & Data Visualization",
    "section": "Next Steps",
    "text": "Next Steps\n\nPractice creating different types of plots\nLearn to combine multiple plots effectively\nExplore statistical transformations in ggplot2\nDevelop a consistent visualization style"
  }
]