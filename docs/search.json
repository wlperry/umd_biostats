[
  {
    "objectID": "lectures/lecture_02/02_02_class_activity.html#in-rstudio",
    "href": "lectures/lecture_02/02_02_class_activity.html#in-rstudio",
    "title": "02_Class_Activity",
    "section": "In RStudio:",
    "text": "In RStudio:\n\nclick file - open project and select the 2025_UMD_BioStats_Student_Code.Rproj file or double click on it in the finder or data explorer.\nyour screen will now change as RStudio knows where home is\n\n\n\nNote that in the upper right you will see 2025_UMD_BioStats_Student_Code so you know you are in the right spot\nNow click File - New File - Quarto File\n\n\n\nCreate a file that starts with 02_ and then something that will help you know what is going on like 02_class_activity_in_class.qmd\nNow this file thinks this is home.\nSo I usually copy stuff for the header from another file as its just too hard to remember all this…\n\n---\ntitle: \"Title of your file\" # Title of the file\nauthor: \"Your Name\" # who you are\nformat: # this is the formats that it will render to\n  html:\n    toc: false # not table of contents\n    default: true\n    embed-resources: true # makes everything go into the html file\n    self-contained: true # also makes self contained\neditor: visual # type of editing\nproject:\n  execute-dir: project # where it will look for files\nexecute:\n  keep-md: true # retains the images when you start again\n  cache: true # also heps reatain images and code\n---"
  },
  {
    "objectID": "lectures/lecture_02/02_02_class_activity.html#the-whole-dataframe---wont-show-all",
    "href": "lectures/lecture_02/02_02_class_activity.html#the-whole-dataframe---wont-show-all",
    "title": "02_Class_Activity",
    "section": "The whole dataframe - wont show all",
    "text": "The whole dataframe - wont show all\n\np_df\n\n# A tibble: 48 × 6\n   date    group       n_s   wind  tree_no len_mm\n   &lt;chr&gt;   &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;   &lt;dbl&gt;  &lt;dbl&gt;\n 1 3/20/25 cephalopods n     lee         1     20\n 2 3/20/25 cephalopods n     lee         1     21\n 3 3/20/25 cephalopods n     lee         1     23\n 4 3/20/25 cephalopods n     lee         1     25\n 5 3/20/25 cephalopods n     lee         1     21\n 6 3/20/25 cephalopods n     lee         1     16\n 7 3/20/25 cephalopods s     wind        1     15\n 8 3/20/25 cephalopods s     wind        1     16\n 9 3/20/25 cephalopods s     wind        1     14\n10 3/20/25 cephalopods s     wind        1     17\n# ℹ 38 more rows"
  },
  {
    "objectID": "lectures/lecture_02/02_02_class_activity.html#the-top-of-the-datafame-to-see-what-it-looks-like",
    "href": "lectures/lecture_02/02_02_class_activity.html#the-top-of-the-datafame-to-see-what-it-looks-like",
    "title": "02_Class_Activity",
    "section": "The top of the datafame to see what it looks like",
    "text": "The top of the datafame to see what it looks like\n\nhead(p_df)\n\n# A tibble: 6 × 6\n  date    group       n_s   wind  tree_no len_mm\n  &lt;chr&gt;   &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;   &lt;dbl&gt;  &lt;dbl&gt;\n1 3/20/25 cephalopods n     lee         1     20\n2 3/20/25 cephalopods n     lee         1     21\n3 3/20/25 cephalopods n     lee         1     23\n4 3/20/25 cephalopods n     lee         1     25\n5 3/20/25 cephalopods n     lee         1     21\n6 3/20/25 cephalopods n     lee         1     16\n\n# tail(p_df) # the bottom"
  },
  {
    "objectID": "lectures/lecture_02/02_02_class_activity.html#how-to-look-at-one-variable",
    "href": "lectures/lecture_02/02_02_class_activity.html#how-to-look-at-one-variable",
    "title": "02_Class_Activity",
    "section": "How to look at one variable",
    "text": "How to look at one variable\n\np_df$group # name of dataframe $ varaible\n\n [1] \"cephalopods\" \"cephalopods\" \"cephalopods\" \"cephalopods\" \"cephalopods\"\n [6] \"cephalopods\" \"cephalopods\" \"cephalopods\" \"cephalopods\" \"cephalopods\"\n[11] \"cephalopods\" \"cephalopods\" \"salmon\"      \"salmon\"      \"salmon\"     \n[16] \"salmon\"      \"salmon\"      \"salmon\"      \"salmon\"      \"salmon\"     \n[21] \"salmon\"      \"salmon\"      \"salmon\"      \"salmon\"      \"crayfish\"   \n[26] \"crayfish\"    \"crayfish\"    \"crayfish\"    \"crayfish\"    \"crayfish\"   \n[31] \"crayfish\"    \"crayfish\"    \"crayfish\"    \"crayfish\"    \"crayfish\"   \n[36] \"crayfish\"    \"snail\"       \"snail\"       \"snail\"       \"snail\"      \n[41] \"snail\"       \"snail\"       \"snail\"       \"snail\"       \"snail\"      \n[46] \"snail\"       \"snail\"       \"snail\""
  },
  {
    "objectID": "lectures/lecture_02/02_02_class_activity.html#xy-plot-with-dodged-points",
    "href": "lectures/lecture_02/02_02_class_activity.html#xy-plot-with-dodged-points",
    "title": "02_Class_Activity",
    "section": "XY Plot with dodged points",
    "text": "XY Plot with dodged points\n\nknitr::opts_chunk$set(\n  comment = '', fig.width = 4, fig.height = 3)\n\nggplot(data = p_df, aes(x=wind, y=len_mm)) + \n  geom_point(position = position_dodge2(width=0.2) )\n\n\n\n\n\n\n\n# this dodges the points # position_dodge2 or can use position_dodge depending on grouping"
  },
  {
    "objectID": "lectures/lecture_02/02_02_class_activity.html#histogram-color-with-bins",
    "href": "lectures/lecture_02/02_02_class_activity.html#histogram-color-with-bins",
    "title": "02_Class_Activity",
    "section": "Histogram Color with Bins",
    "text": "Histogram Color with Bins\n\nknitr::opts_chunk$set(\n  comment = '', fig.width = 4, fig.height = 3)\n\nggplot(data = p_df, aes(x=len_mm, fill = wind)) +\n  geom_histogram( binwidth = 2, \n# sets the width in units of the bins - try different nubmers\n   position = position_dodge2(width = 0.5))"
  },
  {
    "objectID": "lectures/lecture_02/02_02_class_activity.html#box-and-whisker-plots",
    "href": "lectures/lecture_02/02_02_class_activity.html#box-and-whisker-plots",
    "title": "02_Class_Activity",
    "section": "Box and Whisker Plots",
    "text": "Box and Whisker Plots\n\nknitr::opts_chunk$set(\n  comment = '', fig.width = 4, fig.height = 3)\n\nggplot(data = p_df, aes(x=wind, y=len_mm, fill = wind)) + geom_boxplot()"
  },
  {
    "objectID": "lectures/lecture_02/02_02_class_activity.html#xy_plot-is-not-in-the-environment",
    "href": "lectures/lecture_02/02_02_class_activity.html#xy_plot-is-not-in-the-environment",
    "title": "02_Class_Activity",
    "section": "xy_plot is not in the environment",
    "text": "xy_plot is not in the environment\nwe can save this plot by typing\n\nggsave(xy_plot, # name of the plot you called it\n       file = \"figures/xy_plot.pdf\", # type of file you want - pdf is good\n       units = \"in\", # what are the units you want to measure in\n       width = 6, height = 6) # dimensions - not if large the fonts need to be adjusted\n\nThe file should be in the figures directory"
  },
  {
    "objectID": "lectures/lecture_02/02_02_class_activity.html#we-can-also-add-themes",
    "href": "lectures/lecture_02/02_02_class_activity.html#we-can-also-add-themes",
    "title": "02_Class_Activity",
    "section": "we can also add themes",
    "text": "we can also add themes\n\nxy_plot &lt;- ggplot(data = p_df, aes(x=wind, y=len_mm, color = wind, shape = wind)) + \n  geom_point(\n    size = 2,\n    position = position_dodge2(width=0.2)) +\n  labs(x=\"Wind Side\", y = \"Length (mm)\", color = \"Wind Side\", shape = \"Wind Side\") +\n  theme_classic()\nxy_plot"
  },
  {
    "objectID": "lectures/lecture_02/02_02_class_activity.html#change-the-scale-by-zooming-in",
    "href": "lectures/lecture_02/02_02_class_activity.html#change-the-scale-by-zooming-in",
    "title": "02_Class_Activity",
    "section": "change the scale by zooming in",
    "text": "change the scale by zooming in\n\nxy_plot &lt;- ggplot(data = p_df, aes(x=wind, y=len_mm, color = wind, shape = wind)) + \n  geom_point(\n    size = 2,\n    position = position_dodge2(width=0.2)) +\n  labs(x=\"Wind Side\", y = \"Length (mm)\", color = \"Wind Side\", shape = \"Wind Side\") +\n  theme_classic() +\n  coord_cartesian(ylim = c(0,30))\nxy_plot"
  },
  {
    "objectID": "lectures/lecture_02/02_02_class_activity.html#we-need-to-learn-to-pipe-things",
    "href": "lectures/lecture_02/02_02_class_activity.html#we-need-to-learn-to-pipe-things",
    "title": "02_Class_Activity",
    "section": "we need to learn to pipe things",
    "text": "we need to learn to pipe things\n\nthe dataframe –&gt; pipe command that feed the dataframe into –&gt; next command\n\n\np_df %&gt;% summarize(mean_length = mean(len_mm, na.rm = TRUE))\n\n# A tibble: 1 × 1\n  mean_length\n        &lt;dbl&gt;\n1        17.7"
  },
  {
    "objectID": "lectures/lecture_02/02_02_class_activity.html#what-is-cool-is-we-can-do-a-lot-of-different-things-now",
    "href": "lectures/lecture_02/02_02_class_activity.html#what-is-cool-is-we-can-do-a-lot-of-different-things-now",
    "title": "02_Class_Activity",
    "section": "What is cool is we can do a lot of different things now",
    "text": "What is cool is we can do a lot of different things now\n\np_df %&gt;% \n  summarize(\n    mean_length = mean(len_mm, na.rm = TRUE),\n    sd_length = sd(len_mm, na.rm = TRUE),\n    n_length = n())\n\n# A tibble: 1 × 3\n  mean_length sd_length n_length\n        &lt;dbl&gt;     &lt;dbl&gt;    &lt;int&gt;\n1        17.7      3.53       48"
  },
  {
    "objectID": "lectures/lecture_02/02_02_class_activity.html#super-cool-code-in-case-there-are-missing-values",
    "href": "lectures/lecture_02/02_02_class_activity.html#super-cool-code-in-case-there-are-missing-values",
    "title": "02_Class_Activity",
    "section": "Super cool code in case there are missing values",
    "text": "Super cool code in case there are missing values\n\np_df %&gt;% \n  summarize(\n    mean_length = mean(len_mm, na.rm = TRUE),\n    sd_length = sd(len_mm, na.rm = TRUE),\n    n_length = sum(!is.na(len_mm)))\n\n# A tibble: 1 × 3\n  mean_length sd_length n_length\n        &lt;dbl&gt;     &lt;dbl&gt;    &lt;int&gt;\n1        17.7      3.53       48"
  },
  {
    "objectID": "lectures/lecture_02/02_02_class_activity.html#what-else-do-we-want-to-know-though",
    "href": "lectures/lecture_02/02_02_class_activity.html#what-else-do-we-want-to-know-though",
    "title": "02_Class_Activity",
    "section": "what else do we want to know though",
    "text": "what else do we want to know though\n\nwe want to know the mean and such for each group of the treatements\nhow could we do this?\n\nwe need to add a command - `group_by(wind)\nbut how can we do this for this code?\n\n\n\np_df %&gt;% \n  summarize(\n    mean_length = mean(len_mm, na.rm = TRUE),\n    sd_length = sd(len_mm, na.rm = TRUE),\n    n_length = sum(!is.na(len_mm)))\n\n# A tibble: 1 × 3\n  mean_length sd_length n_length\n        &lt;dbl&gt;     &lt;dbl&gt;    &lt;int&gt;\n1        17.7      3.53       48"
  },
  {
    "objectID": "lectures/lecture_02/02_02_class_activity.html#what-if-we-wanted-to-save-this-output",
    "href": "lectures/lecture_02/02_02_class_activity.html#what-if-we-wanted-to-save-this-output",
    "title": "02_Class_Activity",
    "section": "what if we wanted to save this output",
    "text": "what if we wanted to save this output\nwhat else do we need to do to save the output"
  },
  {
    "objectID": "lectures/lecture_01/01_03_homework_html.html",
    "href": "lectures/lecture_01/01_03_homework_html.html",
    "title": "01_Homework",
    "section": "",
    "text": "Homework for Week 1:\nThis is an assignment for you to practice the code and all the work we do in class on a different dataframe. We will assign one of these each week for you to do that encompasses all fo the work we do. We give it out on Monday so you can start early and see how this work.\n\n\n\n\n\n\nObjectives and goals\n\nMake a new Project in RStudio.\nCreate directories\n\ndata, scripts, output, figures, documents\n\nCreate a quarto markdown file and open in\nPut this in the top in place of what is there and add your info\n---\ntitle: \"Grayling in Lake I-8\" # Title of the file\nauthor: \"YOUR NAME\" # who you are\nformat: # this is the formats that it will render to\n  html:\n    default: true\n    embed-resources: true # makes everything go into the html file\neditor: visual # type of editing\nproject:\n  execute-dir: project # where it will look for files\nexecute:\n  keep-md: true # retains the images when you start again\n--- \n\n\n\nLoad the libraries\n\n# Load the libraries ----\nlibrary(readxl) # allows to read in excel files\nlibrary(tidyverse) # provides utilities seen in console\n\nRead in the file grayling_lakes_I3_I8.csv as a dataframe\nRead in the file grayling_lakes_I3_I8.xlsx as a separate dataframe\nAnnotate your code in the code block as what what is going on and why\nAnnotate the HTML code as you see fit.\nVisualize the data as the lengths of fish in lakes I_3 and I_8 as points\n\nremember position = position_dodge2(width=0.2)\n\nVisualize the data as box and whisker plots\nProvide summary statistics grouped by lake\n\nn, mean, standard deviation, standard error\n\nVisualize the data as mean plus or minus error in ggplot\n\nbe sure to have proper axis labels and units where necessary\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "lectures/lecture_01/01_2_class_activity_html.html",
    "href": "lectures/lecture_01/01_2_class_activity_html.html",
    "title": "01_Class_Activity",
    "section": "",
    "text": "Note: This activity is really in place of the outline above which you should have read before class."
  },
  {
    "objectID": "lectures/lecture_01/01_2_class_activity_html.html#tapestry-plot",
    "href": "lectures/lecture_01/01_2_class_activity_html.html#tapestry-plot",
    "title": "01_Class_Activity",
    "section": "Tapestry Plot ——",
    "text": "Tapestry Plot ——\n\nknitr::opts_chunk$set(\n  comment = '', fig.width = 4, fig.height = 3)\n\nggplot(data = p_df, aes(x=wind, y=len_mm))"
  },
  {
    "objectID": "lectures/lecture_01/01_2_class_activity_html.html#xy-plot",
    "href": "lectures/lecture_01/01_2_class_activity_html.html#xy-plot",
    "title": "01_Class_Activity",
    "section": "XY Plot —–",
    "text": "XY Plot —–\nnotice the points are layered on top but some overlap\n\nknitr::opts_chunk$set(\n  comment = '', fig.width = 4, fig.height = 3)\n  \nggplot(data = p_df, aes(x=wind, y=len_mm)) + \n  geom_point()"
  },
  {
    "objectID": "lectures/lecture_01/01_2_class_activity_html.html#xy-plot-with-dodged-points",
    "href": "lectures/lecture_01/01_2_class_activity_html.html#xy-plot-with-dodged-points",
    "title": "01_Class_Activity",
    "section": "XY Plot with dodged points ——",
    "text": "XY Plot with dodged points ——\n\nknitr::opts_chunk$set(\n  comment = '', fig.width = 4, fig.height = 3)\n\nggplot(data = p_df, aes(x=wind, y=len_mm)) + \n  geom_point(position = position_dodge2(width=0.2) )\n\n\n\n\n\n\n\n# this dodges the points # position_dodge2 or can use position_dodge depending on grouping\n\nWhat are the other ways to display the data?"
  },
  {
    "objectID": "lectures/lecture_01/01_2_class_activity_html.html#histogram",
    "href": "lectures/lecture_01/01_2_class_activity_html.html#histogram",
    "title": "01_Class_Activity",
    "section": "Histogram —–",
    "text": "Histogram —–\n\nknitr::opts_chunk$set(\n  comment = '', fig.width = 4, fig.height = 3)\n\nggplot(data = p_df, aes(x=len_mm)) + \n  geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\nNote we really want to see the histograms colored by wind direction\nWe can map the wind aesthetic to a fill in the histogram"
  },
  {
    "objectID": "lectures/lecture_01/01_2_class_activity_html.html#histogram-colors",
    "href": "lectures/lecture_01/01_2_class_activity_html.html#histogram-colors",
    "title": "01_Class_Activity",
    "section": "Histogram Colors —–",
    "text": "Histogram Colors —–\n\nknitr::opts_chunk$set(\n  comment = '', fig.width = 4, fig.height = 3)\n\nggplot(data = p_df, aes(x=len_mm, fill = wind)) + geom_histogram( position = position_dodge2(width = 0.5))\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`."
  },
  {
    "objectID": "lectures/lecture_01/01_2_class_activity_html.html#histogram-bins",
    "href": "lectures/lecture_01/01_2_class_activity_html.html#histogram-bins",
    "title": "01_Class_Activity",
    "section": "Histogram Bins —–",
    "text": "Histogram Bins —–\n\nknitr::opts_chunk$set(\n  comment = '', fig.width = 4, fig.height = 3)\n\nggplot(data = p_df, aes(x=len_mm, fill = wind)) +\n  geom_histogram( binwidth = 2, \n# sets the width in units of the bins - try different nubmers\n   position = position_dodge2(width = 0.5))"
  },
  {
    "objectID": "lectures/lecture_01/01_2_class_activity_html.html#other-plots-if-time",
    "href": "lectures/lecture_01/01_2_class_activity_html.html#other-plots-if-time",
    "title": "01_Class_Activity",
    "section": "Other Plots if time",
    "text": "Other Plots if time"
  },
  {
    "objectID": "lectures/lecture_01/01_2_class_activity_html.html#box-and-whisker-plots",
    "href": "lectures/lecture_01/01_2_class_activity_html.html#box-and-whisker-plots",
    "title": "01_Class_Activity",
    "section": "Box and Whisker Plots",
    "text": "Box and Whisker Plots\n\nknitr::opts_chunk$set(\n  comment = '', fig.width = 4, fig.height = 3)\n\nggplot(data = p_df, aes(x=wind, y=len_mm, fill = wind)) + geom_boxplot()"
  },
  {
    "objectID": "lectures/lecture_01/01_2_class_activity_slides.html#tapestry-plot",
    "href": "lectures/lecture_01/01_2_class_activity_slides.html#tapestry-plot",
    "title": "01_Class_Activity",
    "section": "Tapestry Plot ——",
    "text": "Tapestry Plot ——\n\nknitr::opts_chunk$set(\n  comment = '', fig.width = 4, fig.height = 3)\n\nggplot(data = p_df, aes(x=wind, y=len_mm))"
  },
  {
    "objectID": "lectures/lecture_01/01_2_class_activity_slides.html#xy-plot",
    "href": "lectures/lecture_01/01_2_class_activity_slides.html#xy-plot",
    "title": "01_Class_Activity",
    "section": "XY Plot —–",
    "text": "XY Plot —–\nnotice the points are layered on top but some overlap\n\nknitr::opts_chunk$set(\n  comment = '', fig.width = 4, fig.height = 3)\n  \nggplot(data = p_df, aes(x=wind, y=len_mm)) + \n  geom_point()"
  },
  {
    "objectID": "lectures/lecture_01/01_2_class_activity_slides.html#xy-plot-with-dodged-points",
    "href": "lectures/lecture_01/01_2_class_activity_slides.html#xy-plot-with-dodged-points",
    "title": "01_Class_Activity",
    "section": "XY Plot with dodged points ——",
    "text": "XY Plot with dodged points ——\n\nknitr::opts_chunk$set(\n  comment = '', fig.width = 4, fig.height = 3)\n\nggplot(data = p_df, aes(x=wind, y=len_mm)) + \n  geom_point(position = position_dodge2(width=0.2) )\n\n# this dodges the points # position_dodge2 or can use position_dodge depending on grouping\n\nWhat are the other ways to display the data?"
  },
  {
    "objectID": "lectures/lecture_01/01_2_class_activity_slides.html#histogram",
    "href": "lectures/lecture_01/01_2_class_activity_slides.html#histogram",
    "title": "01_Class_Activity",
    "section": "Histogram —–",
    "text": "Histogram —–\n\nknitr::opts_chunk$set(\n  comment = '', fig.width = 4, fig.height = 3)\n\nggplot(data = p_df, aes(x=len_mm)) + \n  geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\nNote we really want to see the histograms colored by wind direction\nWe can map the wind aesthetic to a fill in the histogram"
  },
  {
    "objectID": "lectures/lecture_01/01_2_class_activity_slides.html#histogram-colors",
    "href": "lectures/lecture_01/01_2_class_activity_slides.html#histogram-colors",
    "title": "01_Class_Activity",
    "section": "Histogram Colors —–",
    "text": "Histogram Colors —–\n\nknitr::opts_chunk$set(\n  comment = '', fig.width = 4, fig.height = 3)\n\nggplot(data = p_df, aes(x=len_mm, fill = wind)) + geom_histogram( position = position_dodge2(width = 0.5))\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`."
  },
  {
    "objectID": "lectures/lecture_01/01_2_class_activity_slides.html#histogram-bins",
    "href": "lectures/lecture_01/01_2_class_activity_slides.html#histogram-bins",
    "title": "01_Class_Activity",
    "section": "Histogram Bins —–",
    "text": "Histogram Bins —–\n\nknitr::opts_chunk$set(\n  comment = '', fig.width = 4, fig.height = 3)\n\nggplot(data = p_df, aes(x=len_mm, fill = wind)) +\n  geom_histogram( binwidth = 2, \n# sets the width in units of the bins - try different nubmers\n   position = position_dodge2(width = 0.5))"
  },
  {
    "objectID": "lectures/lecture_01/01_2_class_activity_slides.html#other-plots-if-time",
    "href": "lectures/lecture_01/01_2_class_activity_slides.html#other-plots-if-time",
    "title": "01_Class_Activity",
    "section": "Other Plots if time",
    "text": "Other Plots if time"
  },
  {
    "objectID": "lectures/lecture_01/01_2_class_activity_slides.html#box-and-whisker-plots",
    "href": "lectures/lecture_01/01_2_class_activity_slides.html#box-and-whisker-plots",
    "title": "01_Class_Activity",
    "section": "Box and Whisker Plots",
    "text": "Box and Whisker Plots\n\nknitr::opts_chunk$set(\n  comment = '', fig.width = 4, fig.height = 3)\n\nggplot(data = p_df, aes(x=wind, y=len_mm, fill = wind)) + geom_boxplot()"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "umd_biostats",
    "section": "",
    "text": "When you go to these pages there are other formats such as word and powerpoint you can dowload\n\n\n\nLecture\nReadings\nPowerPoint lecture\nIn Class Activity\nHomework\n\n\n\n\n01 Introduction\nR4DataScience Intro\nR4DataScience Visualizaiton\nLecture 1 PowerPoint\nLecture 1 Activity\nWeek 1 Homework\n\n\n02 Data wrangling\nR4DataScience Tidy Data\nLecture 2 PowerPoint\nLecture 2 Activity\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "lectures/lecture_01/01_1_lecture_powerpoint_html.html",
    "href": "lectures/lecture_01/01_1_lecture_powerpoint_html.html",
    "title": "Lecture 01",
    "section": "",
    "text": "Lecture 1: Syllabus\n\nPlease look over the syllabus as it has all the details of the class and how it will run.\n\n\n\n\nLecture 1: Who am I?\n\n\n\nBill Perry\nOffice is in XXXX\nPhone is XXXX\nEmail is wlperry@d.umn.edu\n\n\n\n\n\n\n\n\nLecture 1: My goals\n\nHow do we make observations and hypotheses?\nHow do we design an experiment\nHow do we collect data?\nHow do we organize, clean, summarize, and view the data?\nHow do we use statistics to test our hypotheses\n\nwhat tests to use\nwhat are the assumptions\nwhat are the interpretations\n\n\n\n\nLecture 1: My expectations\n\nCommunication\nPractice\nFailure\nLearn to correct and troubleshoot\n\n\n\nLecture 1: Science\n\nWay to acquire knowledge, organize it and apply it back to the real world\nMake predictions and testing these predictions using a falsifiable approach - statistics\nExplanations that cannot be falsified are not science\n\n\n\nWhat is Statistics?\n\n\nZar (1999) - “analysis and interpretation of data with view towards objective evaluation of conclusions based on the data”\n\n\n\n\n\n\n\nLecture 1: Inductive vs deductive reasoning\n\n\n\nInductive Reasoning (Specific → General)\nInductive reasoning involves observing specific cases and using them to form a general conclusion.\nExample:\n\nMeasure 10 pine needles from a tree - average length is 75 mm.\nMeasure 10 more needles from the same tree and gets similar results.\nMeasures needles from second tree - average length is 120 mm .\nYou generalize pine needles from different trees vary in length, but each tree tends to have a characteristic range.\n\nConclusion (Induction): “Pine needle length varies by tree, but each tree seems to have a typical range of lengths.\nPotential Issue: Conclusion is not guaranteed to be true - based on patterns observed in a sample, and there could be exceptions.\n\n\n\n\n\n\n\nLecture 1: Inductive vs deductive reasoning\n\n\n\nDeductive Reasoning (General → Specific)\nDeductive reasoning starts with a general principle and applies it to a specific case.\nExample:\n\nGeneral Principle: Pine needles from a species of pine tree have a predictable length range (e.g., 70–80 mm).\nSpecific Case: Collect sample of pine needles and measure them.\nPrediction: Since its the species the needle lengths should fall within 70–80 mm.\nMeasurement: Check the data and confirm needles fall within this expected range.\n\nConclusion (Deduction): “This tree belongs the species with a needle length range of 70–80 mm, we expect its needle lengths to fall in this range.”\nStronger than induction because it’s based on a general rule—but if the assumption (length range) is incorrect, conclusion could still be wrong.\n\n\n\n\n\n\n\n\n\n\n\nLecture 1: Inductive vs deductive reasoning\n\n\n\nIn reality we are doing both of these processes\n\n\n\n\n\n\n\n\n\n\n\nHow do we test hypotheses\n\n\n\nStatistics\n\nDesign good experiments\nDesign good tests\nSummarize patterns/data\nUse to make probabilistic determinations to see if differences are “real”\n\n\n\n\n\n\n\n\nData Types\n\n\n\nContinuous\n\nnumeric\n\ndiscrete\n\ninteger or numerical\n\ncategorical\n\nnominal – up, down, right, left…\nordinal – order - a, b, c, d or morning, afternoon, evening\n\n\n\n\n\n\n\n\nMeasurements\n\n\nData is obtained through measurement\nThe world is a messy place and how you measure matters\nOur measures depend on\n\naccuracy - how close we are to the real value\nprecision - how close all our measurements are but may not be precise\n\n\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "lectures/lecture_02/02_01_lecture_powerpoint_slides.html#be-consistent",
    "href": "lectures/lecture_02/02_01_lecture_powerpoint_slides.html#be-consistent",
    "title": "Lecture 02",
    "section": "Be consistent!",
    "text": "Be consistent!\n\nVariable names\n\nCodes for categorical variables\nVariable names\n\nuse snake case and lower case - nitrate_n_mgl\nalways use the same name\n\nCodes for missing values - NA or 9999 or a space - I know but I do it\nDate formats -\n\nYYYY-MM-DD HH:MM:SS\nTime begins in 1970-01-01\n\nnames of objects\n\ndataframes after import data_df\nplots - len_wt_plot\nmodels - anova_wt_model\n\nFile names\n\nuse separators - 2025_02_01_lake_x_inflow.csv\n\n\nNote format Requires considerable foresight and organization"
  },
  {
    "objectID": "lectures/lecture_02/02_01_lecture_powerpoint_slides.html#variable-and-file-names-can-be-a-problem",
    "href": "lectures/lecture_02/02_01_lecture_powerpoint_slides.html#variable-and-file-names-can-be-a-problem",
    "title": "Lecture 02",
    "section": "Variable and file names can be a problem",
    "text": "Variable and file names can be a problem\n\nAvoid spaces but use underscore _\nAvoid special characters @#$%^@#\nBe sure to also use a variety of separators so you can separate later\n\nor use the same number of characters across a variable name\n2025_03_04_file-site"
  },
  {
    "objectID": "lectures/lecture_02/02_01_lecture_powerpoint_slides.html#excel-will-drive-you-mad",
    "href": "lectures/lecture_02/02_01_lecture_powerpoint_slides.html#excel-will-drive-you-mad",
    "title": "Lecture 02",
    "section": "Excel will drive you mad",
    "text": "Excel will drive you mad\n\nit will mess up your dates\nstore data in separate columns - year - month - day\nor use a string 20250401\nalways use unambiguous format of larges to smallest - why?\n\nis 01 04 2025 the same as 04 01 2025\nwhat are the dates in english?\nor European"
  },
  {
    "objectID": "lectures/lecture_02/02_01_lecture_powerpoint_slides.html#never-do-calculations-in-excel",
    "href": "lectures/lecture_02/02_01_lecture_powerpoint_slides.html#never-do-calculations-in-excel",
    "title": "Lecture 02",
    "section": "Never do Calculations in Excel",
    "text": "Never do Calculations in Excel\n\nalways do calculations in R - reproducible\nnever merge cells\ncan use highlighting but it will disappear\na nice rectangular dataframe will make you happy\n\ntears will flow if not"
  },
  {
    "objectID": "lectures/lecture_02/02_01_lecture_powerpoint_slides.html#meta-data",
    "href": "lectures/lecture_02/02_01_lecture_powerpoint_slides.html#meta-data",
    "title": "Lecture 02",
    "section": "Meta Data",
    "text": "Meta Data\n\nThis data will love beyond you\nSomeone will need to interpret it - what do they need\n\nWhat is data about\nWho collected it\nWhen\nWhere\nFunding agency\nMethods used to collect\nVariable names\n\ndescription\nunits\nabbreviations\n\nCALCULATIONS AND WHY?"
  },
  {
    "objectID": "lectures/lecture_02/02_01_lecture_powerpoint_html.html",
    "href": "lectures/lecture_02/02_01_lecture_powerpoint_html.html",
    "title": "Lecture 02",
    "section": "",
    "text": "We covered inductive vs deductive reasoning\nHow to begin to ask questions\nAccuracy and precision\nWhat are general types of data\nHow to set up an R project in Rstudio\nHow to install and load libraries\nHow to read a file into R\nHow to make a graph\n\n\nOur first graph"
  },
  {
    "objectID": "lectures/lecture_02/02_01_lecture_powerpoint_html.html#be-consistent",
    "href": "lectures/lecture_02/02_01_lecture_powerpoint_html.html#be-consistent",
    "title": "Lecture 02",
    "section": "Be consistent!",
    "text": "Be consistent!\n\nVariable names\n\nCodes for categorical variables\nVariable names\n\nuse snake case and lower case - nitrate_n_mgl\nalways use the same name\n\nCodes for missing values - NA or 9999 or a space - I know but I do it\nDate formats -\n\nYYYY-MM-DD HH:MM:SS\nTime begins in 1970-01-01\n\nnames of objects\n\ndataframes after import data_df\nplots - len_wt_plot\nmodels - anova_wt_model\n\nFile names\n\nuse separators - 2025_02_01_lake_x_inflow.csv\n\n\nNote format Requires considerable foresight and organization"
  },
  {
    "objectID": "lectures/lecture_02/02_01_lecture_powerpoint_html.html#variable-and-file-names-can-be-a-problem",
    "href": "lectures/lecture_02/02_01_lecture_powerpoint_html.html#variable-and-file-names-can-be-a-problem",
    "title": "Lecture 02",
    "section": "Variable and file names can be a problem",
    "text": "Variable and file names can be a problem\n\nAvoid spaces but use underscore _\nAvoid special characters @#$%^@#\nBe sure to also use a variety of separators so you can separate later\n\nor use the same number of characters across a variable name\n2025_03_04_file-site"
  },
  {
    "objectID": "lectures/lecture_02/02_01_lecture_powerpoint_html.html#excel-will-drive-you-mad",
    "href": "lectures/lecture_02/02_01_lecture_powerpoint_html.html#excel-will-drive-you-mad",
    "title": "Lecture 02",
    "section": "Excel will drive you mad",
    "text": "Excel will drive you mad\n\nit will mess up your dates\nstore data in separate columns - year - month - day\nor use a string 20250401\nalways use unambiguous format of larges to smallest - why?\n\nis 01 04 2025 the same as 04 01 2025\nwhat are the dates in english?\nor European"
  },
  {
    "objectID": "lectures/lecture_02/02_01_lecture_powerpoint_html.html#never-do-calculations-in-excel",
    "href": "lectures/lecture_02/02_01_lecture_powerpoint_html.html#never-do-calculations-in-excel",
    "title": "Lecture 02",
    "section": "Never do Calculations in Excel",
    "text": "Never do Calculations in Excel\n\nalways do calculations in R - reproducible\nnever merge cells\ncan use highlighting but it will disappear\na nice rectangular dataframe will make you happy\n\ntears will flow if not"
  },
  {
    "objectID": "lectures/lecture_02/02_01_lecture_powerpoint_html.html#meta-data",
    "href": "lectures/lecture_02/02_01_lecture_powerpoint_html.html#meta-data",
    "title": "Lecture 02",
    "section": "Meta Data",
    "text": "Meta Data\n\nThis data will love beyond you\nSomeone will need to interpret it - what do they need\n\nWhat is data about\nWho collected it\nWhen\nWhere\nFunding agency\nMethods used to collect\nVariable names\n\ndescription\nunits\nabbreviations\n\nCALCULATIONS AND WHY?"
  }
]