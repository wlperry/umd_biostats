{
  "hash": "410ec6031482769cfc76f6c4a7b879c6",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"05_Class_Activity\"\nauthor: \"Bill Perry\"\nexecute:\n  freeze: auto\n  cache: true\n  echo: true\n  keep-md: true # retains the images when you start again\nformat:\n  html:\n    freeze: false\n    toc: false\n    output-file: \"05_02_class_activity.html\"\n    default: true\n    embed-resources: true\n    self-contained: true\n    max-width: 80ch  # Limits line length to approximately 80 characters\n    css: ../../css/activity.css\n  docx:\n    default: true\n    toc: false\n    toc-depth: 3\n    number-sections: false\n    highlight-style: github\n    reference-doc: ../../ms_templates/custom-reference.docx\n    css: msword.css\n    embed-resources: true\n---\n\n\n\n\n\n\n# In class activity 4:\n\n## What did we do last time in activity 3?\n\n-   Created and interpreted frequency distributions with histograms\n-   Compared lakes using side-by-side histograms\n-   Explored how sample size affects our view of a population\n-   Created density plots and calculated probabilities\n\n## Today's focus:\n\n-   Understanding standard normal distributions and z-scores\n-   Calculating and interpreting standard error\n-   Creating confidence intervals\n-   Working with the Student's t-distribution\n\n# Introduction\n\nIn this active learning module, we'll explore statistical inference using the sculpin fish dataset from Alaska. We'll focus on:\n\n-   Converting raw data to standardized z-scores\n-   Calculating standard error and confidence intervals\n-   Understanding the Student's t-distribution\n-   Making statistical comparisons between lakes\n\nWe'll use the `tidyverse` package for data manipulation and visualization, along with `patchwork` for combining plots.\n\n## Setup\n\nFirst, let's load the packages we need and the dataset:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load required packages\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(patchwork)\n\n# Read in the data file\nsculpin_df <- read_csv(\"data/sculpin.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 1052 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): lake, species\ndbl (3): site, total_length_mm, mass_g\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\n# Look at the first few rows\nhead(sculpin_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 5\n   site lake  species       total_length_mm mass_g\n  <dbl> <chr> <chr>                   <dbl>  <dbl>\n1   146 E 01  slimy sculpin              53   1.25\n2   146 E 01  slimy sculpin              61   1.9 \n3   146 E 01  slimy sculpin              53   1.75\n4   146 E 01  slimy sculpin              77   4.25\n5   146 E 01  slimy sculpin              45   0.9 \n6   146 E 01  slimy sculpin              48   0.9 \n```\n\n\n:::\n:::\n\n\n\n\n\n\nLet's calculate some basic statistics for Toolik Lake fish:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate basic statistics for Toolik Lake\ntoolik_stats <- sculpin_df %>% \n  filter(lake == \"Toolik\") %>% \n  summarize(\n    mean_length = mean(total_length_mm, na.rm = TRUE),\n    sd_length = sd(total_length_mm, na.rm = TRUE),\n    n = sum(!is.na(total_length_mm)),\n    se_length = sd_length / sqrt(n)\n  )\n\n# Display the statistics\ntoolik_stats\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 4\n  mean_length sd_length     n se_length\n        <dbl>     <dbl> <int>     <dbl>\n1        51.7      12.0   208     0.834\n```\n\n\n:::\n:::\n\n\n\n\n\n\n# Part 1: Understanding the Standard Normal Distribution\n\n## Converting to Z-scores\n\nZ-scores tell us how many standard deviations a data point is from the mean. The formula is:\n\n$$ Z = \\frac{X - \\mu}{\\sigma} $$\n\nLet's calculate z-scores for the Toolik Lake fish:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Add a z-score column to our Toolik Lake data\ntoolik_z <- sculpin_df %>%\n  filter(lake == \"Toolik\") %>%\n  mutate(z_score = (total_length_mm - toolik_stats$mean_length) / toolik_stats$sd_length)\n\n# Display the first few rows with z-scores\nhead(toolik_z)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 6\n   site lake   species       total_length_mm mass_g z_score\n  <dbl> <chr>  <chr>                   <dbl>  <dbl>   <dbl>\n1   100 Toolik slimy sculpin            12.5 0.0152  -3.26 \n2   100 Toolik slimy sculpin            13   0.0104  -3.22 \n3   100 Toolik slimy sculpin            74   2.3      1.85 \n4   100 Toolik slimy sculpin            42   0.5     -0.806\n5   100 Toolik slimy sculpin            39   0.4     -1.06 \n6   100 Toolik slimy sculpin            71   3        1.61 \n```\n\n\n:::\n:::\n\n\n\n\n\n\nNow, let's create a histogram of the original data and the z-scores side by side:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create histogram of original data\np1 <- toolik_z %>%\n  ggplot(aes(total_length_mm)) +\n  geom_histogram(binwidth = 2, fill = \"blue\", alpha = 0.7) +\n  labs(title = \"Original Scale\",\n       x = \"Length (mm)\",\n       y = \"Count\")\n\n# Create histogram of z-scores\np2 <- toolik_z %>%\n  ggplot(aes(z_score)) +\n  geom_histogram(binwidth = 0.2, fill = \"red\", alpha = 0.7) +\n  geom_vline(xintercept = 0, linewidth = 1) +\n  geom_vline(xintercept = c(-1, 1), color = \"black\", linetype = \"dashed\") +\n  labs(title = \"Z-Score Scale\",\n       x = \"Standard deviations from mean (z-score)\",\n       y = \"Count\")\n\n# Combine plots\np1 / p2\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 79 rows containing non-finite outside the scale range (`stat_bin()`).\nRemoved 79 rows containing non-finite outside the scale range (`stat_bin()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](05_02_class_activity_files/figure-docx/unnamed-chunk-4-1.png)\n:::\n:::\n\n\n\n\n\n\n::: callout-tip\n## Activity 1\n\nCalculate the z-score for a fish with a length of 30mm from Toolik Lake. Is this fish length common or unusual?\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate the z-score for a 30mm fish\nfish_length <- 30\nz_score_30mm <- (fish_length - toolik_stats$mean_length) / toolik_stats$sd_length\n\n# Print the result\nz_score_30mm\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -1.804193\n```\n\n\n:::\n\n```{.r .cell-code}\n# Determine if this is common or unusual\n# A z-score beyond -2 or 2 is generally considered unusual\n```\n:::\n\n\n\n\n\n:::\n\n## Understanding Areas Under the Standard Normal Curve\n\nThe standard normal distribution has known probabilities associated with z-scores. We can calculate these probabilities in R:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate probability of z-score less than 1\npnorm(1)  # This gives us the area under the standard normal curve to the left of z=1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.8413447\n```\n\n\n:::\n\n```{.r .cell-code}\n# Calculate probability of z-score between -1 and 1\npnorm(1) - pnorm(-1)  # This is approximately 68% (the 68-95-99.7 rule)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.6826895\n```\n\n\n:::\n:::\n\n\n\n\n\n\n::: callout-tip\n## Activity 2\n\nUsing the `pnorm()` function, answer: 1. What proportion of fish in Toolik Lake are shorter than 40mm?\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# First, convert 40mm to a z-score\nz_score_40mm <- (40 - toolik_stats$mean_length) / toolik_stats$sd_length\nz_score_40mm\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -0.9725651\n```\n\n\n:::\n\n```{.r .cell-code}\n# Then, find the proportion of fish shorter than 40mm\nproportion_less_than_40mm <- pnorm(z_score_40mm)\nproportion_less_than_40mm\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.1653847\n```\n\n\n:::\n:::\n\n\n\n\n\n:::\n\n# Part 2: Standard Error and Sampling Distributions\n\n## Taking Multiple Samples\n\nWhen we take multiple samples from a population, each sample gives a slightly different estimate of the population mean. Let's see this in action:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Set seed for reproducibility\nset.seed(123)\n\n# Take a small sample\nsmall_sample <- sculpin_df %>%\n  filter(lake == \"Toolik\") %>%\n  sample_n(10)\n\n# Calculate the mean of this sample\nsmall_sample_mean <- mean(small_sample$total_length_mm, na.rm = TRUE)\n\n# Print the result\ncat(\"Sample mean (n=10):\", small_sample_mean, \"mm\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSample mean (n=10): 50.42857 mm\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Population mean:\", toolik_stats$mean_length, \"mm\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nPopulation mean: 51.69471 mm\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Difference:\", abs(small_sample_mean - toolik_stats$mean_length), \"mm\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nDifference: 1.26614 mm\n```\n\n\n:::\n:::\n\n\n\n\n\n\nLet's take multiple small samples and see how their means vary:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Function to take a sample and calculate its mean\nget_sample_mean <- function() {\n  sculpin_df %>%\n    filter(lake == \"Toolik\") %>%\n    sample_n(10) %>%\n    summarize(mean_length = mean(total_length_mm, na.rm = TRUE)) %>%\n    pull(mean_length)\n}\n\n# Take 20 samples\nsample_means <- replicate(20, get_sample_mean())\n\n# Create a histogram of the sample means\ntibble(sample_means = sample_means) %>%\n  ggplot(aes(sample_means)) +\n  geom_histogram(bins = 10, fill = \"green\", alpha = 0.7) +\n  geom_vline(xintercept = toolik_stats$mean_length, color = \"red\", linewidth = 1) +\n  labs(title = \"Distribution of Sample Means (n = 10)\",\n       subtitle = paste(\"Red line = population mean =\", round(toolik_stats$mean_length, 1), \"mm\"),\n       x = \"Sample Mean (mm)\",\n       y = \"Frequency\")\n```\n\n::: {.cell-output-display}\n![](05_02_class_activity_files/figure-docx/unnamed-chunk-9-1.png)\n:::\n:::\n\n\n\n\n\n\n## Standard Error\n\nThe standard error of the mean tells us how much we expect sample means to vary:\n\n$$ SE = \\frac{s}{\\sqrt{n}} $$\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate the standard error from our samples\nsample_se <- sd(sample_means)\n\n# Calculate the theoretical standard error\ntheoretical_se <- toolik_stats$sd_length / sqrt(10)\n\n# Display both values\ncat(\"Standard Error from samples:\", round(sample_se, 2), \"mm\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nStandard Error from samples: 3.55 mm\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Standard Error from formula:\", round(theoretical_se, 2), \"mm\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nStandard Error from formula: 3.8 mm\n```\n\n\n:::\n:::\n\n\n\n\n\n\n::: callout-tip\n## Activity 3\n\nLet's see how sample size affects the standard error. Run the code below to take samples of size 5 and size 20.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Function to take multiple samples of a given size\ntake_samples <- function(sample_size, n_samples = 20) {\n  replicate(n_samples, {\n    sculpin_df %>%\n      filter(lake == \"Toolik\") %>%\n      sample_n(sample_size) %>%\n      summarize(mean_length = mean(total_length_mm, na.rm = TRUE)) %>%\n      pull(mean_length)\n  })\n}\n\n# Take samples of size 5 and calculate SE\nsample_means_5 <- take_samples(5)\nse_5 <- sd(sample_means_5)\n\n# Take samples of size 20 and calculate SE\nsample_means_20 <- take_samples(20)\nse_20 <- sd(sample_means_20)\n\n# Print results\ncat(\"SE with n=5:\", round(se_5, 2), \"mm\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSE with n=5: 5.07 mm\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"SE with n=20:\", round(se_20, 2), \"mm\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSE with n=20: 3.21 mm\n```\n\n\n:::\n\n```{.r .cell-code}\n# How does SE change as sample size increases?\n```\n:::\n\n\n\n\n\n:::\n\n# Part 3: Confidence Intervals\n\n## Calculating Confidence Intervals\n\nA confidence interval gives us a range of values that likely contains the true population mean. For a 95% confidence interval:\n\n$$ 95\\% \\text{ CI} = \\bar{x} \\pm 1.96 \\times SE $$\n\nLet's calculate the 95% confidence interval for the mean length of Toolik Lake fish:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate 95% confidence interval using z (normal distribution)\nci_lower <- toolik_stats$mean_length - 1.96 * toolik_stats$se_length\nci_upper <- toolik_stats$mean_length + 1.96 * toolik_stats$se_length\n\n# Display the confidence interval\ncat(\"95% Confidence Interval:\", \n    round(ci_lower, 1), \"to\", round(ci_upper, 1), \"mm\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n95% Confidence Interval: 50.1 to 53.3 mm\n```\n\n\n:::\n:::\n\n\n\n\n\n\n## Visualizing Confidence Intervals\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a data frame with our statistics\ntoolik_ci <- data.frame(\n  lake = \"Toolik\",\n  mean = toolik_stats$mean_length,\n  lower = ci_lower,\n  upper = ci_upper\n)\n\n# Plot the mean with error bars showing the 95% CI\nggplot(toolik_ci, aes(x = lake, y = mean)) +\n  geom_point(size = 3) +\n  geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2) +\n  labs(title = \"Mean Fish Length with 95% Confidence Interval\",\n       x = NULL,\n       y = \"Mean Length (mm)\")\n```\n\n::: {.cell-output-display}\n![](05_02_class_activity_files/figure-docx/unnamed-chunk-13-1.png)\n:::\n:::\n\n\n\n\n\n\n::: callout-tip\n## Activity 4\n\nCalculate and visualize the 95% confidence interval for another lake of your choice.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Choose another lake\nother_lake <- \"E 01\"  # You can change this to any lake in the dataset\n\n# Calculate statistics for your chosen lake\nother_lake_stats <- sculpin_df %>%\n  filter(lake == other_lake) %>%\n  summarize(\n    mean_length = mean(total_length_mm, na.rm = TRUE),\n    sd_length = sd(total_length_mm, na.rm = TRUE),\n    n = sum(!is.na(total_length_mm)),\n    se_length = sd_length / sqrt(n)\n  )\n\n# Display the statistics\nother_lake_stats\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 4\n  mean_length sd_length     n se_length\n        <dbl>     <dbl> <int>     <dbl>\n1        58.2      15.3    79      1.72\n```\n\n\n:::\n\n```{.r .cell-code}\n# Calculate 95% confidence interval\nother_ci_lower <- other_lake_stats$mean_length - 1.96 * other_lake_stats$se_length\nother_ci_upper <- other_lake_stats$mean_length + 1.96 * other_lake_stats$se_length\n\n# Display the confidence interval\ncat(\"95% Confidence Interval for\", other_lake, \":\", \n    round(other_ci_lower, 1), \"to\", round(other_ci_upper, 1), \"mm\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n95% Confidence Interval for E 01 : 54.8 to 61.6 mm\n```\n\n\n:::\n\n```{.r .cell-code}\n# Create a visualization\n# Add your code here to create a similar errorbar plot\n```\n:::\n\n\n\n\n\n:::\n\n# Part 4: Student's t-Distribution\n\nWhen our sample size is small (n \\< 30), we should use the Student's t-distribution instead of the normal distribution to calculate confidence intervals:\n\n$$ 95\\% \\text{ CI} = \\bar{x} \\pm t_{(n-1, 0.025)} \\times SE $$\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate 95% CI using t-distribution\nn <- toolik_stats$n\nt_critical <- qt(0.975, df = n - 1)  # Two-tailed, so 0.975 for 95% CI\n\nt_ci_lower <- toolik_stats$mean_length - t_critical * toolik_stats$se_length\nt_ci_upper <- toolik_stats$mean_length + t_critical * toolik_stats$se_length\n\n# Compare with z-based CI\ncat(\"95% CI using z:\", round(ci_lower, 1), \"to\", round(ci_upper, 1), \"mm\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n95% CI using z: 50.1 to 53.3 mm\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"95% CI using t:\", round(t_ci_lower, 1), \"to\", round(t_ci_upper, 1), \"mm\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n95% CI using t: 50.1 to 53.3 mm\n```\n\n\n:::\n:::\n\n\n\n\n\n\n::: callout-tip\n## Activity 5\n\nLet's see how t-critical values change with sample size. The smaller the sample size, the larger the t-critical value.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a table of t-critical values for different sample sizes\nsample_sizes <- c(5, 10, 30, 100)\nt_critical_values <- qt(0.975, df = sample_sizes - 1)\n\n# Create a data frame\nt_critical_df <- data.frame(\n  sample_size = sample_sizes,\n  t_critical = t_critical_values\n)\n\n# Display the table\nt_critical_df\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  sample_size t_critical\n1           5   2.776445\n2          10   2.262157\n3          30   2.045230\n4         100   1.984217\n```\n\n\n:::\n\n```{.r .cell-code}\n# The z-critical value for 95% confidence is 1.96\n# Which sample sizes have t-critical values close to 1.96?\n```\n:::\n\n\n\n\n\n:::\n\n# Part 5: Testing Hypotheses\n\n## Two-Sample t-test\n\nNow let's compare fish lengths between two lakes:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get data for Toolik and E 01 lakes\ntoolik_fish <- sculpin_df %>% \n  filter(lake == \"Toolik\", !is.na(total_length_mm)) %>%\n  pull(total_length_mm)\n\ne01_fish <- sculpin_df %>% \n  filter(lake == \"E 01\", !is.na(total_length_mm)) %>%\n  pull(total_length_mm)\n\n# Perform a two-sample t-test\nt_test_result <- t.test(toolik_fish, e01_fish)\n\n# Display the result\nt_test_result\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tWelch Two Sample t-test\n\ndata:  toolik_fish and e01_fish\nt = -3.4051, df = 116.36, p-value = 0.0009082\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -10.313036  -2.727921\nsample estimates:\nmean of x mean of y \n 51.69471  58.21519 \n```\n\n\n:::\n\n```{.r .cell-code}\n# Create a boxplot comparison\nsculpin_df %>%\n  filter(lake %in% c(\"Toolik\", \"E 01\"), !is.na(total_length_mm)) %>%\n  ggplot(aes(x = lake, y = total_length_mm, fill = lake)) +\n  geom_boxplot() +\n  labs(title = \"Comparing Fish Lengths Between Lakes\",\n       subtitle = paste(\"t-test p-value =\", round(t_test_result$p.value, 4)),\n       x = \"Lake\",\n       y = \"Length (mm)\")\n```\n\n::: {.cell-output-display}\n![](05_02_class_activity_files/figure-docx/unnamed-chunk-17-1.png)\n:::\n:::\n\n\n\n\n\n\n::: callout-tip\n## Activity 6\n\nRun a t-test to compare fish lengths between two different lakes of your choice.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Choose two lakes to compare\nlake1 <- \"S 06\"  # You can change this\nlake2 <- \"Toolik\"  # You can change this\n\n# Get the data for both lakes\nlake1_fish <- sculpin_df %>% \n  filter(lake == lake1, !is.na(total_length_mm)) %>%\n  pull(total_length_mm)\n\nlake2_fish <- sculpin_df %>% \n  filter(lake == lake2, !is.na(total_length_mm)) %>%\n  pull(total_length_mm)\n\n# Run the t-test\nmy_t_test <- t.test(lake1_fish, lake2_fish)\n\n# Display the result\nmy_t_test\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tWelch Two Sample t-test\n\ndata:  lake1_fish and lake2_fish\nt = 1.8374, df = 298.76, p-value = 0.06714\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -0.1648305  4.8057105\nsample estimates:\nmean of x mean of y \n 54.01515  51.69471 \n```\n\n\n:::\n\n```{.r .cell-code}\n# Interpret your results:\n# - What is the p-value?\n# - Is there a significant difference between the lakes at α = 0.05?\n# - Which lake has longer fish on average?\n```\n:::\n\n\n\n\n\n:::\n\n# Part 6: Guided Challenges\n\nNow it's your turn to apply what you've learned. Work with your partner to complete these challenges:\n\n::: callout-tip\n## Challenge 1\n\nCreate boxplots of fish lengths for three lakes of your choice. Include the sample size in the labels.\n:::\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Your code here for Challenge 1\n```\n:::\n\n\n\n\n\n\n::: callout-tip\n## Challenge 2\n\nCalculate and compare the standard errors for fish lengths in three different lakes. Which lake has the smallest standard error and why?\n:::\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Your code here for Challenge 2\n```\n:::\n\n\n\n\n\n\n::: callout-tip\n## Challenge 3\n\nCreate a bar plot showing the mean fish lengths for all lakes with at least 20 fish, and add error bars showing the 95% confidence intervals.\n:::\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Your code here for Challenge 3\n```\n:::\n\n\n\n\n\n\n# Reflection Questions\n\nAfter completing the activities, discuss these questions with your group:\n\n1.  How does sample size affect our confidence in estimating the population mean?\n\n2.  Why is the t-distribution more appropriate than the normal distribution when working with small samples?\n\n3.  When comparing two populations, what can we learn from looking at confidence intervals versus performing a t-test?\n\n4.  How would you explain the concept of statistical significance to someone who has never taken a statistics course?\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}