{
  "hash": "76fa718aefe9876245621c5fa2a70458",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"03_Class_Activity\"\nauthor: \"Bill Perry\"\nexecute:\n  freeze: auto\n  cache: true\n  echo: true\n  keep-md: true # retains the images when you start again\n  message: false\n  warning: false\n  fig-height: 3\n  fig-width: 3\n  paged-print: false\nformat:\n  html:\n    freeze: false\n    toc: false\n    output-file: \"04_02_class_activity.html\"\n    default: true\n    embed-resources: true\n    self-contained: true\n    max-width: 80ch  # Limits line length to approximately 80 characters\n    css: ../../css/activity.css\n  docx:\n    default: true\n    toc: false\n    toc-depth: 3\n    number-sections: false\n    highlight-style: github\n    reference-doc: ../../ms_templates/custom-reference.docx\n    css: msword.css\n    embed-resources: true\n---\n\n\n\n\n\n\n# In class activity 4:\n\n## What did we do last time in activity 3?\n\n-   Setting up a project and variable names and code names\n-   How to use the pipe command %\\>%\n-   How to create descriptive statistics of a sample\n\n``` r\np_df %>% \n  summarize(\n    mean_length = mean(len_mm, na.rm = TRUE),\n    sd_length = sd(len_mm, na.rm = TRUE),\n    n_length = sum(!is.na(len_mm)))\n```\n\n-   More graphs...\n\n    ``` r\n    ggplot(data = p_df, aes(x=len_mm, fill = wind)) +\n      geom_histogram( binwidth = 2, \n    # sets the width in units of the bins - try different nubmers\n       position = position_dodge2(width = 0.5))\n    ```\n\n    ![](images/clipboard-1074788880.png){width=\"455\"}\n\n-   What questions do you have and what is unclear - what did not work so far when you started the homework?\n\n# Introduction\n\nIn this active learning module, we'll explore real data from fish populations in Alaska. We'll focus on understanding:\n\n-   How to create and interpret frequency distributions\n-   How sample size affects our view of a population\n-   How distributions differ among lakes\n\nWe'll use the `tidyverse` package for data manipulation and visualization.\n\n## Setup\n\nFirst, let's load the packages we need and the dataset:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# # Install the patchwork package if needed\n\n# install.packages(\"patchwork\")\nlibrary(patchwork)\n\nlibrary(tidyverse)\n\n\n# Read in the data file\nsculpin_df <- read_csv(\"data/sculpin.csv\")\n\n# Look at the first few rows\nhead(sculpin_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 5\n   site lake  species       total_length_mm mass_g\n  <dbl> <chr> <chr>                   <dbl>  <dbl>\n1   146 E 01  slimy sculpin              53   1.25\n2   146 E 01  slimy sculpin              61   1.9 \n3   146 E 01  slimy sculpin              53   1.75\n4   146 E 01  slimy sculpin              77   4.25\n5   146 E 01  slimy sculpin              45   0.9 \n6   146 E 01  slimy sculpin              48   0.9 \n```\n\n\n:::\n:::\n\n\n\n\n\n\n## Basic Data Summary\n\nLet's first check what lakes are in our dataframe:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get a list of unique lakes\nunique(sculpin_df$lake)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"E 01\"   \"E 05\"   \"NE 12\"  \"NE 14\"  \"S 06\"   \"S 07\"   \"Toolik\"\n```\n\n\n:::\n:::\n\n\n\n\n\n\nHow many fish do we have from each lake?\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Count observations by lake\nsculpin_df %>%\n  group_by(lake) %>% \n  summarize(sculpin_n = n())\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 7 × 2\n  lake   sculpin_n\n  <chr>      <int>\n1 E 01         268\n2 E 05          75\n3 NE 12        180\n4 NE 14         37\n5 S 06         132\n6 S 07          73\n7 Toolik       287\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Count observations by lake\nsculpin_df %>%\n  group_by(lake) %>% \n  summarize(sculpin_n = sum(!is.na(total_length_mm)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 7 × 2\n  lake   sculpin_n\n  <chr>      <int>\n1 E 01          79\n2 E 05          14\n3 NE 12        180\n4 NE 14         37\n5 S 06         132\n6 S 07          73\n7 Toolik       208\n```\n\n\n:::\n:::\n\n\n\n\n\n\n# Part 1: Creating Frequency Distributions\n\n## Basic Histograms\n\nA histogram shows how many observations fall into certain ranges (or \"bins\").\n\nLet's create a simple histogram of fish lengths from Lake E 01 :\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter for Toolik Lake and create a histogram\nsculpin_df %>%\n  filter(lake == \"E 01\") %>%\n  ggplot(aes(x = total_length_mm)) +\n  geom_histogram(binwidth = 2, fill = \"blue\", alpha = 0.7) +\n  labs(title = \"Fish Lengths in Lake E 01\",\n       x = \"Length (mm)\",\n       y = \"Count\")\n```\n\n::: {.cell-output-display}\n![](04_02_class_activity_files/figure-docx/unnamed-chunk-5-1.png)\n:::\n:::\n\n\n\n\n\n\n::: callout-tip\n## Activity 1\n\nTry changing the `binwidth` parameter to 5 and then to 1. How does the appearance of the histogram change?\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Try it here\n```\n:::\n\n\n\n\n\n:::\n\n## Comparing Lakes\n\nNow let's compare two lakes\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Compare histograms from Toolik and E 01 lakes\nsculpin_df %>%\n  filter(lake %in% c(\"Toolik\", \"E 01\")) %>%\n  ggplot(aes(x = total_length_mm, fill = lake)) +\n  geom_histogram(binwidth = 2, alpha = 0.7, \n                 position = \"identity\") +\n  labs(title = \"Fish Lengths in Different Lakes\",\n       x = \"Length (mm)\",\n       y = \"Count\")\n```\n\n::: {.cell-output-display}\n![](04_02_class_activity_files/figure-docx/unnamed-chunk-7-1.png)\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Compare histograms from Toolik and E 01 lakes\nsculpin_df %>%\n  filter(lake %in% c(\"Toolik\", \"E 01\")) %>%\n  ggplot(aes(x = total_length_mm, fill = lake)) +\n  geom_histogram(binwidth = 2, alpha = 0.7, \n                 position = position_dodge2(width=1)) +\n  labs(title = \"Fish Lengths in Different Lakes\",\n       x = \"Length (mm)\",\n       y = \"Count\")\n```\n\n::: {.cell-output-display}\n![](04_02_class_activity_files/figure-docx/unnamed-chunk-8-1.png)\n:::\n:::\n\n\n\n\n\n\nNow let's compare two lakes side by side:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Compare histograms from Toolik and E 01 lakes\nsculpin_df %>%\n  filter(lake %in% c(\"Toolik\", \"E 01\")) %>%\n  ggplot(aes(x = total_length_mm, fill = lake)) +\n  geom_histogram(binwidth = 2, alpha = 0.7, position = \"identity\") +\n  labs(title = \"Fish Lengths in Different Lakes\",\n       x = \"Length (mm)\",\n       y = \"Count\") +\n  # facet_wrap(~lake, ncol = 1) +\n  facet_grid(lake~.)\n```\n\n::: {.cell-output-display}\n![](04_02_class_activity_files/figure-docx/unnamed-chunk-9-1.png)\n:::\n:::\n\n\n\n\n\n\n::: callout-tip\n## Activity 2\n\nChoose two new lakes to compare. What differences do you notice in their distributions?\n\nAdd code here\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# enter code here\n```\n:::\n\n\n\n\n\n:::\n\n# Part 2: Sample Size Effects\n\nLet's explore how the sample size affects what we see.\n\n## Small vs. Large Samples\n\nWe'll randomly select different sample sizes from Toolik Lake:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Set a seed for reproducibility\nset.seed(123)\n\n# Create small sample (15 fish)\nsmall_sample <- sculpin_df %>%\n  filter(lake == \"Toolik\") %>%\n  sample_n(15)\n\n# Create larger sample (50 fish)\nlarger_sample <- sculpin_df %>%\n  filter(lake == \"Toolik\") %>%\n  sample_n(100)\n\n# Plot both samples\np1 <- small_sample %>%\n  ggplot(aes(x = total_length_mm)) +\n  geom_histogram(binwidth = 2, fill = \"red\", alpha = 0.7) +\n  # coord_cartesian(xlim = c(20,80)) +\n  labs(title = \"Small Sample (n=15)\",\n       x = \"Length (mm)\",\n       y = \"Count\") +\n  coord_cartesian(xlim = c(20,80))\n\np2 <- larger_sample %>%\n  ggplot(aes(x = total_length_mm)) +\n  geom_histogram(binwidth = 2, fill = \"blue\", alpha = 0.7) +\n  # coord_cartesian(xlim = c(20,80)) +\n  labs(title = \"Larger Sample (n=50)\",\n       x = \"Length (mm)\",\n       y = \"Count\")\n\n\n# Display the plots side by side\np1 + p2 +\n  plot_layout(ncol = 1)\n```\n\n::: {.cell-output-display}\n![](04_02_class_activity_files/figure-docx/unnamed-chunk-11-1.png)\n:::\n:::\n\n\n\n\n\n\n::: callout-tip\n## Activity 3\n\nTry changing the sample sizes. What happens when you use very small samples (n=5)? What about larger samples (n=150)?\n\nadd code here\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# enter code here\n```\n:::\n\n\n\n\n\n\n# \n:::\n\n# Part 3: From Histograms to Density Plots\n\nDensity plots give us a smoothed version of the histogram:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a density plot\nsculpin_df %>%\n  filter(lake == \"Toolik\") %>%\n  ggplot(aes(x = total_length_mm)) +\n  geom_density(fill = \"blue\", alpha = 0.5) +\n  labs(title = \"Density Plot of Fish Lengths in Toolik Lake\",\n       x = \"Length (mm)\",\n       y = \"Density\")\n```\n\n::: {.cell-output-display}\n![](04_02_class_activity_files/figure-docx/unnamed-chunk-13-1.png)\n:::\n:::\n\n\n\n\n\n\nWe can overlay the histogram and the density plot:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Combine histogram and density plot\nsculpin_df %>%\n  filter(lake == \"Toolik\") %>%\n  ggplot(aes(x = total_length_mm)) +\n  geom_histogram(aes(y = after_stat(density)), binwidth = 2, \n                 fill = \"lightblue\", alpha = 0.7) +\n  geom_density(color = \"blue\", linewidth = 1) +\n  labs(title = \"Histogram with Density Overlay\",\n       x = \"Length (mm)\",\n       y = \"Density\")\n```\n\n::: {.cell-output-display}\n![](04_02_class_activity_files/figure-docx/unnamed-chunk-14-1.png)\n:::\n:::\n\n\n\n\n\n\n::: callout-tip\n## Activity 4\n\nCreate a density plot comparing multiple lakes. Which lakes have similar distributions? Which ones are different?\n\nTry code here using patchwork or facet_grid\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n #Enter code here#\n```\n:::\n\n\n\n\n\n\n# \n:::\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Function to calculate area under density curve\ncalculate_density_area <- function(data_vector) {\n  # Remove NA values\n  data_vector <- data_vector[!is.na(data_vector)]\n  \n  # Calculate density\n  dens <- density(data_vector)\n  \n  # Calculate area using numeric integration (trapezoidal rule)\n  # Area should be approximately 1\n  dx <- diff(dens$x)\n  y_avg <- (dens$y[-1] + dens$y[-length(dens$y)]) / 2\n  area <- sum(dx * y_avg)\n  return(area)\n}\n\n# Apply to Toolik lake data\ntoolik_data <- sculpin_df %>% \n  filter(lake == \"Toolik\") %>% \n  pull(total_length_mm)\n\narea_value <- calculate_density_area(toolik_data)\n\n# Create plot with calculated area\nsculpin_df %>%\n  filter(lake == \"Toolik\") %>%\n  ggplot(aes(x = total_length_mm)) +\n  geom_density(fill = \"blue\", alpha = 0.4) +\n  geom_area(stat = \"density\", fill = \"red\", alpha = 0.3) +\n  labs(title = \"Area Under Probability Density Function = 1\",\n       subtitle = paste(\"Calculated area =\", round(area_value, 4)),\n       x = \"Length (mm)\",\n       y = \"Density\")\n```\n\n::: {.cell-output-display}\n![](04_02_class_activity_files/figure-docx/unnamed-chunk-16-1.png)\n:::\n:::\n\n\n\n\n\n\nThis can be adapted to calculate the area of a subset of the plot\n\nI don't expect you to know or be able to do all of this but is here to play with the code\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# ------- PART 3: SET STUDENT INPUT VALUES -------\n# Students can change these values to calculate different probabilities\n\n# For this example, let's calculate the probability of fish between 40mm and 60mm\nlower_bound <- 60  # Student would change this value\nupper_bound <- 100  # Student would change this value\n\n\n\n# ------- PART 1: PREPARE THE DATA -------\n\n# Filter data for just one lake to keep it simple for students\ntoolik_fish <- sculpin_df %>%\n  filter(lake == \"Toolik\") %>%\n  filter(!is.na(total_length_mm))  # Remove any missing values\n\n# ------- PART 2: CREATE A FUNCTION TO CALCULATE PROBABILITY -------\n\n# This function calculates the probability of finding a fish with length between\n# lower_bound and upper_bound using the empirical distribution of our data\ncalculate_probability <- function(data_vector, lower_bound, upper_bound) {\n  # First, we create a density object from our data\n  dens <- density(data_vector)\n  \n  # Find indices of x-values that fall within our bounds\n  indices <- which(dens$x >= lower_bound & dens$x <= upper_bound)\n  \n  # If we have no points in the range, return 0\n  if(length(indices) <= 1) {\n    return(0)\n  }\n  \n  # Get x and y values within our bounds\n  x_values <- dens$x[indices]\n  y_values <- dens$y[indices]\n  \n  # Calculate the area using the trapezoidal rule\n  # (average height × width) for each segment, then sum all segments\n  widths <- diff(x_values)\n  avg_heights <- (y_values[-1] + y_values[-length(y_values)]) / 2\n  area_in_range <- sum(widths * avg_heights)\n  \n  # Return the calculated probability\n  return(area_in_range)\n}\n\n\n# ------- PART 4: CALCULATE THE PROBABILITY -------\n\n# Calculate the probability for the specified range\nprobability <- calculate_probability(toolik_fish$total_length_mm, lower_bound, upper_bound)\n\n# Calculate the total area to show that the complete distribution sums to approximately 1\ntotal_area <- calculate_probability(toolik_fish$total_length_mm, \n                                   min(toolik_fish$total_length_mm),\n                                   max(toolik_fish$total_length_mm))\n\n# ------- PART 5: CREATE THE VISUALIZATION -------\n\n# Create a plot showing the full distribution and the selected range\nggplot(toolik_fish, aes(x = total_length_mm)) +\n  # First, plot the overall density curve\n  geom_density(fill = \"lightblue\", alpha = 0.5) +\n  \n  # Then highlight our region of interest in a different color\n  geom_area(stat = \"density\", \n            fill = \"darkred\", \n            alpha = 0.7,\n            xlim = c(lower_bound, upper_bound)) +\n  \n  # Add vertical lines to clearly mark the boundaries\n  geom_vline(xintercept = lower_bound, linetype = \"dashed\", color = \"red\") +\n  geom_vline(xintercept = upper_bound, linetype = \"dashed\", color = \"red\") +\n  \n  # Add informative labels\n  labs(\n    title = \"Probability Distribution of Fish Lengths\",\n    subtitle = paste0(\"Probability of fish between \", lower_bound, \n                     \" and \", upper_bound, \" mm = \", \n                     round(probability * 100, 1), \"%\"),\n    caption = paste(\"Total area under the curve =\", round(total_area, 3)),\n    x = \"Fish Length (mm)\",\n    y = \"Density\"\n  ) +\n  \n  # Add text annotations to explain the areas\n  annotate(\"text\", x = (lower_bound + upper_bound)/2, \n           y = max(density(toolik_fish$total_length_mm)$y) * 0.7,\n           label = paste0(\"Area = \", round(probability, 3)),\n           color = \"white\", size = 4) +\n  \n  # Make the plot look nicer\n  theme_minimal() +\n  theme(\n    plot.title = element_text(face = \"bold\"),\n    plot.subtitle = element_text(color = \"darkred\")\n  )\n```\n\n::: {.cell-output-display}\n![](04_02_class_activity_files/figure-docx/unnamed-chunk-17-1.png)\n:::\n:::\n\n\n\n\n\n\n# Part 4: Summary Statistics - descriptive statistics\n\nLet's calculate basic summary statistics for each lake:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate mean, standard deviation, and sample size by lake\nsculpin_df %>%\n  group_by(lake) %>%\n  summarize(\n    mean_length = mean(total_length_mm),\n    sd_length = sd(total_length_mm),\n    count = n(),\n    .groups = \"drop\"\n  ) %>%\n  arrange(desc(count))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 7 × 4\n  lake   mean_length sd_length count\n  <chr>        <dbl>     <dbl> <int>\n1 Toolik        NA        NA     287\n2 E 01          NA        NA     268\n3 NE 12         49.8      15.2   180\n4 S 06          54.0      10.9   132\n5 E 05          NA        NA      75\n6 S 07          55.6      12.7    73\n7 NE 14         47.3      10.5    37\n```\n\n\n:::\n:::\n\n\n\n\n\n\n## WOAH - what happened there - there are NA values in the data\n\nyou need to either remove missing values or you can do that in the formulas\n\n*What is the advantage to manually removing or doing it in formulas?*\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate mean, standard deviation, and sample size by lake\nsculpin_stats_df <- sculpin_df %>%\n  group_by(lake) %>%\n  summarize(\n    mean_length = mean(total_length_mm, na.rm = TRUE),\n    sd_length = sd(total_length_mm, na.rm = TRUE),\n    se_length = sd(total_length_mm, na.rm = TRUE)/ sum(!is.na(total_length_mm))^.5,\n    count = sum(!is.na(total_length_mm)),\n    .groups = \"drop\"\n  ) %>%\n  arrange(desc(count))\nsculpin_stats_df\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 7 × 5\n  lake   mean_length sd_length se_length count\n  <chr>        <dbl>     <dbl>     <dbl> <int>\n1 Toolik        51.7      12.0     0.834   208\n2 NE 12         49.8      15.2     1.13    180\n3 S 06          54.0      10.9     0.949   132\n4 E 01          58.2      15.3     1.72     79\n5 S 07          55.6      12.7     1.48     73\n6 NE 14         47.3      10.5     1.72     37\n7 E 05          47.1      10.8     2.88     14\n```\n\n\n:::\n:::\n\n\n\n\n\n\nNow let's visualize these statistics:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a bar plot of mean lengths with error bars\nsculpin_df %>%  \n  ggplot(aes(lake, total_length_mm)) +\n  stat_summary(\n    fun = mean, na.rm = TRUE, \n    geom = \"bar\",\n    fill = \"skyblue\"\n    ) +\n  stat_summary(\n    fun.data = mean_se, na.rm = TRUE, \n    geom = \"errorbar\", \n    width = 0.2) +\n  labs(title = \"Mean Fish Length by Lake\",\n       x = \"Lake\",\n       y = \"Mean Length (mm)\") \n```\n\n::: {.cell-output-display}\n![](04_02_class_activity_files/figure-docx/unnamed-chunk-20-1.png)\n:::\n:::\n\n\n\n\n\n\nWe could also do this from the dataframe we just made\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a bar plot of mean lengths with error bars\nsculpin_stats_df %>%  \n  ggplot(aes(x = reorder(lake, mean_length), y = mean_length)) +\n  geom_bar(stat = \"identity\", \n           fill = \"skyblue\") +\n  geom_errorbar(aes(\n    ymin = mean_length - se_length, \n    ymax = mean_length + se_length),\n    width = 0.2\n    ) +\n  labs(\n    title = \"Mean Fish Length by Lake\",\n       x = \"Lake\",\n       y = \"Mean Length (mm)\") \n```\n\n::: {.cell-output-display}\n![](04_02_class_activity_files/figure-docx/unnamed-chunk-21-1.png)\n:::\n:::\n\n\n\n\n\n\nThe power of the pipe command is you can do this without hving to make a new dataframe\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a bar plot of mean lengths with error bars\nsculpin_df %>%\n  group_by(lake) %>%\n  summarize(\n    mean_length = mean(total_length_mm, na.rm = TRUE),\n    sd_length = sd(total_length_mm, na.rm = TRUE),\n    se_length = sd_length / sqrt(n()),\n    count = n(),\n    .groups = \"drop\"\n  ) %>%\n  filter(count >= 10) %>%  # Only include lakes with sufficient sample size\n  ggplot(aes(x = reorder(lake, mean_length), y = mean_length)) +\n  geom_bar(stat = \"identity\", fill = \"skyblue\") +\n  geom_errorbar(aes(ymin = mean_length - se_length, \n                    ymax = mean_length + se_length),\n                width = 0.2) +\n  labs(title = \"Mean Fish Length by Lake\",\n       x = \"Lake\",\n       y = \"Mean Length (mm)\") \n```\n\n::: {.cell-output-display}\n![](04_02_class_activity_files/figure-docx/unnamed-chunk-22-1.png)\n:::\n:::\n\n\n\n\n\n\n::: callout-tip\n## Activity 5\n\nBased on the mean plot and what you've seen in the distributions, what can you say about fish sizes in different lakes? Are there lakes with particularly large or small fish?\n\nWe will start to ask how different are they and is it by chance?\n\nThis is the inductive phase of doing research.\n:::\n\n# Part 5: Guided Challenges\n\nNow it's your turn to explore the data! Work with your partner to complete these challenges:\n\n1.  Find the lake with the widest range of fish lengths (hint: use the `range()` function)\n\n2.  Create box and whisker plots to compare fish lengths across lakes:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Example boxplot code to get you started\nsculpin_df %>%\n  filter(!is.na(total_length_mm)) %>%\n  ggplot(aes(x = lake, y = total_length_mm)) +\n  geom_boxplot() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](04_02_class_activity_files/figure-docx/unnamed-chunk-23-1.png)\n:::\n:::\n\n\n\n\n\n\n3.  Explore if there's a relationship between fish length and mass:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Starting code for length-mass relationship\nsculpin_df %>%\n  filter(!is.na(total_length_mm), !is.na(mass_g)) %>%\n  ggplot(aes(x = total_length_mm, y = mass_g)) +\n  geom_point(alpha = 0.5) +\n  labs(x = \"Length (mm)\", y = \"Mass (g)\")\n```\n\n::: {.cell-output-display}\n![](04_02_class_activity_files/figure-docx/unnamed-chunk-24-1.png)\n:::\n:::\n\n\n\n\n\n\n4.  Try creating a density plot that shows all lakes in different colors:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Starting code for multi-lake density plot\nsculpin_df %>%\n  filter(!is.na(total_length_mm)) %>%\n  ggplot(aes(x = total_length_mm, fill = lake)) +\n  geom_density(alpha = 0.3) +\n  labs(x = \"Length (mm)\", y = \"Density\")\n```\n\n::: {.cell-output-display}\n![](04_02_class_activity_files/figure-docx/unnamed-chunk-25-1.png)\n:::\n:::\n\n\n\n\n\n\n# Reflection Questions\n\nAfter completing the activities, discuss these questions with your group:\n\n1.  How does sample size affect our view of a population's characteristics?\n\n2.  Why might fish lengths be different in different lakes?\n\n3.  What are the advantages and disadvantages of histograms versus density plots?\n\n4.  What additional data would help you better understand these fish populations?\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}