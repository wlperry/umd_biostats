{
  "hash": "9fc6d7cdad6910c9a506307ec3699b0c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Lecture 03\"\nauthor: \"Bill Perry\"\nexecute:\n  freeze: auto\n  cache: true\n  echo: true\n  keep-md: true # retains the images when you start again\n  fig-width: 3\n  fig-height: 4\nformat:\n  html:\n    toc: false\n    output-file: \"03_01_lecture_powerpoint_html.html\"\n    embed-resources: true\n    self-contained: true\n    max-width: 80ch  # Limits line length to approximately 80 characters\n    css: ../../css/lecture.css\n  revealjs:\n    output-file: \"03_01_lecture_powerpoint_slides.html\"\n    self-contained: true\n    css: ../../css/lecture.css\n    slide-number: true\n    transition: fade\n  pptx:\n    reference-doc: ../../ms_templates/lecture_template.pptx \n    embed-resources: true\n  docx:\n    default: true\n    toc: false\n    toc-depth: 3\n    number-sections: false\n    highlight-style: github\n    reference-doc: ../../ms_templates/custom-reference.docx\n    css: msword.css\n    embed-resources: true\neditor: visual\n---\n\n\n\n\n\n\n\n\n\n\n# **Lecture 2: Review of data and graphing**\n\n::::: columns\n::: {.column width=\"60%\"}\n-   We covered\n-   How to design a well-organized project\n-   How to implement good naming conventions\n    -   Controlled vocabulary\n    -   Including units in names\n-   Create and use metadata effectively\n-   Build tidy, well-structured spreadsheets\n-   Understand data repositories\n-   Create effective visualizations with ggplot2\n:::\n\n::: {.column width=\"40%\"}\nThese are variables - do you know what they mean?\n\nTGW - yep its a thing\n\nODO - what do you think it is?\n\nNO3 - what is it? Are you sure? Why might you get in legal trouble if you used this?\n\n![](images/clipboard-3544614084.png)\n:::\n:::::\n\n# **Lecture 3:** Descriptive Statistics and Uncerrtainty in R and Tidyverse\n\n::::: columns\n::: {.column width=\"60%\"}\n## The objectives:\n\n-   Understand why statistics is vital in biology\n-   Distinguish between different types of biological variables\n-   Learn about accuracy, precision, and bias in measurements\n-   Calculate and interpret measures of central tendency (mean, median, geometric mean)\n-   Calculate and interpret measures of spread (standard deviation, variance, IQR)\n-   Understand data transformations for skewed distributions\n-   Visualize descriptive statistics for our data\n-   Learn how to handle uncertainty in our data\n\nWe'll use a dataset on grayling fish from two different lakes to explore these concepts..\n\n![](images/grayling.jpeg){width=\"296\"}\n:::\n\n::: {.column width=\"40%\"}\n![](images/pop_sample_stats.png){width=\"208\"}\n:::\n:::::\n\n# Lecture 3: Why Statistics is Vital in Biology\n\n::::: columns\n::: {.column width=\"60%\"}\nBiology is fundamentally different from fields like physics in that:\n\n-   Most biological phenomena are **probabilistic** rather than **deterministic**\n    -   Responses occur with some characteristic probability, not with certainty\n-   All biological material varies, which is essential for evolution (recall Darwin's postulates):\n    -   Variation exists within populations\n    -   Some variation is heritable\n    -   Some heritable variation affects survival/reproduction\n-   Environmental conditions (in nature, lab, or greenhouse) always vary\n-   Measurements include error\n-   Multiple unmeasured causal factors influence nearly all biological systems\n\nStatistics helps us understand biological processes in this variable world by:\n\n1.  Condensing variation into summary form (Descriptive statistics)\n2.  Testing whether observations are consistent with predictions (Inferential statistics)\n:::\n\n::: {.column width=\"40%\"}\n\n\n\n\n\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03_01_lecture_powerpoint_files/figure-docx/unnamed-chunk-1-1.png)\n:::\n\n::: {.cell-output-display}\n![](03_01_lecture_powerpoint_files/figure-docx/unnamed-chunk-1-2.png)\n:::\n:::\n\n\n\n\n\n\n\n\n\n:::\n:::::\n\n::: callout-tip\n## Practice Exercise 1: Can you do this for the pine data we have collected?\n\nLet's recreate the basic histogram of fish lengths from our last class. Use the `sculpin_df` data frame that's already loaded.\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Write your code here to read in the file\n# How do you examine the data - what are the ways you think and lets try it!\n```\n:::\n\n\n\n\n\n\n\n\n\n:::\n\n# Lecture 3: Populations and Samples\n\n::::: columns\n::: {.column width=\"60%\"}\nBefore we dive into descriptive statistics, let's clarify some fundamental concepts:\n\n-   **Population**: The entire group of things under consideration; the group for which answers obtained from measurements and statistical analysis are pertinent.\n-   **Sample**: A subset of the population that is actually measured.\n-   **Sample unit**: The individual thing drawn from the population.\n\nTypes of populations: -\n\n-   **Observational population**: Usually finite but may be very large (e.g., head width of all corn earworms in a field) -\n-   **Experimental population**: Often conceptually infinite (e.g., all possible goldenrod plants that could receive a specific fertilizer treatment)\n\nSampling involves\n\n-   **inference** - generalizing from what is observed in the sample to what is present in the population.\n-   Valid inference requires **random sampling**.\n:::\n\n::: {.column width=\"40%\"}\n![](images/pop_sample_stats.png){width=\"201\"}\n:::\n:::::\n\n# Lecture 3: Parameters vs. Statistics\n\n::::: columns\n::: {.column width=\"60%\"}\nIt's important to distinguish between:\n\n-   **Parameters**: True numerical values for a population (usually denoted by Greek letters)\n-   **Statistics**: Estimates of parameters based on samples (usually denoted by Roman letters)\n\nFor example:\n\n-   Population mean (μ) is estimated by sample mean (Y̅)\n-   Population standard deviation (σ) is estimated by sample standard deviation (s)\n\nThe standard deviation formula above includes n-1 in the denominator (rather than n) to provide an unbiased estimate of the population parameter.\n:::\n\n::: {.column width=\"40%\"}\n![](images/pop_sample_stats.png){width=\"245\"}\n:::\n:::::\n\n# \n\n# Lecture 3: Kinds of Biological Variables\n\n::::: columns\n::: {.column width=\"60%\"}\nUnderstanding the type of variable you're working with is essential for selecting appropriate statistics:\n\n### Measurement or Quantitative Variables\n\n-   **Continuous**: Any value between extremes of scale is possible (e.g., mass, length)\n-   **Discrete (meristic)**: Only fixed values (usually integers) between extremes are possible (e.g., bristle number, egg count)\n\n### Rank Variables (Ordinal)\n\n-   Assign only order, not quantity\n-   Nothing implied about relative distance between values\n\n### Categorical Variables (Qualitative)\n\n-   No quantitative information (e.g., male/female, living/dead)\n-   Some are simplifications of quantitative variables (e.g., color instead of wavelength)\n:::\n\n::: {.column width=\"40%\"}\nasdfsd\n:::\n:::::\n\n# Lecture 3: Kinds of Biological Variables\n\n::::: columns\n::: {.column width=\"60%\"}\nDerived Variables\n\n-   **Percentages, Proportions**: Ratio of some component to total\n-   **Ratios**: Relation of two variables\n-   **Rates**: Quantity per unit (time, mass, etc.)\n-   **Indices**: More complex derived variables (e.g., condition index)\n\nLet's explore our grayling fish dataset and identify the types of variables it contains.\n:::\n\n::: {.column width=\"40%\"}\nasf\n:::\n:::::\n\n::: callout-tip\n## Practice Exercise 2: Can you do this for the pine data we have collected?\n\nLet's examine the different data and determine what they are?\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Write your code here to read in the file\n# How do you examine the data - what are the ways you think and lets try it!\n\n# Load the grayling data\ngrayling_df <- read_csv(\"data/gray_I3_I8.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 168 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): lake, species\ndbl (3): site, total_length_mm, mass_g\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\n# Take a look at the first few rows\nhead(grayling_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 5\n   site lake  species         total_length_mm mass_g\n  <dbl> <chr> <chr>                     <dbl>  <dbl>\n1   113 I3    arctic grayling             266    135\n2   113 I3    arctic grayling             290    185\n3   113 I3    arctic grayling             262    145\n4   113 I3    arctic grayling             275    160\n5   113 I3    arctic grayling             240    105\n6   113 I3    arctic grayling             265    145\n```\n\n\n:::\n\n```{.r .cell-code}\n# Get a summary of the dataset\nglimpse(grayling_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 168\nColumns: 5\n$ site            <dbl> 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113,…\n$ lake            <chr> \"I3\", \"I3\", \"I3\", \"I3\", \"I3\", \"I3\", \"I3\", \"I3\", \"I3\", …\n$ species         <chr> \"arctic grayling\", \"arctic grayling\", \"arctic grayling…\n$ total_length_mm <dbl> 266, 290, 262, 275, 240, 265, 265, 253, 246, 203, 289,…\n$ mass_g          <dbl> 135, 185, 145, 160, 105, 145, 150, 130, 130, 71, 179, …\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n:::\n\n# Lecture 3: Accuracy, Precision, and Bias\n\n::::: columns\n::: {.column width=\"60%\"}\nWhen taking biological measurements, understanding measurement quality is essential:\n\n-   **Accuracy**: Closeness of measured value to true value\n-   **Precision**: Closeness of repeated measurements to each other (repeatability)\n-   **Bias**: Systematic departure from the true value\n\nAccuracy is a function of both precision and bias. For statisticians, bias is usually a more serious problem than low precision because:\n\n-   It's harder to detect (true value usually unknown)\n\n-   Low precision can be compensated for by increased sample size\n:::\n\n::: {.column width=\"40%\"}\n![](images/clipboard-21056328.png){width=\"274\"}\n\nasdfsd\n:::\n:::::\n\n::: callout-tip\n## Practice Exercise 1: What are potential sources of error in pine needles or fish?\n\nFor our grayling data, potential sources of measurement error might include:\n\n-   Precision issues:\n\n    -   Variations in how fish are measured (e.g., slightly bent fish)\n\n-   Bias issues:\n\n    -   Systematic underestimation of length if measurements aren't taken from the true tip of the snout to the end of the tail\n\n-   Accuracy issues? what could they be?\n:::\n\n# Lecture 3: Measures of Central Tendency\n\n::::: columns\n::: {.column width=\"60%\"}\nThe two most common measures of central tendency are the **mean** and the **median**.\n\nThe Arithmetic Mean The arithmetic mean is the average of a set of measurements:\n\n## $$\\bar{Y} = \\frac{\\sum_{i=1}^{n} Y_i}{n}$$\n\nWhere:\n\n-   $Y_i$ represents each individual measurement\n\n-   $n$ is the total number of observations\n:::\n\n::: {.column width=\"40%\"}\nstuff\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate mean length of all fish\nmean_length <- mean(grayling_df$total_length_mm)\ncat(\"Mean length of all fish:\", round(mean_length, 1), \"mm\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nMean length of all fish: 324.5 mm\n```\n\n\n:::\n\n```{.r .cell-code}\n# Calculate mean by lake\ngrayling_df %>%\n  group_by(lake) %>%\n  summarise(mean_length = mean(total_length_mm, na.rm=TRUE)) %>%\n  kable(caption = \"Mean length by lake\", digits = 1)\n```\n\n::: {.cell-output-display}\n\n\nTable: Mean length by lake\n\n|lake | mean_length|\n|:----|-----------:|\n|I3   |       265.6|\n|I8   |       362.6|\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n:::\n:::::\n\n# Lecture 3: Measures of Central Tendency\n\n::::: columns\n::: {.column width=\"60%\"}\nThe Median\n\n-   The median is the middle value of a sorted dataset.\n-   If there is an even number of observations, it's the average of the two middle values.\n:::\n\n::: {.column width=\"40%\"}\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate median length of all fish\nmedian_length <- median(grayling_df$total_length_mm)\ncat(\"Median length of all fish:\", median_length, \"mm\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nMedian length of all fish: 324.5 mm\n```\n\n\n:::\n\n```{.r .cell-code}\n# Calculate median by lake\ngrayling_df %>%\n  group_by(lake) %>%\n  summarise(median_length = median(total_length_mm)) %>%\n  kable(caption = \"Median length by lake\", digits = 1)\n```\n\n::: {.cell-output-display}\n\n\nTable: Median length by lake\n\n|lake | median_length|\n|:----|-------------:|\n|I3   |           266|\n|I8   |           373|\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n:::\n:::::\n\n# Lecture 3: Measures of Spread\n\n::::: columns\n::: {.column width=\"60%\"}\nThe spread of a distribution tells us how variable the measurements are.\n\n### Variance and Standard Deviation\n\nThe variance is\n\n## $$s = {\\frac{\\sum_{i=1}^{n} (Y_i - \\bar{Y})^2}{n-1}}$$\n\nThe standard deviation is the square root of variance\n\n-   measures how far observations typically are from the mean and are in the units of the mean:\n\n## $$s = \\sqrt{\\frac{\\sum_{i=1}^{n} (Y_i - \\bar{Y})^2}{n-1}}$$\n:::\n\n::: {.column width=\"40%\"}\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate standard deviation of fish length\nvar_length <- var(grayling_df$total_length_mm)\nsd_length <- sd(grayling_df$total_length_mm)\n\n\ncat(\"Variance of length:\", round(var_length, 1), \"mm²\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nVariance of length: 4225.9 mm²\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Standard deviation of length:\", round(sd_length, 1), \"mm\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nStandard deviation of length: 65 mm\n```\n\n\n:::\n\n```{.r .cell-code}\n# Calculate by lake\ngrayling_df %>%\n  group_by(lake) %>%\n  summarise(\n     var_length = var(total_length_mm), \n     sd_length = sd(total_length_mm)\n   \n  ) %>%\n  kable(caption = \"Standard deviation and variance by lake\", digits = 1)\n```\n\n::: {.cell-output-display}\n\n\nTable: Standard deviation and variance by lake\n\n|lake | var_length| sd_length|\n|:----|----------:|---------:|\n|I3   |      801.1|      28.3|\n|I8   |     2739.4|      52.3|\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n:::\n:::::\n\n# Lecture 3: Measures of Spread\n\n# \n\n::::: columns\n::: {.column width=\"60%\"}\nThe area under the curve of a bell shaped curve within + and - 2 Standard deviations on each side includes about 95% of the data\n\n### \n:::\n\n::: {.column width=\"40%\"}\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Read the data\nfish_data <- read.csv(\"data/gray_I3_I8.csv\")\n\n# Filter data for I8 lake\ni3_data <- fish_data %>% \n  filter(lake == \"I3\")\n\n# Calculate statistics\nmean_length <- mean(i3_data$total_length_mm)\nsd_length <- sd(i3_data$total_length_mm)\n\n# Calculate the bounds for standard deviations\nminus_2sd <- mean_length - (2 * sd_length)\nplus_2sd <- mean_length + (2 * sd_length)\n\n# Calculate percentage of data within 2 SD\npercent_within_2sd <- 100 * mean(\n  i3_data$total_length_mm >= minus_2sd & \n  i3_data$total_length_mm <= plus_2sd\n)\n\n# Create the plot\nggplot(i3_data, aes(x = total_length_mm)) +\n  # Add density curve\n  geom_density(fill = \"skyblue\", alpha = 0.6) +\n  \n  # Add vertical line for mean\n  geom_vline(xintercept = mean_length, color = \"navy\", linewidth = 1) +\n  \n  # Add vertical lines for +/- 2 SD\n  geom_vline(xintercept = minus_2sd, color = \"darkred\", linewidth = 0.8, linetype = \"dashed\") +\n  geom_vline(xintercept = plus_2sd, color = \"darkred\", linewidth = 0.8, linetype = \"dashed\") +\n  \n  # Highlight area within 2 SD\n  annotate(\"rect\", \n           xmin = minus_2sd, xmax = plus_2sd, \n           ymin = 0, ymax = Inf, \n           fill = \"lightgreen\", alpha = 0.3) +\n  \n  # Add annotations\n  annotate(\"text\", \n           x = mean_length, y = 0.010,\n           label = paste0(\"Mean = \", round(mean_length, 1), \" mm\"),\n           color = \"navy\", fontface = \"bold\", size = 4) +\n  \n  annotate(\"text\", \n           x = mean_length, y = 0.009,\n           label = paste0(\"SD = \", round(sd_length, 1), \" mm\"),\n           color = \"darkred\", size = 3.5) +\n  \n  annotate(\"text\", \n           x = mean_length, y = 0.008,\n           label = paste0(round(percent_within_2sd, 1), \"% within ±2 SD\"),\n           color = \"darkgreen\", size = 3.5) +\n  \n  # Add labels for SD boundaries\n  annotate(\"text\", \n           x = minus_2sd, y = 0.002,\n           label = paste0(\"-2 SD (\", round(minus_2sd, 1), \")\"),\n           color = \"darkred\", angle = 90, hjust = 0, size = 3) +\n  \n  annotate(\"text\", \n           x = plus_2sd, y = 0.002,\n           label = paste0(\"+2 SD (\", round(plus_2sd, 1), \")\"),\n           color = \"darkred\", angle = 90, hjust = 0, size = 3) +\n  \n  # Add title and labels\n  labs(\n    title = \"Distribution of Fish Lengths in i3 Lake\",\n    subtitle = \"Area between dashed lines represents ±2 standard deviations from the mean\",\n    x = \"Total Length (mm)\",\n    y = \"Density\",\n    caption = paste0(\"n = \", nrow(i3_data), \" fish\")\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(face = \"bold\", size = 14),\n    plot.subtitle = element_text(size = 11),\n    axis.title = element_text(face = \"bold\"),\n    panel.grid.minor = element_blank()\n  ) +\n  # Set x-axis limits to show the full range plus a bit of padding\n  xlim(min(i3_data$total_length_mm) - 10, max(i3_data$total_length_mm) + 10)\n```\n\n::: {.cell-output-display}\n![](03_01_lecture_powerpoint_files/figure-docx/sd-variance-2-1.png)\n:::\n\n```{.r .cell-code}\n# Print statistics to console\ncat(\"i3 Lake Fish Length Summary:\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ni3 Lake Fish Length Summary:\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Number of fish:\", nrow(i3_data), \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNumber of fish: 66 \n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Mean length:\", round(mean_length, 2), \"mm\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nMean length: 265.61 mm\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Standard Deviation:\", round(sd_length, 2), \"mm\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nStandard Deviation: 28.3 mm\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Range for ±2 SD:\", round(minus_2sd, 2), \"to\", round(plus_2sd, 2), \"mm\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRange for ±2 SD: 209 to 322.21 mm\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Percentage within ±2 SD:\", round(percent_within_2sd, 2), \"%\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nPercentage within ±2 SD: 90.91 %\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n:::\n:::::\n\n# Lecture 3: Coefficient of Variation\n\n::::: columns\n::: {.column width=\"60%\"}\nThe coefficient of variation (CV) expresses the standard deviation as a percentage of the mean:\n\n## $$CV = \\frac{s}{\\bar{Y}} \\times 100\\%$$\n\nThis is useful for comparing the variability of measurements with different units or vastly different scales.\n:::\n\n::: {.column width=\"40%\"}\nstuff\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate coefficient of variation\ncv_length <- sd_length / mean_length * 100\ncat(\"Coefficient of variation:\", round(cv_length, 1), \"%\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoefficient of variation: 10.7 %\n```\n\n\n:::\n\n```{.r .cell-code}\n# Calculate by lake\ngrayling_df %>%\n  group_by(lake) %>%\n  summarise(\n    cv_length = sd(total_length_mm) / mean(total_length_mm) * 100\n  ) %>%\n  kable(caption = \"Coefficient of variation by lake\", digits = 1)\n```\n\n::: {.cell-output-display}\n\n\nTable: Coefficient of variation by lake\n\n|lake | cv_length|\n|:----|---------:|\n|I3   |      10.7|\n|I8   |      14.4|\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n:::\n:::::\n\n# Lecture 3: Interquartile Range\n\n::::: columns\n::: {.column width=\"60%\"}\nThe interquartile range (IQR) is the range of the middle 50% of the data:\n\n$$IQR = Q_3 - Q_1$$\n\nWhere $Q_1$ is the first quartile (25th percentile) and $Q_3$ is the third quartile (75th percentile).\n:::\n\n::: {.column width=\"40%\"}\nstuff\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate quartiles and IQR\nq1_length <- quantile(grayling_df$total_length_mm, 0.25)\nq3_length <- quantile(grayling_df$total_length_mm, 0.75)\niqr_length <- IQR(grayling_df$total_length_mm)\n\ncat(\"First quartile:\", q1_length, \"mm\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nFirst quartile: 270.75 mm\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Third quartile:\", q3_length, \"mm\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nThird quartile: 377 mm\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Interquartile range:\", iqr_length, \"mm\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nInterquartile range: 106.25 mm\n```\n\n\n:::\n\n```{.r .cell-code}\n# Calculate by lake\ngrayling_df %>%\n  group_by(lake) %>%\n  summarise(\n    q1 = quantile(total_length_mm, 0.25),\n    q3 = quantile(total_length_mm, 0.75),\n    iqr = IQR(total_length_mm)\n  ) %>%\n  kable(caption = \"Quartiles and IQR by lake\", digits = 1)\n```\n\n::: {.cell-output-display}\n\n\nTable: Quartiles and IQR by lake\n\n|lake |  q1|  q3| iqr|\n|:----|---:|---:|---:|\n|I3   | 256| 280|  24|\n|I8   | 340| 401|  61|\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n:::\n:::::\n\n# Lecture 3: Data Transformations for Skewed Distributions\n\n::::: columns\n::: {.column width=\"60%\"}\nBiological data are often skewed (asymmetrical), which can make the arithmetic mean less representative of central tendency. Data transformations can help address this issue.\n\n### Logarithmic Transformation\n\nThe logarithmic transformation is one of the most common for right-skewed biological data:\n\nWhen data are log-normally distributed, the geometric mean often provides a better measure of central tendency than the arithmetic mean.\n:::\n\n::: {.column width=\"40%\"}\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Add log-transformed length to our dataset\ngrayling_df <- grayling_df %>%\n  mutate(log_mass = log(mass_g))\n\n# Compare original and log-transformed distributions\np1 <- ggplot(grayling_df, aes(x = mass_g)) +\n  geom_histogram(bins = 15, fill = \"steelblue\", color = \"white\") +\n  labs(\n    title = \"Original Mass Distribution\",\n    x = \"Total Mass (g)\",\n    y = \"Count\"\n  )\n\np2 <- ggplot(grayling_df, aes(x = log_mass)) +\n  geom_histogram(bins = 15, fill = \"steelblue\", color = \"white\") +\n  labs(\n    title = \"Log-Transformed Mass Distribution\",\n    x = \"Log(Mass(g)\",\n    y = \"Count\"\n  )\n\n# Display side by side\ngridExtra::grid.arrange(p1, p2, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](03_01_lecture_powerpoint_files/figure-docx/log-transform-1.png)\n:::\n\n```{.r .cell-code}\n# Compare means on original and transformed scales\nmean_log_mass <- mean(grayling_df$log_mass)\nback_transformed_mean <- exp(mean_log_mass)\n\ncat(\"Arithmetic mean of original data:\", round(mean_length, 1), \"mm\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nArithmetic mean of original data: 265.6 mm\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Geometric mean (back-transformed mean of logs):\", round(back_transformed_mean, 1), \"mm\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGeometric mean (back-transformed mean of logs): NA mm\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n:::\n:::::\n\n# Lecture 3: When to Use Transformations\n\n::::: columns\n::: {.column width=\"60%\"}\n-   **Log transformation**: When data are right-skewed or follow multiplicative rather than additive processes\n-   **Square root transformation**: For count data or data where variance increases with the mean\n-   **Inverse transformation**: For strongly right-skewed data\n-   **Arcsine square root transformation**: For proportions or percentages (though logistic regression is often preferred now)\n:::\n\n::: {.column width=\"40%\"}\ns\n:::\n:::::\n\n# Lecture 3: Visualizing Distributions\n\nHistograms\n\nHistograms show the frequency distribution of our data.\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a histogram\nggplot(grayling_df, aes(x = mass_g)) +\n  geom_histogram(bins = 15, fill = \"steelblue\", color = \"white\") +\n  labs(\n    title = \"Distribution of Fish Mass\",\n    x = \"Total Mass (g)\",\n    y = \"Count\"\n  )\n```\n\n::: {.cell-output-display}\n![](03_01_lecture_powerpoint_files/figure-docx/histogram-1.png)\n:::\n\n```{.r .cell-code}\n# Histograms by lake\nggplot(grayling_df, aes(x = mass_g, fill = lake)) +\n  geom_histogram(bins = 15, position = \"dodge\", alpha = 0.7) +\n  labs(\n    title = \"Distribution of Fish Mass by Lake\",\n    x = \"Total Mass (g)\",\n    y = \"Count\"\n  )\n```\n\n::: {.cell-output-display}\n![](03_01_lecture_powerpoint_files/figure-docx/histogram-2.png)\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n# Lecture 3: Visualizing Distributions\n\nBox Plots\n\nBox plots show the median, quartiles, and potential outliers.\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a box plot\nggplot(grayling_df, aes(y = total_length_mm)) +\n  geom_boxplot(fill = \"steelblue\", alpha = 0.7) +\n  labs(\n    title = \"Box Plot of Fish Lengths\",\n    y = \"Total Length (mm)\"\n  )\n```\n\n::: {.cell-output-display}\n![](03_01_lecture_powerpoint_files/figure-docx/boxplot-1.png)\n:::\n\n```{.r .cell-code}\n# Box plot by lake\nggplot(grayling_df, aes(x = lake, y = total_length_mm, fill = lake)) +\n  geom_boxplot(alpha = 0.7) +\n  labs(\n    title = \"Box Plot of Fish Lengths by Lake\",\n    x = \"Lake\",\n    y = \"Total Length (mm)\"\n  )\n```\n\n::: {.cell-output-display}\n![](03_01_lecture_powerpoint_files/figure-docx/boxplot-2.png)\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n# Lecture 3: Comparing Mean vs. Median\n\n::::: columns\n::: {.column width=\"60%\"}\nThe mean and median measure different aspects of a distribution:\n\nMean: Center of gravity of the distribution\n\nMedian: Middle value of the data\n\nWhen a distribution is symmetric, the mean and median are similar. When it's skewed or has outliers, they can differ significantly.\n:::\n\n::: {.column width=\"40%\"}\nstuff\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate summary statistics by lake\nstats_by_lake <- grayling_df %>%\n  group_by(lake) %>%\n  summarise(\n    mean = mean(total_length_mm),\n    median = median(total_length_mm),\n    sd = sd(total_length_mm),\n    iqr = IQR(total_length_mm),\n    skewness = moments::skewness(total_length_mm)\n  )\n\n# Display the results\nkable(stats_by_lake, caption = \"Comparison of Mean and Median by Lake\", digits = 1)\n```\n\n::: {.cell-output-display}\n\n\nTable: Comparison of Mean and Median by Lake\n\n|lake |  mean| median|   sd| iqr| skewness|\n|:----|-----:|------:|----:|---:|--------:|\n|I3   | 265.6|    266| 28.3|  24|     -0.9|\n|I8   | 362.6|    373| 52.3|  61|     -1.1|\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n:::\n:::::\n\n# Lecture 3: Comparing Mean vs. Mediany\n\n::::: columns\n::: {.column width=\"60%\"}\nThe mean and median measure different aspects of a distribution:\n\nMean: Center of gravity of the distribution\n\nMedian: Middle value of the data\n\nWhen a distribution is symmetric, the mean and median are similar. When it's skewed or has outliers, they can differ significantly.\n:::\n\n::: {.column width=\"40%\"}\nstuff\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a density plot with vertical lines for mean and median\nggplot(grayling_df, aes(x = total_length_mm, fill = lake)) +\n  geom_density(alpha = 0.5) +\n  geom_vline(data = stats_by_lake, \n             aes(xintercept = mean, color = \"Mean\"), \n             linetype = \"dashed\", linewidth = 1) +\n  geom_vline(data = stats_by_lake, \n             aes(xintercept = median, color = \"Median\"), \n             linetype = \"solid\", linewidth = 1) +\n  scale_color_manual(values = c(\"Mean\" = \"red\", \"Median\" = \"blue\")) +\n  facet_wrap(~ lake, ncol = 1) +\n  labs(\n    title = \"Density of Fish Lengths\",\n    x = \"Total Length (mm)\",\n    y = \"Density\",\n    color = \"Statistic\"\n  )\n```\n\n::: {.cell-output-display}\n![](03_01_lecture_powerpoint_files/figure-docx/mean-vs-median-plot-1.png)\n:::\n:::\n\n\n\n\n\n\n\n\n\n:::\n:::::\n\n# Lecture 3: Standard Deviation vs. Interquartile Range\n\n::::: columns\n::: {.column width=\"60%\"}\nThe standard deviation and interquartile range both measure spread, but:\n\nStandard deviation: Sensitive to outliers\n\nInterquartile range: Robust against outliers\n\nWhen the data is approximately normal, the IQR ≈ 1.35 × standard deviation.\n:::\n\n::: {.column width=\"40%\"}\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate the ratio of IQR to SD for our data\ngrayling_df %>%\n  group_by(lake) %>%\n  summarise(\n    sd = sd(total_length_mm),\n    iqr = IQR(total_length_mm),\n    ratio_iqr_sd = IQR(total_length_mm) / sd(total_length_mm)\n  ) %>%\n  kable(caption = \"Comparison of SD and IQR by Lake\", digits = 2)\n```\n\n::: {.cell-output-display}\n\n\nTable: Comparison of SD and IQR by Lake\n\n|lake |    sd| iqr| ratio_iqr_sd|\n|:----|-----:|---:|------------:|\n|I3   | 28.30|  24|         0.85|\n|I8   | 52.34|  61|         1.17|\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n:::\n:::::\n\n# Lecture 3: Standard Deviation vs. Interquartile Range\n\n::::: columns\n::: {.column width=\"60%\"}\nPercentiles are values that divide a dataset into 100 equal parts.\n\nThe 25th percentile is the first quartile (Q1)\n\nThe 50th percentile is the median\n\nThe 75th percentile is the third quartile (Q3)\n\nThe IQR is the difference between Q3 and Q1.\n:::\n\n::: {.column width=\"40%\"}\nstuff\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate percentiles\npercentiles <- quantile(grayling_df$total_length_mm, \n                       probs = c(0.1, 0.25, 0.5, 0.75, 0.9))\n\n# Display the percentiles\nkable(\n  data.frame(\n    Percentile = c(\"10th\", \"25th (Q1)\", \"50th (Median)\", \"75th (Q3)\", \"90th\"),\n    Value = percentiles\n  ),\n  caption = \"Key Percentiles of Fish Length (mm)\",\n  digits = 1\n)\n```\n\n::: {.cell-output-display}\n\n\nTable: Key Percentiles of Fish Length (mm)\n\n|    |Percentile    | Value|\n|:---|:-------------|-----:|\n|10% |10th          | 251.1|\n|25% |25th (Q1)     | 270.8|\n|50% |50th (Median) | 324.5|\n|75% |75th (Q3)     | 377.0|\n|90% |90th          | 408.6|\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n:::\n:::::\n\n# Lecture 3: Handling Missing Values\n\n::::: columns\n::: {.column width=\"60%\"}\nLet's examine how missing values affect our descriptive statistics by looking at the mass variable, which has some missing data.\n:::\n\n::: {.column width=\"40%\"}\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Check for missing values in mass\nsum(is.na(grayling_df$mass_g))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2\n```\n\n\n:::\n\n```{.r .cell-code}\n# Calculate descriptive statistics with and without handling missing values\n# Without handling (will produce NA results)\ncat(\"Mean mass without handling NAs:\", mean(grayling_df$mass_g), \"g\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nMean mass without handling NAs: NA g\n```\n\n\n:::\n\n```{.r .cell-code}\n# With handling missing values\ncat(\"Mean mass with na.rm=TRUE:\", mean(grayling_df$mass_g, na.rm = TRUE), \"g\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nMean mass with na.rm=TRUE: 351.2289 g\n```\n\n\n:::\n\n```{.r .cell-code}\n# Calculate descriptive statistics by lake, properly handling NAs\ngrayling_df %>%\n  group_by(lake) %>%\n  summarise(\n    mean_mass = mean(mass_g, na.rm = TRUE),\n    median_mass = median(mass_g, na.rm = TRUE),\n    sd_mass = sd(mass_g, na.rm = TRUE),\n    n_missing = sum(is.na(mass_g))\n  ) %>%\n  kable(caption = \"Mass Statistics by Lake (Handling Missing Values)\", digits = 1)\n```\n\n::: {.cell-output-display}\n\n\nTable: Mass Statistics by Lake (Handling Missing Values)\n\n|lake | mean_mass| median_mass| sd_mass| n_missing|\n|:----|---------:|-----------:|-------:|---------:|\n|I3   |     150.5|         147|    42.2|         0|\n|I8   |     483.7|         490|   176.5|         2|\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n:::\n:::::\n\n# Lecture 3: Best Practices for Handling Missing Values:\n\n1.  Always check for missing values in your data before calculating statistics.\n\n2.  Use na.rm = TRUE when calculating summary statistics to handle missing values.\n\n3.  Report the number of missing values along with your statistics.\n\n4.  Consider whether the missing values are random or might introduce bias.\n\n# **Sampling from a Population**\n\nNow that we have estimates of the sample we need to relate that to the population\n\n::::: columns\n::: {.column width=\"60%\"}\nIn reality, we rarely know the true population parameters. When studying fish in lakes I3 and I8:\n\n-   The **population** includes all grayling fish in each lake\n-   The true population mean (μ) and standard deviation (σ) are unknown\n-   Our dataset is a **sample** from this population\n-   We use the sample mean (x̄) to estimate μ\n-   Sampling introduces random variation in our estimates\n\nLet's demonstrate how different samples from the same population can give different estimates.\n:::\n\n::: {.column width=\"40%\"}\nIf we could sample all fish in the lake, we would know the true mean length. But that's usually impossible in ecology!\n:::\n:::::\n\n# **Demonstrating Sampling Variation**\n\nLet's take several random samples from Lake I3 and see how the sample means vary:\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter for Lake I3\ni3_data <- grayling_df %>% filter(lake == \"I3\")\n\n# Function to take a random sample and calculate the mean\nsample_mean <- function(data, sample_size) {\n  sample_data <- sample_n(data, sample_size)\n  return(mean(sample_data$total_length_mm))\n}\n\n# Take 10 different samples of size 15 from Lake I3\nset.seed(123) # For reproducibility\nsample_size <- 15\nsample_means <- replicate(10, sample_mean(i3_data, sample_size))\n\n# Create a data frame with sample numbers and means\nsamples_df <- data.frame(\n  sample_number = 1:10,\n  sample_mean = sample_means\n)\n\n# Display the sample means\nsamples_df\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   sample_number sample_mean\n1              1    269.9333\n2              2    260.6000\n3              3    255.2000\n4              4    263.4000\n5              5    275.3333\n6              6    279.2667\n7              7    263.7333\n8              8    273.6000\n9              9    264.8000\n10            10    269.8667\n```\n\n\n:::\n\n```{.r .cell-code}\n# Calculate the mean and standard deviation of the sample means\nmean(sample_means)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 267.5733\n```\n\n\n:::\n\n```{.r .cell-code}\nsd(sample_means)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 7.346063\n```\n\n\n:::\n\n```{.r .cell-code}\n# Plot the different sample means\nggplot(samples_df, aes(x = factor(sample_number), y = sample_mean)) +\n  geom_point(size = 3, color = \"blue\") +\n  geom_hline(yintercept = mean(i3_data$total_length_mm), \n             linetype = \"dashed\", color = \"red\") +\n  annotate(\"text\", x = 5, y = mean(i3_data$total_length_mm) + 2, \n           label = \"Overall sample mean\", color = \"red\") +\n  labs(title = \"Means of 10 Random Samples from Lake I3\",\n       x = \"Sample Number\",\n       y = \"Sample Mean (mm)\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](03_01_lecture_powerpoint_files/figure-docx/unnamed-chunk-4-1.png)\n:::\n:::\n\n\n\n\n\n\n\n\n\n\nNotice how each sample's mean differs from the overall mean. This demonstrates sampling variation.\n\n# **Standard Error: Quantifying Uncertainty**\n\n::::: columns\n::: {.column width=\"60%\"}\nThe **standard error of the mean (SEM)** measures the precision of a sample mean as an estimate of the population mean.\n\nFormula: $SE_{\\bar{x}} = \\frac{s}{\\sqrt{n}}$\n\nWhere: - s is the sample standard deviation - n is the sample size\n\nThe standard error tells us: - How much uncertainty is in our estimate - How much sample means are expected to vary - How close our sample mean is likely to be to the true population mean\n:::\n\n::: {.column width=\"40%\"}\n**Remember:** - Standard deviation (s) describes the variability in the individual data points - Standard error (SE) describes the variability in the sample mean itself - As sample size increases, SE decreases (more precise estimate)\n:::\n:::::\n\n# **Standard Error for Our Grayling Data**\n\nLet's calculate and visualize the standard error for both lakes:\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate mean, SD, and SE for each lake\ngrayling_stats <- grayling_df %>%\n  group_by(lake) %>%\n  summarize(\n    mean_length = mean(total_length_mm),\n    sd_length = sd(total_length_mm),\n    n = n(),\n    se_length = sd_length / sqrt(n)\n  )\n\n# Display the statistics\ngrayling_stats\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 5\n  lake  mean_length sd_length     n se_length\n  <chr>       <dbl>     <dbl> <int>     <dbl>\n1 I3           266.      28.3    66      3.48\n2 I8           363.      52.3   102      5.18\n```\n\n\n:::\n\n```{.r .cell-code}\n# Create a bar plot with error bars representing ±1 SE\nggplot(grayling_stats, aes(x = lake, y = mean_length, fill = lake)) +\n  geom_bar(stat = \"identity\", alpha = 0.7) +\n  geom_errorbar(aes(ymin = mean_length - se_length, \n                    ymax = mean_length + se_length),\n                width = 0.2) +\n  labs(title = \"Mean Fish Length by Lake with Standard Error\",\n       subtitle = \"Error bars represent ±1 standard error\",\n       x = \"Lake\",\n       y = \"Mean Length (mm)\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](03_01_lecture_powerpoint_files/figure-docx/unnamed-chunk-5-1.png)\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n# **Sampling Distribution of the Mean**\n\n::::: columns\n::: {.column width=\"60%\"}\nThe **sampling distribution of the mean** is the theoretical distribution of all possible sample means of a given sample size from a population.\n\nImportant properties: 1. It is centered at the population mean (μ) 2. Its standard deviation is the standard error (σ/√n) 3. For large sample sizes, it approaches a normal distribution (Central Limit Theorem)\n\nThe larger the sample size: - The narrower the sampling distribution - The smaller the standard error - The more precise our estimate of the population mean\n:::\n\n::: {.column width=\"40%\"}\nLet's simulate the sampling distribution for Lake I3 fish data.\n:::\n:::::\n\n# **Simulating the Sampling Distribution**\n\nLet's simulate taking many samples from Lake I3 to visualize the sampling distribution:\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter for Lake I3\ni3_data <- grayling_df %>% filter(lake == \"I3\")\n\n# Number of samples to simulate\nnum_simulations <- 1000\nsample_size <- 20\n\n# Simulate many samples and calculate means\nset.seed(456) # For reproducibility\nsimulated_means <- replicate(num_simulations, sample_mean(i3_data, sample_size))\n\n# Calculate the mean and standard deviation of the simulated means\nmean_of_means <- mean(simulated_means)\nsd_of_means <- sd(simulated_means)\n\n# Create a data frame with the simulated means\nsimulated_df <- data.frame(sample_mean = simulated_means)\n\n# Plot the sampling distribution\nggplot(simulated_df, aes(x = sample_mean)) +\n  geom_histogram(bins = 30, fill = \"blue\", alpha = 0.7) +\n  geom_vline(xintercept = mean(i3_data$total_length_mm), \n             linetype = \"dashed\", color = \"red\", size = 1) +\n  annotate(\"text\", x = mean(i3_data$total_length_mm) + 2, y = 50, \n           label = \"Full sample mean\", color = \"red\") +\n  labs(title = \"Simulated Sampling Distribution of the Mean\",\n       subtitle = paste(\"Based on\", num_simulations, \"samples of size\", sample_size),\n       x = \"Sample Mean (mm)\",\n       y = \"Frequency\") +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](03_01_lecture_powerpoint_files/figure-docx/unnamed-chunk-6-1.png)\n:::\n:::\n\n\n\n\n\n\n\n\n\n\nNotice that the simulated sampling distribution:\n\n1.  Is approximately normally distributed\n\n2.  Is centered around the overall sample mean\n\n3.  Has a spread that is related to the standard error\n\n# **Standard Error and Sample Size**\n\nLet's see how the standard error changes with different sample sizes:\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define a range of sample sizes to test\nsample_sizes <- c(5, 10, 20, 30, 50)\n\n# For each sample size, simulate the sampling distribution and calculate SE\nresults <- data.frame()\n\nfor (size in sample_sizes) {\n  # Simulate many sample means for this sample size\n  simulated_means <- replicate(500, sample_mean(i3_data, size))\n  \n  # Calculate the standard deviation of the sampling distribution (empirical SE)\n  empirical_se <- sd(simulated_means)\n  \n  # Calculate the theoretical SE\n  theoretical_se <- sd(i3_data$total_length_mm) / sqrt(size)\n  \n  # Add to results\n  results <- rbind(results, data.frame(\n    sample_size = size,\n    empirical_se = empirical_se,\n    theoretical_se = theoretical_se\n  ))\n}\n\n# Display the results\nresults\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  sample_size empirical_se theoretical_se\n1           5    12.349407      12.657835\n2          10     8.178270       8.950441\n3          20     5.558957       6.328918\n4          30     3.792177       5.167540\n5          50     2.099744       4.002759\n```\n\n\n:::\n\n```{.r .cell-code}\n# Plot how SE changes with sample size\nresults_long <- pivot_longer(results, \n                             cols = c(empirical_se, theoretical_se),\n                             names_to = \"se_type\", \n                             values_to = \"standard_error\")\n\nggplot(results_long, aes(x = sample_size, y = standard_error, color = se_type)) +\n  geom_line() +\n  geom_point(size = 3) +\n  scale_x_continuous(breaks = sample_sizes) +\n  labs(title = \"Standard Error vs. Sample Size\",\n       subtitle = \"Standard error decreases as sample size increases\",\n       x = \"Sample Size\",\n       y = \"Standard Error\",\n       color = \"SE Type\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](03_01_lecture_powerpoint_files/figure-docx/unnamed-chunk-7-1.png)\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n# **Confidence Intervals**\n\n::::: columns\n::: {.column width=\"60%\"}\nA **confidence interval** is a range of values that is likely to contain the true population parameter.\n\nThe 95% confidence interval for the mean is approximately:\n\n$\\bar{x} \\pm 2 \\times SE_{\\bar{x}}$\n\nThis \"2 SE rule of thumb\" means: - The interval extends 2 standard errors below and above the sample mean - About 95% of such intervals constructed from different samples would contain the true population mean\n:::\n\n::: {.column width=\"40%\"}\nConfidence intervals provide a way to express the precision of our estimates.\n:::\n:::::\n\n# **Calculating Confidence Intervals for Grayling Data**\n\nLet's calculate and visualize the 95% confidence intervals for the mean fish length in each lake:\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate 95% confidence intervals\ngrayling_ci <- grayling_df %>%\n  group_by(lake) %>%\n  summarize(\n    mean_length = mean(total_length_mm),\n    sd_length = sd(total_length_mm),\n    n = n(),\n    se_length = sd_length / sqrt(n),\n    ci_lower = mean_length - 2 * se_length,\n    ci_upper = mean_length + 2 * se_length\n  )\n\n# Display the confidence intervals\ngrayling_ci\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 7\n  lake  mean_length sd_length     n se_length ci_lower ci_upper\n  <chr>       <dbl>     <dbl> <int>     <dbl>    <dbl>    <dbl>\n1 I3           266.      28.3    66      3.48     259.     273.\n2 I8           363.      52.3   102      5.18     352.     373.\n```\n\n\n:::\n\n```{.r .cell-code}\n# Plot with confidence intervals\nggplot(grayling_ci, aes(x = lake, y = mean_length, fill = lake)) +\n  geom_bar(stat = \"identity\", alpha = 0.7) +\n  geom_errorbar(aes(ymin = ci_lower, ymax = ci_upper),\n                width = 0.2) +\n  labs(title = \"Mean Fish Length by Lake with 95% Confidence Intervals\",\n       subtitle = \"Error bars represent 95% confidence intervals\",\n       x = \"Lake\",\n       y = \"Mean Length (mm)\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](03_01_lecture_powerpoint_files/figure-docx/unnamed-chunk-8-1.png)\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n# **Different Types of Error Bars**\n\nLet's compare different ways of displaying uncertainty in our estimates:\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate statistics for different types of error bars\ngrayling_error_bars <- grayling_df %>%\n  group_by(lake) %>%\n  summarize(\n    mean_length = mean(total_length_mm),\n    sd_length = sd(total_length_mm),\n    n = n(),\n    se_length = sd_length / sqrt(n),\n    ci_lower = mean_length - 1.96 * se_length,\n    ci_upper = mean_length + 1.96 * se_length,\n    one_sd_lower = mean_length - sd_length,\n    one_sd_upper = mean_length + sd_length\n  )\n\n# Create a data frame for plotting different error types\nlake_i3 <- grayling_error_bars %>% filter(lake == \"I3\")\n\nerror_types <- data.frame(\n  error_type = c(\"Standard Deviation\", \"Standard Error\", \"95% Confidence Interval\"),\n  lower = c(lake_i3$one_sd_lower, \n            lake_i3$mean_length - lake_i3$se_length, \n            lake_i3$ci_lower),\n  upper = c(lake_i3$one_sd_upper, \n            lake_i3$mean_length + lake_i3$se_length, \n            lake_i3$ci_upper)\n)\n\n# Plot the comparison\nggplot() +\n  geom_point(data = lake_i3, aes(x = \"Mean\", y = mean_length), size = 4) +\n  geom_errorbar(data = error_types, \n                aes(x = error_type, ymin = lower, ymax = upper, color = error_type),\n                width = 0.2, size = 1) +\n  labs(title = \"Different Types of Error Bars for Lake I3\",\n       subtitle = \"Comparing standard deviation, standard error, and 95% confidence interval\",\n       x = \"\",\n       y = \"Length (mm)\",\n       color = \"Error Bar Type\") +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](03_01_lecture_powerpoint_files/figure-docx/unnamed-chunk-9-1.png)\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n# **Key Takeaways**\n\n-   The **standard error** measures the precision of a sample statistic as an estimate of a population parameter\n-   The standard error of the mean decreases as sample size increases: $SE_{\\bar{x}} = \\frac{s}{\\sqrt{n}}$\n-   The **sampling distribution** shows the variation in sample statistics that would be expected due to random sampling\n-   **Confidence intervals** provide a range of plausible values for the population parameter\n-   Larger sample sizes provide more precise estimates (narrower confidence intervals)\n-   When reporting results, always include a measure of precision (SE or\n    CI) \n\n# **For Further Practice**\n\n-   Try calculating the standard error and confidence intervals for other variables in the dataset\n-   Experiment with different sample sizes to see how they affect the precision of estimates\n-   Compare the means of the two lakes using confidence intervals - do they overlap?\n-   Consider how these concepts extend to other statistics beyond the mean\n\n# Lecture 3: Conclusion\n\nIn this lecture, we've explored:\n\n-   Why statistics is essential in biology\n-   Types of biological variables and their properties\n-   Accuracy, precision, and bias in measurements\n-   Measures of central tendency (mean, median, geometric mean)\n-   Measures of spread (standard deviation, variance, and interquartile range)\n-   Data transformations for skewed distributions\n-   Visualization techniques for understanding distributions\n-   Handling missing values\n\nThese tools form the foundation of statistical analysis and will be essential as we move forward to more complex statistical methods.\n\n# \n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}