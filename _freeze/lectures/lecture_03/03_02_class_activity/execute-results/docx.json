{
  "hash": "b535b7b7cef86f8083cae14fdf1a0cff",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"03_Class_Activity\"\nauthor: \"Bill Perry\"\nexecute:\n  freeze: auto\n  cache: true\n  echo: true\n  keep-md: true # retains the images when you start again\n  fig-width: 3\n  fig-height: 4\nformat:\n  html:\n    freeze: false\n    toc: false\n    output-file: \"03_02_class_activity.html\"\n    default: true\n    embed-resources: true\n    self-contained: true\n    max-width: 80ch  # Limits line length to approximately 80 characters\n    css: ../../css/activity.css\n  docx:\n    default: true\n    toc: false\n    toc-depth: 3\n    number-sections: false\n    highlight-style: github\n    reference-doc: ../../ms_templates/custom-reference.docx\n    css: msword.css\n    embed-resources: true\n---\n\n\n\n\n\n\n# In class activity 3:\n\n# ![](images/grayling.jpeg)\n\n# What did we do last time?\n\n-   Implement data pipeline best practices\n\n-   Apply controlled vocabulary and naming conventions\n\n-   Create effective visualizations\n\n-   Customize plots for publication quality\n\n-   Combine multiple plots into composite figures\n\n    ``` r\n    ggplot(name_df, aes(x_variable, y_variable, color = categorical_variable)) +\n    #      dataframe, aesthetics(x and y variables, mapping of color or fill or shape) + \n      geom_point() +\n    # this it the geometry you want and can add more layers like\n      geom_line()\n    ```\n\n-   What questions do you have and what is unclear\n\n-   What did not work so far when you started the homework?\n\n# Objectives and goals for today\n\n::::: columns\n::: {.column width=\"60%\"}\n## Today's Objectives\n\n1.  Implement descriptive statistics in R\n2.  Calculate measures of central tendency and spread\n3.  Compare distributions of data from different groups\n4.  Create effective visualizations of descriptive statistics\n5.  Interpret the meaning of these statistics in a biological context\n:::\n\n::: {.column width=\"40%\"}\n![](images/clipboard-2773654510.png)\n:::\n:::::\n\n# Part 1: Setting Up Your Environment\n\nFirst, let's load the necessary packages and import our data:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load required packages\nlibrary(tidyverse)    # For data wrangling and visualization\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(knitr)        # For creating tables\nlibrary(moments)      # For calculating skewness and kurtosis\n\n# Set a consistent theme for our plots\ntheme_set(theme_minimal(base_size = 12))\n```\n:::\n\n\n\n\n\n\n## Getting the data\n\n::: callout-tip\n## Practice Exercise 1: Loading and Examining the Grayling Data\n\nWe'll be working with data on arctic grayling fish from two different lakes (I3 and I8).\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Write your code here to read in the file\n# How do you examine the data - what are the ways you think and lets try it!\n\n# Load the grayling data\ngrayling_df <- read_csv(\"data/gray_I3_I8.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 168 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): lake, species\ndbl (3): site, length_mm, mass_g\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\n# View the first few rows\nhead(grayling_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 5\n   site lake  species         length_mm mass_g\n  <dbl> <chr> <chr>               <dbl>  <dbl>\n1   113 I3    arctic grayling       266    135\n2   113 I3    arctic grayling       290    185\n3   113 I3    arctic grayling       262    145\n4   113 I3    arctic grayling       275    160\n5   113 I3    arctic grayling       240    105\n6   113 I3    arctic grayling       265    145\n```\n\n\n:::\n:::\n\n\n\n\n\n:::\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Examine the data structure\nglimpse(grayling_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 168\nColumns: 5\n$ site      <dbl> 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, …\n$ lake      <chr> \"I3\", \"I3\", \"I3\", \"I3\", \"I3\", \"I3\", \"I3\", \"I3\", \"I3\", \"I3\", …\n$ species   <chr> \"arctic grayling\", \"arctic grayling\", \"arctic grayling\", \"ar…\n$ length_mm <dbl> 266, 290, 262, 275, 240, 265, 265, 253, 246, 203, 289, 239, …\n$ mass_g    <dbl> 135, 185, 145, 160, 105, 145, 150, 130, 130, 71, 179, 108, 1…\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get a statistical summary\nsummary(grayling_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      site         lake             species            length_mm    \n Min.   :113   Length:168         Length:168         Min.   :191.0  \n 1st Qu.:113   Class :character   Class :character   1st Qu.:270.8  \n Median :118   Mode  :character   Mode  :character   Median :324.5  \n Mean   :116                                         Mean   :324.5  \n 3rd Qu.:118                                         3rd Qu.:377.0  \n Max.   :118                                         Max.   :440.0  \n                                                                    \n     mass_g     \n Min.   : 53.0  \n 1st Qu.:151.2  \n Median :340.0  \n Mean   :351.2  \n 3rd Qu.:519.5  \n Max.   :889.0  \n NA's   :2      \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# How many fish do we have from each lake?\nkable(grayling_df %>%\n  count(lake))\n```\n\n::: {.cell-output-display}\n\n\n|lake |   n|\n|:----|---:|\n|I3   |  66|\n|I8   | 102|\n\n\n:::\n:::\n\n\n\n\n\n\n# Questions to Consider:\n\n1.  What variables are in our dataset?\n2.  What are their data types?\n3.  Are there any missing values?\n4.  What is the range of fish lengths in our dataset?\n5.  How many fish were sampled from each lake?\n\n# Part 2: Calculating Descriptive Statistics\n\n## Let's calculate various descriptive statistics for our data:\n\n## \n\n::: callout-tip\n## Practice Exercise 2: Measures of Central Tendency\n\nLet's recreate the basic histogram of fish lengths from our last class. Use the `sculpin_df` data frame that's already loaded.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Write your code here to read in the file\n# How do you examine the data - what are the ways you think and lets try it!\n# Calculate the mean and median fish length\nmean_length <- mean(grayling_df$length_mm)\nmedian_length <- median(grayling_df$length_mm)\n\ncat(\"Mean fish length:\", round(mean_length, 1), \"mm\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nMean fish length: 324.5 mm\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Median fish length:\", median_length, \"mm\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nMedian fish length: 324.5 mm\n```\n\n\n:::\n:::\n\n\n\n\n\n:::\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate mean and median by lake\ngrayling_df %>%\n  group_by(lake) %>%\n  summarise(\n    mean_length = mean(length_mm),\n    median_length = median(length_mm)\n  ) %>%\n  kable(caption = \"Mean and median fish length by lake\", digits = 1)\n```\n\n::: {.cell-output-display}\n\n\nTable: Mean and median fish length by lake\n\n|lake | mean_length| median_length|\n|:----|-----------:|-------------:|\n|I3   |       265.6|           266|\n|I8   |       362.6|           373|\n\n\n:::\n:::\n\n\n\n\n\n\n## Summarizing data - two ways\n\nlets say we want to summarize the data and need to get n, means, standard deviation, standard error\n\nWe could do the following - if we had missing cells the code below would give an error\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(grayling_df$length_mm) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 324.494\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(grayling_df$length_mm, na.rm = TRUE) # removes missing values\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 324.494\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlength(grayling_df$length_mm)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 168\n```\n\n\n:::\n:::\n\n\n\n\n\n\n-   the length counts missing and non-missing data\n\n-   however this would get old if we had to do this for everything and then to do it for the different groupings - lee and windward...\n\n## We need to learn to pipe things\n\n-   the dataframe –\\> pipe command that feed the dataframe into –\\> next command\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngrayling_df %>% summarize(mean_length = mean(length_mm, na.rm = TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n  mean_length\n        <dbl>\n1        324.\n```\n\n\n:::\n:::\n\n\n\n\n\n\n## What is cool is we can do a lot of different things now\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngrayling_df %>% \n  summarize(\n    mean_length = mean(length_mm, na.rm = TRUE),\n    sd_length = sd(length_mm, na.rm = TRUE),\n    n_length = n())\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 3\n  mean_length sd_length n_length\n        <dbl>     <dbl>    <int>\n1        324.      65.0      168\n```\n\n\n:::\n:::\n\n\n\n\n\n\n## Super cool code in case there are missing values\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngrayling_df %>% \n  summarize(\n    mean_length = mean(length_mm, na.rm = TRUE),\n    sd_length = sd(length_mm, na.rm = TRUE),\n    n_length = sum(!is.na(length_mm)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 3\n  mean_length sd_length n_length\n        <dbl>     <dbl>    <int>\n1        324.      65.0      168\n```\n\n\n:::\n:::\n\n\n\n\n\n\n# Now for Spread...\n\n::: callout-tip\n## Practice Exercise 3: Measures of Spread\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Write your code here to read in the file\n# Calculate standard deviation, variance, and IQR\nsd_length <- sd(grayling_df$length_mm)\nvar_length <- var(grayling_df$length_mm)\niqr_length <- IQR(grayling_df$length_mm)\n\ncat(\"Standard deviation:\", round(sd_length, 1), \"mm\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nStandard deviation: 65 mm\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Variance:\", round(var_length, 1), \"mm²\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nVariance: 4225.9 mm²\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Interquartile range:\", iqr_length, \"mm\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nInterquartile range: 106.25 mm\n```\n\n\n:::\n:::\n\n\n\n\n\n:::\n\n::: callout-tip\n## Exercise 4: Calculate Quartiles and Percentiles\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate quartiles for overall data\nquartiles <- quantile(grayling_df$length_mm, probs = c(0.25, 0.5, 0.75))\ncat(\"First quartile (Q1):\", quartiles[1], \"mm\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nFirst quartile (Q1): 270.75 mm\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Second quartile (Median):\", quartiles[2], \"mm\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSecond quartile (Median): 324.5 mm\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Third quartile (Q3):\", quartiles[3], \"mm\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nThird quartile (Q3): 377 mm\n```\n\n\n:::\n\n```{.r .cell-code}\n# Calculate a more comprehensive set of percentiles\npercentiles <- quantile(grayling_df$length_mm, \n                        probs = c(0.1, 0.25, 0.5, 0.75, 0.9))\n\n# Display the percentiles\nkable(\n  data.frame(\n    Percentile = c(\"10th\", \"25th (Q1)\", \"50th (Median)\", \"75th (Q3)\", \"90th\"),\n    Value = percentiles\n  ),\n  caption = \"Key Percentiles of Fish Length (mm)\",\n  digits = 1\n)\n```\n\n::: {.cell-output-display}\n\n\nTable: Key Percentiles of Fish Length (mm)\n\n|    |Percentile    | Value|\n|:---|:-------------|-----:|\n|10% |10th          | 251.1|\n|25% |25th (Q1)     | 270.8|\n|50% |50th (Median) | 324.5|\n|75% |75th (Q3)     | 377.0|\n|90% |90th          | 408.6|\n\n\n:::\n:::\n\n\n\n\n\n:::\n\n### Note you could add a box plot by lake to see this if you wanted\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngrayling_df %>% \n  ggplot(aes(lake, length_mm, color= lake))+\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](03_02_class_activity_files/figure-docx/boxplot-1.png)\n:::\n:::\n\n\n\n\n\n\n::: callout-tip\n### Exercise 5: Calculate the Coefficient of Variation\n\nThe coefficient of variation (CV) is the standard deviation expressed as a percentage of the mean:\n\n$$CV = \\frac{s}{\\bar{Y}} \\times 100\\%$$\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate coefficient of variation\ncv_length <- sd_length / mean_length * 100\ncat(\"Coefficient of variation:\", round(cv_length, 1), \"%\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoefficient of variation: 20 %\n```\n\n\n:::\n\n```{.r .cell-code}\n# Calculate by lake\ngrayling_df %>%\n  group_by(lake) %>%\n  summarise(\n    mean_length = mean(length_mm),\n    sd_length = sd(length_mm),\n    cv_length = sd_length / mean_length * 100\n  ) %>%\n  kable(caption = \"Coefficient of variation by lake\", digits = 1)\n```\n\n::: {.cell-output-display}\n\n\nTable: Coefficient of variation by lake\n\n|lake | mean_length| sd_length| cv_length|\n|:----|-----------:|---------:|---------:|\n|I3   |       265.6|      28.3|      10.7|\n|I8   |       362.6|      52.3|      14.4|\n\n\n:::\n:::\n\n\n\n\n\n:::\n\n### Questions to Consider:\n\n1.  How do the means and medians compare within each lake? What might this tell you about the distribution?\n2.  Which lake has more variable fish lengths? How can you tell?\n3.  Why might the coefficient of variation be useful when comparing variability between different measurements (e.g., length vs. mass)?\n\n## Part 3: Visualizing Distributions\n\nVisualizations can help us better understand the descriptive statistics we've calculated.\n\n::: callout-tip\n### Exercise 6: Creating Histograms\n\nOne of the best ways to look at data is a histogram - and we will do it again\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a histogram of all fish lengths\nggplot(grayling_df, aes(x = length_mm)) +\n  geom_histogram(bins = 15, fill = \"steelblue\", color = \"white\") +\n  labs(\n    title = \"Distribution of Fish Lengths\",\n    x = \"Total Length (mm)\",\n    y = \"Count\"\n  )\n```\n\n::: {.cell-output-display}\n![](03_02_class_activity_files/figure-docx/histograms-1.png)\n:::\n:::\n\n\n\n\n\n:::\n\n### \n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create histograms by lake\nggplot(grayling_df, aes(x = length_mm, fill = lake)) +\n  geom_histogram(bins = 15, position = \"dodge\", alpha = 0.7) +\n  labs(\n    title = \"Distribution of Fish Lengths by Lake\",\n    x = \"Total Length (mm)\",\n    y = \"Count\"\n  )\n```\n\n::: {.cell-output-display}\n![](03_02_class_activity_files/figure-docx/unnamed-chunk-11-1.png)\n:::\n:::\n\n\n\n\n\n\n::: callout-tip\n### Exercise 7: Creating Box Plots\n\nPersonally I like box plots\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a box plot comparing fish lengths by lake\n# Create a box plot comparing fish lengths by lake\nggplot(grayling_df, aes(x = lake, y = length_mm, fill = lake)) +\n  geom_boxplot() +\n  labs(\n    title = \"Box Plot of Fish Lengths by Lake\",\n    x = \"Lake\",\n    y = \"Total Length (mm)\"\n  )\n```\n\n::: {.cell-output-display}\n![](03_02_class_activity_files/figure-docx/boxplots-1.png)\n:::\n:::\n\n\n\n\n\n:::\n\n### \n\n::: callout-tip\n### Exercise 9: Creating Density Plots\n\nNow these will be really important later on\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Create density plots\nggplot(grayling_df, aes(x = length_mm, fill = lake)) +\n  geom_density(alpha = 0.5) +\n  labs(\n    title = \"Density Plot of Fish Lengths by Lake\",\n    x = \"Total Length (mm)\",\n    y = \"Density\"\n  )\n```\n\n::: {.cell-output-display}\n![](03_02_class_activity_files/figure-docx/density-plots-1.png)\n:::\n:::\n\n\n\n\n\n:::\n\n### \n\n### Questions to Consider:\n\n1.  Which visualization best shows the differences in fish lengths between lakes?\n2.  What can you learn from the violin plots that might not be apparent from the box plots?\n3.  How would you interpret the cumulative frequency distribution?\n4.  What patterns or insights can you identify from these visualizations?\n\n## Part 4: Interpreting the Results\n\nBased on our analysis, we can make the following observations:\n\n1.  **Lake Differences**: Fish from Lake I8 are generally larger than those from Lake I3, both in length and mass.\n\n2.  **Variability**: Lake I8 shows greater variability in fish lengths and masses than Lake I3, as indicated by higher standard deviations and IQRs.\n\n3.  **Distribution Shape**:\n\n    -   Lake I3 fish lengths are more symmetrically distributed.\n    -   Lake I8 fish lengths show a slight negative skew, suggesting a few smaller fish pulling the distribution to the left.\n\n4.  **Length-Mass Relationship**: Both lakes show a strong positive correlation between fish length and mass, following an approximately cubic relationship (mass increases with the cube of length).\n\n## Guided Questions for Deeper Understanding of descriptive statistics\n\n1.  **Biological Interpretation**: What ecological factors might explain the differences in fish size between the two lakes?\n\n2.  **Statistical Reasoning**: Why might we prefer to use the median and IQR instead of the mean and standard deviation in some cases?\n\n3.  **Data Visualization**: Which visualization method was most effective for comparing the two lakes? Why?\n\n4.  **Scientific Communication**: How would you concisely summarize these findings in a scientific paper?\n\n5.  **Further Analysis**: What additional analyses might be useful to better understand this dataset?\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}